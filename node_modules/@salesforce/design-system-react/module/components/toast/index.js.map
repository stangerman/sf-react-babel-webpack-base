{"version":3,"sources":["../../../.tmp-es/components/toast/index.jsx"],"names":["React","PropTypes","assign","classNames","Button","Icon","checkProps","TOAST","DOMElementFocus","propTypes","assistiveText","shape","closeButton","oneOfType","string","node","className","array","object","duration","number","labels","details","heading","headingLink","onClickHeadingLink","func","icon","onRequestClose","variant","oneOf","isRequired","defaultProps","Toast","props","timeout","clearTimeout","component","state","isInitialRender","storeActiveElement","focus","setState","setTimeout","onClose","returnFocusToStoredElement","content","assistiveTextVariant","info","success","warning","error","defaultIcons","clonedIcon","cloneElement","containerClassName","inverse","size","saveButtonRef","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Toast Component\n\n// Implements the [Toast design pattern](https://lightningdesignsystem.com/components/toasts/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\n\nimport classNames from '../../utilities/class-names';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport { TOAST } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `closeButton`: This is a visually hidden label for the close button.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcloseButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-notify_toast`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t * _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * If duration exists, the Toast will disappear after that amount of time. Time in milliseconds. _Tested with Mocha testing._\n\t */\n\tduration: PropTypes.number,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `details`: Secondary text below heading\n\t * * `heading`: text within heading tag\n\t * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tdetails: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theadingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * Triggered by link. _Tested with Mocha testing._\n\t */\n\tonClickHeadingLink: PropTypes.func,\n\t/**\n\t * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n\t * * info variant: `utility:info`\n\t * * error variant: `utility:error`\n\t * * success variant: `utility:success`\n\t * * warning variant: `utility:warning`\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Triggered by close button. _Tested with Mocha testing._\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * The type of Toast. _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcloseButton: 'Close',\n\t},\n\tvariant: 'info',\n};\n\n/**\n * Toast serves as a feedback & confirmation mechanism after the user takes an action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nclass Toast extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisInitialRender: true,\n\t\t};\n\t\tthis.timeout = null;\n\t}\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(TOAST, this.props);\n\t}\n\n\tcomponentDidMount () {\n\t\tif (this.props.duration) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.onClose();\n\t\t\t}, this.props.duration);\n\t\t}\n\t}\n\n\tcomponentWillUnmount () {\n\t\tDOMElementFocus.returnFocusToStoredElement();\n\t}\n\n\tonClose = () => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose();\n\t\t}\n\t};\n\n\tsaveButtonRef = (component) => {\n\t\tthis.closeButton = component;\n\t\tif (this.state.isInitialRender) {\n\t\t\tDOMElementFocus.storeActiveElement();\n\t\t\tif (this.closeButton) {\n\t\t\t\tthis.closeButton.focus();\n\t\t\t}\n\t\t\tthis.setState({ isInitialRender: false });\n\t\t}\n\t};\n\n\trender () {\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\tconst heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\n\t\tconst assistiveTextVariant = {\n\t\t\tinfo: 'info',\n\t\t\tsuccess: 'success',\n\t\t\twarning: 'warning',\n\t\t\terror: 'error',\n\t\t};\n\n\t\tconst defaultIcons = {\n\t\t\tinfo: <Icon category=\"utility\" name=\"info\" />,\n\t\t\tsuccess: <Icon category=\"utility\" name=\"success\" />,\n\t\t\twarning: <Icon category=\"utility\" name=\"warning\" />,\n\t\t\terror: <Icon category=\"utility\" name=\"error\" />,\n\t\t};\n\n\t\tconst icon = this.props.icon\n\t\t\t? this.props.icon\n\t\t\t: defaultIcons[this.props.variant];\n\n\t\tconst clonedIcon = React.cloneElement(icon, {\n\t\t\tcontainerClassName: 'slds-m-right_small slds-no-flex slds-align-top',\n\t\t\tinverse: true,\n\t\t\tsize: 'small',\n\t\t});\n\n\t\t/* eslint-disable no-script-url */\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-notify slds-notify_toast',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_info': this.props.variant === 'info',\n\t\t\t\t\t\t'slds-theme_success': this.props.variant === 'success',\n\t\t\t\t\t\t'slds-theme_warning': this.props.variant === 'warning',\n\t\t\t\t\t\t'slds-theme_error': this.props.variant === 'error',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"alert\"\n\t\t\t>\n\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t{assistiveTextVariant[this.props.variant]}\n\t\t\t\t</span>\n\t\t\t\t{clonedIcon}\n\t\t\t\t<div className=\"slds-notify__content\">\n\t\t\t\t\t<h2 className=\"slds-text-heading_small\">\n\t\t\t\t\t\t{heading}{' '}\n\t\t\t\t\t\t{labels.headingLink ? (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={this.props.onClickHeadingLink}\n\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{labels.headingLink}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</h2>\n\t\t\t\t\t{labels.details ? <p>{labels.details}</p> : null}\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tassistiveText={{ icon: assistiveText.closeButton }}\n\t\t\t\t\tbuttonRef={this.saveButtonRef}\n\t\t\t\t\tclassName=\"slds-notify__close\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\ticonSize=\"large\"\n\t\t\t\t\tinverse\n\t\t\t\t\tonClick={this.props.onRequestClose}\n\t\t\t\t\ttitle={assistiveText.closeButton}\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToast.defaultProps = defaultProps;\nToast.displayName = TOAST;\nToast.propTypes = propTypes;\n\nexport default Toast;\n"],"file":"index.js"}