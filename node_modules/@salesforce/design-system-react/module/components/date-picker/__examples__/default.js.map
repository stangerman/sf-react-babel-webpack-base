{"version":3,"sources":["../../../../.tmp-es/components/date-picker/__examples__/default.jsx"],"names":["React","createReactClass","IconSettings","Datepicker","Example","displayName","render","event","data","props","action","dataAsArray","Object","keys","map","key","console","log"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,IAAMC,UAAUH,iBAAiB;AAChCI,eAAa,mBADmB;AAGhCC,QAHgC,oBAGtB;AAAA;;AACT,WACC,oBAAC,YAAD;AAAc,gBAAS;AAAvB,OACC,oBAAC,UAAD;AACC,gBAAU,kBAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1B,YAAI,MAAKC,KAAL,CAAWC,MAAf,EAAuB;AACtB,cAAMC,cAAcC,OAAOC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsB,UAACC,GAAD;AAAA,mBAASP,KAAKO,GAAL,CAAT;AAAA,WAAtB,CAApB;;AACA,gBAAKN,KAAL,CAAWC,MAAX,CAAkB,UAAlB,iBAA8BH,KAA9B,EAAqCC,IAArC,4BAA8CG,WAA9C;AACA,SAHD,MAGO,IAAIK,OAAJ,EAAa;AACnBA,kBAAQC,GAAR,CAAY,UAAZ,EAAwBV,KAAxB,EAA+BC,IAA/B;AACA;AACD,OARF;AASC,uBAAiB,yBAACD,KAAD,EAAQC,IAAR,EAAiB;AACjC,YAAI,MAAKC,KAAL,CAAWC,MAAf,EAAuB;AACtB,cAAMC,cAAcC,OAAOC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsB,UAACC,GAAD;AAAA,mBAASP,KAAKO,GAAL,CAAT;AAAA,WAAtB,CAApB;;AACA,gBAAKN,KAAL,CAAWC,MAAX,CAAkB,iBAAlB,iBAAqCH,KAArC,EAA4CC,IAA5C,4BAAqDG,WAArD;AACA,SAHD,MAGO,IAAIK,OAAJ,EAAa;AACnBA,kBAAQC,GAAR,CAAY,iBAAZ,EAA+BV,KAA/B,EAAsCC,IAAtC;AACA;AACD;AAhBF,MADD,CADD;AAsBA;AA1B+B,CAAjB,CAAhB;AA6BA,eAAeJ,OAAf,C,CAAwB","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport IconSettings from '~/components/icon-settings';\nimport Datepicker from '~/components/date-picker';\n\nconst Example = createReactClass({\n\tdisplayName: 'DatepickerExample',\n\n\trender () {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Datepicker\n\t\t\t\t\tonChange={(event, data) => {\n\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\tconst dataAsArray = Object.keys(data).map((key) => data[key]);\n\t\t\t\t\t\t\tthis.props.action('onChange')(event, data, ...dataAsArray);\n\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\tconsole.log('onChange', event, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonCalendarFocus={(event, data) => {\n\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\tconst dataAsArray = Object.keys(data).map((key) => data[key]);\n\t\t\t\t\t\t\tthis.props.action('onCalendarFocus')(event, data, ...dataAsArray);\n\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\tconsole.log('onCalendarFocus', event, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t},\n});\n\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"default.js"}