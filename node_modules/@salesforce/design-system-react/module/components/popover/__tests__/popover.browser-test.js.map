{"version":3,"sources":["../../../../.tmp-es/components/popover/__tests__/popover.browser-test.jsx"],"names":["React","createReactClass","PropTypes","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","Popover","Button","IconSettings","use","defaultProps","id","body","heading","defaultIds","trigger","popover","getNodes","wrapper","find","closeButton","DemoComponent","displayName","propTypes","isOpen","bool","getDefaultProps","getInitialState","render","props","describe","mountNode","beforeEach","context","afterEach","it","attachTo","to","exist","node","getAttribute","equal","popoverBackgroundColor","containerBackgroundColor","optionalProps","className","assistiveText","containerClassName","containerStyle","background","footer","style","classList","contains","be","true","textContent","triggerClicked","sinon","spy","done","setTimeout","not","callCount","simulate","key","keyCode","which","nodes","document","activeElement","popoverOpened"],"mappings":"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","sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\n// Import your internal dependencies (for example):\nimport Popover from '../../popover';\nimport Button from '../../button';\nimport IconSettings from '../../icon-settings';\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\nchai.use(chaiEnzyme());\n\nconst defaultProps = {\n\tid: 'sample-popover',\n\tbody: <span id=\"sample-body\">This is the body</span>,\n\theading: <span id=\"sample-heading\">This is the heading</span>,\n};\n\nconst defaultIds = {\n\ttrigger: defaultProps.id,\n\tpopover: `${defaultProps.id}-popover`,\n\tbody: `${defaultProps.id}-dialog-body`,\n\theading: `${defaultProps.id}-dialog-heading`,\n};\n\nconst getNodes = ({ wrapper }) => ({\n\tpopover: wrapper.find('.slds-popover'),\n\tcloseButton: wrapper.find('.slds-popover__close'),\n});\n\n/* A re-usable demo component fixture outside of `describe` sections\n * can accept props within each test and be unmounted after each tests.\n * This wrapping component will be similar to your wrapping component\n * you will create in the React Storybook for manual testing.\n */\nconst DemoComponent = createReactClass({\n\tdisplayName: 'PopoverDemoComponent',\n\tpropTypes: {\n\t\tisOpen: PropTypes.bool,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn defaultProps;\n\t},\n\n\tgetInitialState () {\n\t\treturn {};\n\t},\n\n\t// event handlers\n\n\trender () {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div>\n\t\t\t\t\t<Popover {...this.props}>\n\t\t\t\t\t\t<Button label=\"Trigger Popover\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t\t<Button id=\"not-the-trigger\" label=\"Not Trigger Popover\" />\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n\t\t);\n\t},\n});\n\n/* All tests for component being tested should be wrapped in a root `describe`,\n * which should be named after the component being tested.\n * When read aloud, the cumulative `describe` and `it` names should form a coherent\n * sentence, eg \"Date Picker default structure and css is present with expected\n * attributes set\". If you are having trouble constructing a cumulative short\n * sentence, this may be an indicator that your test is poorly structured.\n * String provided as first parameter names the `describe` section. Limit to nouns\n * as much as possible/appropriate.`\n */\ndescribe('SLDSPopover', function () {\n\tlet mountNode;\n\tlet wrapper;\n\n\t// BASIC STRUCTURE\n\n\tdescribe('Default structure and css', function () {\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('is open, has heading, body, close button', () => {\n\t\t\twrapper = mount(<DemoComponent isOpen />, { attachTo: mountNode });\n\n\t\t\texpect(wrapper.find(`#${defaultIds.heading}`)).to.exist;\n\t\t\texpect(wrapper.find(`#${defaultIds.body}`)).to.exist;\n\t\t\texpect(wrapper.find('.slds-popover__close')).to.exist;\n\t\t});\n\t});\n\n\tdescribe('Assistive technology', () => {\n\t\t/* Detect if presence of accessibility features such as ARIA\n\t\t * roles and screen reader text is present in the DOM.\n\t\t */\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('has aria-labelledby/aria-describedby on popover', function () {\n\t\t\twrapper = mount(<DemoComponent isOpen />, { attachTo: mountNode });\n\n\t\t\tconst trigger = wrapper.find('#sample-popover');\n\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\t\t\texpect(popover.node.getAttribute('aria-labelledby')).to.equal(\n\t\t\t\t`${defaultIds.heading}`\n\t\t\t);\n\t\t\texpect(popover.node.getAttribute('aria-describedby')).to.equal(\n\t\t\t\t`${defaultIds.body}`\n\t\t\t);\n\t\t});\n\t});\n\n\t// PROPS AND CHILDREN\n\n\tdescribe('Optional props', () => {\n\t\tconst popoverBackgroundColor = 'rgb(255, 80, 121)';\n\t\tconst containerBackgroundColor = 'rgb(255, 127, 80)';\n\t\t// What should be present in the DOM when style and className are applied?\n\t\tconst optionalProps = {\n\t\t\tclassName: 'sample-classname',\n\t\t\tassistiveText: {\n\t\t\t\tcloseButton: 'Shut it now!',\n\t\t\t},\n\t\t\tcontainerClassName: 'sample-container-classname',\n\t\t\tcontainerStyle: { background: containerBackgroundColor },\n\t\t\tfooter: <p id=\"footer\">Footer</p>,\n\t\t\tstyle: { background: popoverBackgroundColor },\n\t\t};\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('has correct className, assistiveText, style, and footer', function () {\n\t\t\twrapper = mount(<DemoComponent {...optionalProps} isOpen />, {\n\t\t\t\tattachTo: mountNode,\n\t\t\t});\n\n\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\n\t\t\texpect(popover.node.classList.contains(optionalProps.className)).to.be\n\t\t\t\t.true;\n\t\t\texpect(popover.find('.slds-popover__close').node.textContent).to.equal(\n\t\t\t\toptionalProps.assistiveText.closeButton\n\t\t\t);\n\t\t\texpect(popover.find('#footer')).to.exist;\n\t\t\texpect(popover.node.style.background).to.equal(popoverBackgroundColor);\n\t\t});\n\t});\n\n\t// EVENTS\n\n\tdescribe('Mouse and keyboard interactions', () => {\n\t\t/* Test event callback functions using Simulate. For more information, view\n\t\t * https://github.com/airbnb/enzyme/blob/master/docs/api/ReactWrapper/simulate.md\n\t\t */\n\t\tdescribe('onClick', function () {\n\t\t\tconst triggerClicked = sinon.spy();\n\n\t\t\tbeforeEach(() => {\n\t\t\t\tmountNode = createMountNode({ context: this });\n\t\t\t});\n\n\t\t\tafterEach(() => {\n\t\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t\t});\n\n\t\t\tit('calls onClick handler on trigger, click on popover close closes', function (done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<DemoComponent\n\t\t\t\t\t\tonClick={triggerClicked}\n\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\t\t\t\t\t\t\t\texpect(popover.node).to.not.exist;\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\n\t\t\t\t\t\t\texpect(popover).to.exist;\n\t\t\t\t\t\t\texpect(triggerClicked.callCount).to.equal(1);\n\n\t\t\t\t\t\t\tpopover.find('.slds-popover__close').simulate('click', {});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst trigger = wrapper.find(`#${defaultIds.trigger}`);\n\t\t\t\ttrigger.simulate('click', {});\n\t\t\t});\n\n\t\t\tit('opens on click, closes on ESC', function (done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<DemoComponent\n\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\t\t\t\t\t\t\t\texpect(popover.node).to.not.exist;\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\tconst popover = wrapper.find(`#${defaultIds.popover}`);\n\t\t\t\t\t\t\tpopover.simulate('keyDown', {\n\t\t\t\t\t\t\t\tkey: 'Esc',\n\t\t\t\t\t\t\t\tkeyCode: 27,\n\t\t\t\t\t\t\t\twhich: 27,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst trigger = wrapper.find(`#${defaultIds.trigger}`);\n\t\t\t\ttrigger.simulate('click', {});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('focus has moved to dialog', function () {\n\t\tconst triggerClicked = sinon.spy();\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('focus moves to correct node on open', function (done) {\n\t\t\twrapper = mount(\n\t\t\t\t<DemoComponent\n\t\t\t\t\tonClick={triggerClicked}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tconst nodes = getNodes({ wrapper });\n\t\t\t\t\t\texpect(document.activeElement.id).to.equal(`${defaultIds.popover}`);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst trigger = wrapper.find(`#${defaultIds.trigger}`);\n\t\t\ttrigger.simulate('click', {});\n\t\t});\n\t});\n\n\tdescribe('Disabled', function () {\n\t\tconst triggerClicked = sinon.spy();\n\t\tconst popoverOpened = sinon.spy();\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('onOpen is not called when disabled', function (done) {\n\t\t\twrapper = mount(\n\t\t\t\t<DemoComponent\n\t\t\t\t\tdisabled\n\t\t\t\t\tonClick={triggerClicked}\n\t\t\t\t\tonOpen={popoverOpened}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst trigger = wrapper.find(`#${defaultIds.trigger}`);\n\t\t\ttrigger.simulate('click', {});\n\n\t\t\tsetTimeout(() => {\n\t\t\t\texpect(popoverOpened.callCount).to.equal(0);\n\t\t\t\tdone();\n\t\t\t}, 200);\n\t\t});\n\t});\n});\n"],"file":"popover.browser-test.js"}