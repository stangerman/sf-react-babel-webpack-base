{"version":3,"sources":["../../../.tmp-es/components/button-group/index.jsx"],"names":["React","PropTypes","classNames","assign","BUTTON_GROUP","propTypes","children","node","isRequired","className","oneOfType","array","object","string","labels","shape","error","label","variant","oneOf","defaultProps","ButtonGroup","props","zeroIndexLength","Children","count","map","child","index","newChild","cloneElement","triggerClassName","displayName"],"mappings":"AAAA;;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,IAAMC,YAAY;AACjB;;;AAGAC,YAAUL,UAAUM,IAAV,CAAeC,UAJR;;AAKjB;;;AAGAC,aAAWR,UAAUS,SAAV,CAAoB,CAC9BT,UAAUU,KADoB,EAE9BV,UAAUW,MAFoB,EAG9BX,UAAUY,MAHoB,CAApB,CARM;;AAajB;;;;;;AAMAC,UAAQb,UAAUc,KAAV,CAAgB;AACvBC,WAAOf,UAAUY,MADM;AAEvBI,WAAOhB,UAAUY;AAFM,GAAhB,CAnBS;;AAuBjB;;;AAGAK,WAASjB,UAAUkB,KAAV,CAAgB,CAAC,UAAD,CAAhB;AA1BQ,CAAlB;AA6BA,IAAMC,eAAe;AAAEN,UAAQ;AAAV,CAArB;AAEA;;;;AAGA,IAAMO,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC9B;AACA,MAAMR,SAASQ,QACZnB,OAAO,EAAP,EAAWiB,aAAaN,MAAxB,EAAgCQ,MAAMR,MAAtC,CADY,GAEZM,aAAaN,MAFhB;AAIA,MAAIR,WAAWgB,MAAMhB,QAArB;AACA,MAAMiB,kBAAkBvB,MAAMwB,QAAN,CAAeC,KAAf,CAAqBH,MAAMhB,QAA3B,IAAuC,CAA/D;;AAEA,MAAIiB,kBAAkB,CAAtB,EAAyB;AACxBjB,eAAWN,MAAMwB,QAAN,CAAeE,GAAf,CAAmBJ,MAAMhB,QAAzB,EAAmC,UAACqB,KAAD,EAAQC,KAAR,EAAkB;AAC/D,UAAIC,QAAJ;;AACA,UAAID,UAAUL,eAAd,EAA+B;AAC9BM,mBAAW7B,MAAM8B,YAAN,CAAmBH,KAAnB,EAA0B;AACpCI,4BAAkB;AADkB,SAA1B,CAAX;AAGA;;AAED,aAAOF,YAAYF,KAAnB;AACA,KATU,CAAX;AAUA;;AAED,MAAIL,MAAMJ,OAAN,KAAkB,UAAtB,EAAkC;AACjCZ,eAAWN,MAAMwB,QAAN,CAAeE,GAAf,CAAmBJ,MAAMhB,QAAzB,EAAmC,UAACqB,KAAD;AAAA,aAC7C3B,MAAM8B,YAAN,CAAmBH,KAAnB,EAA0B;AACzBT,iBAAS;AADgB,OAA1B,CAD6C;AAAA,KAAnC,CAAX;AAKA;;AAED,MAAII,MAAMJ,OAAN,KAAkB,UAAtB,EAAkC;AACjC,WACC;AACC,iBAAWhB,WAAW,mBAAX,EAAgC;AAC1C,0BAAkBY,OAAOE;AADiB,OAAhC;AADZ,OAKC;AAAQ,iBAAU;AAAlB,OACEM,MAAMR,MAAN,CAAaG,KADf,CALD,EAQC;AAAK,iBAAU;AAAf,OACC;AACC,iBAAWf,WACV,6BADU,EAEVoB,MAAMb,SAFI;AADZ,OAMEH,QANF,CADD,EASEQ,OAAOE,KAAP,GACA;AAAK,iBAAU;AAAf,OAA0CF,OAAOE,KAAjD,CADA,GAEG,IAXL,CARD,CADD;AAwBA,GAvD6B,CAwD9B;;;AACA,SACC;AACC,eAAWd,WAAW,mBAAX,EAAgCoB,MAAMb,SAAtC,CADZ;AAEC,UAAK;AAFN,KAIEH,QAJF,CADD;AAQA,CAjED;;AAmEAe,YAAYW,WAAZ,GAA0B5B,YAA1B;AACAiB,YAAYhB,SAAZ,GAAwBA,SAAxB;AACAgB,YAAYD,YAAZ,GAA2BA,YAA3B;AAEA,eAAeC,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button Group design pattern](https://lightningdesignsystem.com/components/button-groups/) in React.\n// Based on SLDS v2.1.1\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport assign from 'lodash.assign';\n\nimport { BUTTON_GROUP } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * Children are expected to be components. If last button triggers a dropdown menu, use Dropdown instead of Button. _Tested with snapshot testing._\n\t */\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * CSS classes added to `slds-button-group` or `slds-checkbox--button-group` tag\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `error`: Message to display when any of Checkboxes are in an error state. _Tested with snapshot testing._\n\t * * `label`: This label appears above the button group. _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Use checkbox variant for \"Checkbox Button Group\" styling and add Checkbox components as children _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['checkbox']),\n};\n\nconst defaultProps = { labels: {} };\n\n/**\n * The ButtonGroup component wraps other components (ie. Button, MenuDropdown, PopoverTooltip, Checkboxes, etc).\n */\nconst ButtonGroup = (props) => {\n\t// Merge objects of strings with their default object\n\tconst labels = props\n\t\t? assign({}, defaultProps.labels, props.labels)\n\t\t: defaultProps.labels;\n\n\tlet children = props.children;\n\tconst zeroIndexLength = React.Children.count(props.children) - 1;\n\n\tif (zeroIndexLength > 0) {\n\t\tchildren = React.Children.map(props.children, (child, index) => {\n\t\t\tlet newChild;\n\t\t\tif (index === zeroIndexLength) {\n\t\t\t\tnewChild = React.cloneElement(child, {\n\t\t\t\t\ttriggerClassName: 'slds-button--last',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newChild || child;\n\t\t});\n\t}\n\n\tif (props.variant === 'checkbox') {\n\t\tchildren = React.Children.map(props.children, (child) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tvariant: 'button-group',\n\t\t\t})\n\t\t);\n\t}\n\n\tif (props.variant === 'checkbox') {\n\t\treturn (\n\t\t\t<fieldset\n\t\t\t\tclassName={classNames('slds-form-element', {\n\t\t\t\t\t'slds-has-error': labels.error,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<legend className=\"slds-form-element__legend slds-form-element__label\">\n\t\t\t\t\t{props.labels.label}\n\t\t\t\t</legend>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-checkbox--button-group',\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t\t{labels.error ? (\n\t\t\t\t\t\t<div className=\"slds-form-element__help\">{labels.error}</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n\t// default\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames('slds-button-group', props.className)}\n\t\t\trole=\"group\"\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nButtonGroup.displayName = BUTTON_GROUP;\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\n\nexport default ButtonGroup;\n"],"file":"index.js"}