{"version":3,"sources":["../../../../.tmp-es/components/utilities/truncate/by-length.js"],"names":["truncateByLength","inputString","maxLength","truncationChars","startingLength","outputString","length","words","split","reduce","combined","word","push","join"],"mappings":"AAAA;;AACA;AAEA,eAAe,SAASA,gBAAT,OAKZ;AAAA,8BAJFC,WAIE;AAAA,MAJFA,WAIE,iCAJY,EAIZ;AAAA,4BAHFC,SAGE;AAAA,MAHFA,SAGE,+BAHU,GAGV;AAAA,kCAFFC,eAEE;AAAA,MAFFA,eAEE,qCAFgB,KAEhB;AAAA,iCADFC,cACE;AAAA,MADFA,cACE,oCADe,CACf;AACF,MAAIC,YAAJ;;AAEA,MAAIJ,YAAYK,MAAZ,IAAsBJ,SAA1B,EAAqC;AACpCG,mBAAeJ,WAAf;AACA,GAFD,MAEO;AACN,QAAMM,QAAQN,YAAYO,KAAZ,CAAkB,GAAlB,CAAd;AACA,QAAIF,SAASF,iBAAiBD,gBAAgBG,MAAjC,GAA0C,CAAvD;AAEAD,mBAAeE,MACbE,MADa,CACN,UAACC,QAAD,EAAWC,IAAX,EAAoB;AAC3BL,gBAAUK,KAAKL,MAAL,GAAc,CAAxB;;AAEA,UAAIA,UAAUJ,SAAd,EAAyB;AACxBQ,iBAASE,IAAT,CAAcD,IAAd;AACA;;AAED,aAAOD,QAAP;AACA,KATa,EASX,EATW,EAUbG,IAVa,CAUR,GAVQ,CAAf;AAYAR,oBAAgBF,eAAhB;AACA;;AAED,SAAOE,YAAP;AACA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nexport default function truncateByLength ({\n\tinputString = '',\n\tmaxLength = 140,\n\ttruncationChars = '...',\n\tstartingLength = 0,\n}) {\n\tlet outputString;\n\n\tif (inputString.length <= maxLength) {\n\t\toutputString = inputString;\n\t} else {\n\t\tconst words = inputString.split(' ');\n\t\tlet length = startingLength + truncationChars.length - 1;\n\n\t\toutputString = words\n\t\t\t.reduce((combined, word) => {\n\t\t\t\tlength += word.length + 1;\n\n\t\t\t\tif (length <= maxLength) {\n\t\t\t\t\tcombined.push(word);\n\t\t\t\t}\n\n\t\t\t\treturn combined;\n\t\t\t}, [])\n\t\t\t.join(' ');\n\n\t\toutputString += truncationChars;\n\t}\n\n\treturn outputString;\n}\n"],"file":"by-length.js"}