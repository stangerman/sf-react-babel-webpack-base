{"version":3,"sources":["../../../../.tmp-es/components/utilities/truncate/index.jsx"],"names":["React","createReactClass","PropTypes","memoize","canvas","document","createElement","docFragment","createDocumentFragment","appendChild","canvasContext","getContext","measureWidth","text","font","measureText","width","TextTruncate","displayName","propTypes","containerClassName","string","line","number","prefix","suffix","textTruncateChild","node","truncateText","wrapper","func","getDefaultProps","getInitialState","componentDidMount","window","addEventListener","onResize","componentWillReceiveProps","nextProps","update","componentWillUnmount","removeEventListener","props","getRenderText","ref","scope","propsToRender","scopeWidth","getBoundingClientRect","style","getComputedStyle","join","setState","renderText","child","outputText","currentPos","maxTextLength","length","truncatedText","splitPos","startPos","displayLine","lastIsEng","lastSpaceIndex","ext","extraWidthDueToPrefixStyle","substr","indexOf","lastWidth","lastIndexOf","render","overflow","state"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\nimport memoize from 'lodash.memoize';\n\nconst canvas = document.createElement('canvas');\nconst docFragment = document.createDocumentFragment();\ndocFragment.appendChild(canvas);\nconst canvasContext = canvas.getContext('2d');\n\nconst measureWidth = memoize((text, font) => {\n\tcanvasContext.font = font;\n\n\treturn canvasContext.measureText(text).width;\n});\n\nconst TextTruncate = createReactClass({\n\tdisplayName: 'TextTruncate',\n\n\tpropTypes: {\n\t\tcontainerClassName: PropTypes.string,\n\t\tline: PropTypes.number,\n\t\tprefix: PropTypes.string,\n\t\tsuffix: PropTypes.string,\n\t\ttext: PropTypes.string,\n\t\ttextTruncateChild: PropTypes.node,\n\t\ttruncateText: PropTypes.string,\n\t\twrapper: PropTypes.func,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tline: 1,\n\t\t\ttext: '',\n\t\t\ttruncateText: 'â€¦',\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\treturn {};\n\t},\n\n\tcomponentDidMount () {\n\t\twindow.addEventListener('resize', this.onResize, false);\n\t},\n\n\tcomponentWillReceiveProps (nextProps) {\n\t\tthis.update(nextProps);\n\t},\n\n\tcomponentWillUnmount () {\n\t\twindow.removeEventListener('resize', this.onResize, false);\n\t},\n\n\tonResize () {\n\t\tthis.update(this.props);\n\t},\n\n\tgetRenderText (ref, nextProps) {\n\t\tif (!ref) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scope = ref;\n\n\t\t// nextProps will be undefined for resize events, but will change if search or other props are changed\n\t\tlet propsToRender;\n\t\tif (nextProps) {\n\t\t\tpropsToRender = nextProps;\n\t\t} else {\n\t\t\tpropsToRender = this.props;\n\t\t}\n\n\t\tconst {\n\t\t\tcontainerClassName, // eslint-disable-line no-unused-vars\n\t\t\tline,\n\t\t\tprefix,\n\t\t\tsuffix,\n\t\t\ttext,\n\t\t\ttextTruncateChild,\n\t\t\ttruncateText,\n\t\t\twrapper,\n\t\t\t...props\n\t\t} = propsToRender;\n\n\t\tconst scopeWidth = this.scope.getBoundingClientRect().width;\n\t\tconst style = window.getComputedStyle(this.scope);\n\t\tconst font = [\n\t\t\tstyle['font-weight'],\n\t\t\tstyle['font-style'],\n\t\t\tstyle['font-size'],\n\t\t\tstyle['font-family'],\n\t\t].join(' ');\n\n\t\t// return if display:none\n\t\tif (scopeWidth === 0) {\n\t\t\tthis.setState({ renderText: null });\n\t\t\treturn;\n\t\t}\n\n\t\tlet child;\n\t\tlet outputText = text;\n\n\t\t// return if all of text can be displayed\n\t\tif (scopeWidth < measureWidth(text, font)) {\n\t\t\tlet currentPos = 1;\n\t\t\tconst maxTextLength = text.length;\n\t\t\tlet truncatedText = '';\n\t\t\tlet splitPos = 0;\n\t\t\tlet startPos = 0;\n\t\t\tlet displayLine = line;\n\t\t\tlet width = 0;\n\t\t\tlet lastIsEng = false;\n\t\t\tlet lastSpaceIndex = -1;\n\n\t\t\twhile (displayLine !== 0) {\n\t\t\t\tlet ext = '';\n\t\t\t\tlet extraWidthDueToPrefixStyle = 0;\n\n\t\t\t\tif (prefix && displayLine === line - 1) {\n\t\t\t\t\text += ` ${prefix}`;\n\t\t\t\t\t// MAGIC NUMBER: (width at letter-spacing of 0.25rems - width at normal) / number of letters\n\t\t\t\t\textraWidthDueToPrefixStyle = prefix.length * 0.66;\n\t\t\t\t}\n\n\t\t\t\tif (!displayLine) {\n\t\t\t\t\text += truncateText;\n\n\t\t\t\t\tif (suffix) {\n\t\t\t\t\t\text += ` ${suffix}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (currentPos <= maxTextLength) {\n\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\twidth =\n\t\t\t\t\t\tmeasureWidth(truncatedText + ext, font) +\n\t\t\t\t\t\textraWidthDueToPrefixStyle;\n\n\t\t\t\t\tif (width < scopeWidth) {\n\t\t\t\t\t\tsplitPos = text.indexOf(' ', currentPos + 1);\n\t\t\t\t\t\tif (splitPos === -1) {\n\t\t\t\t\t\t\tcurrentPos += 1;\n\t\t\t\t\t\t\tlastIsEng = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastIsEng = true;\n\t\t\t\t\t\t\tcurrentPos = splitPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet lastWidth = 0;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tcurrentPos -= 1;\n\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\t\t\tif (truncatedText[truncatedText.length - 1] === ' ') {\n\t\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (lastIsEng) {\n\t\t\t\t\t\t\t\tlastSpaceIndex = truncatedText.lastIndexOf(' ');\n\t\t\t\t\t\t\t\tif (lastSpaceIndex > -1) {\n\t\t\t\t\t\t\t\t\tcurrentPos = lastSpaceIndex;\n\t\t\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twidth =\n\t\t\t\t\t\t\t\tmeasureWidth(truncatedText + ext, font) +\n\t\t\t\t\t\t\t\textraWidthDueToPrefixStyle;\n\t\t\t\t\t\t\tif (width === lastWidth) {\n\t\t\t\t\t\t\t\tcurrentPos = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlastWidth = width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (width >= scopeWidth);\n\t\t\t\t\t\tstartPos += currentPos;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentPos >= maxTextLength) {\n\t\t\t\t\tstartPos = maxTextLength;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdisplayLine -= 1; // iterate\n\t\t\t}\n\n\t\t\tif (startPos !== maxTextLength) {\n\t\t\t\toutputText = `${text.substr(0, startPos)}${truncateText} `;\n\t\t\t\tchild = textTruncateChild;\n\t\t\t}\n\t\t}\n\n\t\tlet renderText;\n\t\tif (wrapper) {\n\t\t\trenderText = wrapper(outputText, child);\n\t\t} else {\n\t\t\trenderText = (\n\t\t\t\t<div {...props}>\n\t\t\t\t\t{outputText}\n\t\t\t\t\t{child}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tthis.setState({ renderText });\n\t},\n\n\tupdate (nextProps) {\n\t\tthis.getRenderText(this.scope, nextProps);\n\t},\n\n\trender () {\n\t\tconst { containerClassName } = this.props;\n\n\t\t// inline style override\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={this.getRenderText}\n\t\t\t\tclassName={containerClassName}\n\t\t\t\tstyle={{ overflow: 'hidden' }}\n\t\t\t>\n\t\t\t\t{this.state.renderText}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default TextTruncate;\n"],"file":"index.js"}