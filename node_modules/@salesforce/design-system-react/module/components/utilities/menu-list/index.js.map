{"version":3,"sources":["../../../../.tmp-es/components/utilities/menu-list/index.jsx"],"names":["React","createReactClass","PropTypes","classNames","ListItem","LIST","List","displayName","propTypes","checkmark","bool","className","string","getListItemId","func","itemRefs","itemRenderer","length","oneOf","onSelect","options","array","selectedIndex","number","triggerId","getDefaultProps","render","lengthClassName","props","map","option","index","id","isSingleSelected","isMultipleSelected","selectedIndices","indexOf","disabled","value","listItem"],"mappings":";;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,QAArB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,8BAArB;AAEA;;;;AAGA,IAAMC,OAAOL,iBAAiB;AAC7BM,eAAaF,IADgB;AAG7BG,aAAW;AACV;;;AAGAC,eAAWP,UAAUQ,IAJX;;AAKV;;;AAGAC,eAAWT,UAAUU,MARX;;AASV;;;AAGAC,mBAAeX,UAAUY,IAZf;;AAaV;;;AAGAC,cAAUb,UAAUY,IAhBV;;AAiBV;;;AAGAE,kBAAcd,UAAUY,IApBd;;AAqBV;;;AAGAG,YAAQf,UAAUgB,KAAV,CAAgB,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB,CAAhB,CAxBE;;AAyBV;;;AAGAC,cAAUjB,UAAUY,IA5BV;;AA6BV;;;AAGAM,aAASlB,UAAUmB,KAhCT;;AAiCV;;;AAGAC,mBAAepB,UAAUqB,MApCf;;AAqCV;;;AAGAC,eAAWtB,UAAUU;AAxCX,GAHkB;AA8C7Ba,iBA9C6B,6BA8CV;AAClB,WAAO;AACNR,cAAQ,GADF;AAENG,eAAS,EAFH;AAGNE,qBAAe,CAAC;AAHV,KAAP;AAKA,GApD4B;AAsD7BI,QAtD6B,oBAsDnB;AAAA;;AACT,QAAIC,eAAJ;;AACA,QAAI,KAAKC,KAAL,CAAWX,MAAf,EAAuB;AACtBU,wDAA2C,KAAKC,KAAL,CAAWX,MAAtD;AACA;;AACD,WACC;AACC,yBAAiB,KAAKW,KAAL,CAAWJ,SAD7B;AAEC,iBAAWrB,WACV,gBADU,EAEVwB,eAFU,EAGV,KAAKC,KAAL,CAAWjB,SAHD,CAFZ;AAOC,YAAK;AAPN,OASE,KAAKiB,KAAL,CAAWR,OAAX,CAAmBS,GAAnB,CAAuB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1C,UAAMC,KAAK,MAAKJ,KAAL,CAAWf,aAAX,CAAyBkB,KAAzB,CAAX;;AACA,UAAME,mBAAmBF,UAAU,MAAKH,KAAL,CAAWN,aAA9C;AACA,UAAMY,qBACL,CAAC,CAAC,MAAKN,KAAL,CAAWO,eAAb,IACA,MAAKP,KAAL,CAAWO,eAAX,CAA2BC,OAA3B,CAAmCL,KAAnC,MAA8C,CAAC,CAFhD;AAGA,aACC,oBAAC,QAAD,eACKD,MADL;AAEC,yBAAeA,OAAOO,QAFvB;AAGC,mBACC,MAAKT,KAAL,CAAWnB,SAAX,KAAyBwB,oBAAoBC,kBAA7C,CAJF;AAMC,cAAMJ,MANP;AAOC,YAAIE,EAPL;AAQC,eAAOD,KARR;AASC,oBAAYE,oBAAoBC,kBATjC;AAUC,uBAAQF,EAAR,cAAcF,OAAOQ,KAArB,CAVD;AAWC,uBAAe,MAAKV,KAAL,CAAWZ,YAX3B;AAYC,kBAAU,MAAKY,KAAL,CAAWT,QAZtB;AAaC,aAAK,aAACoB,QAAD;AAAA,iBAAc,MAAKX,KAAL,CAAWb,QAAX,CAAoBwB,QAApB,EAA8BR,KAA9B,CAAd;AAAA;AAbN,SADD;AAiBA,KAvBA,CATF,CADD;AAoCA;AA/F4B,CAAjB,CAAb;AAkGA,eAAezB,IAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # List Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Children\nimport ListItem from './item';\n\n// ## Constants\nimport { LIST } from '../../../utilities/constants';\n\n/**\n * Component description.\n */\nconst List = createReactClass({\n\tdisplayName: LIST,\n\n\tpropTypes: {\n\t\t/**\n\t\t * Determines whether or not to show a checkmark for selected items.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\t/**\n\t\t * CSS classes to be added to `<ul />`.\n\t\t */\n\t\tclassName: PropTypes.string,\n\t\t/**\n\t\t * Used internally to determine the id that will be used for list items.\n\t\t */\n\t\tgetListItemId: PropTypes.func,\n\t\t/**\n\t\t * Used internally to pass references to the individual menu items back up for focusing / scrolling.\n\t\t */\n\t\titemRefs: PropTypes.func,\n\t\t/**\n\t\t * If provided, this function will be used to render the contents of each menu item.\n\t\t */\n\t\titemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Sets the height of the list based on the numeber of items.\n\t\t */\n\t\tlength: PropTypes.oneOf([null, '5', '7', '10']),\n\t\t/**\n\t\t * Triggered when a list item is selected (via mouse or keyboard).\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * An array of items to render in the list.\n\t\t */\n\t\toptions: PropTypes.array,\n\t\t/**\n\t\t * The index of the currently selected item in the list.\n\t\t */\n\t\tselectedIndex: PropTypes.number,\n\t\t/**\n\t\t * The id of the element which triggered this list (in a menu context).\n\t\t */\n\t\ttriggerId: PropTypes.string,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tlength: '5',\n\t\t\toptions: [],\n\t\t\tselectedIndex: -1,\n\t\t};\n\t},\n\n\trender () {\n\t\tlet lengthClassName;\n\t\tif (this.props.length) {\n\t\t\tlengthClassName = `slds-dropdown--length-${this.props.length}`;\n\t\t}\n\t\treturn (\n\t\t\t<ul\n\t\t\t\taria-labelledby={this.props.triggerId}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'dropdown__list',\n\t\t\t\t\tlengthClassName,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"menu\"\n\t\t\t>\n\t\t\t\t{this.props.options.map((option, index) => {\n\t\t\t\t\tconst id = this.props.getListItemId(index);\n\t\t\t\t\tconst isSingleSelected = index === this.props.selectedIndex;\n\t\t\t\t\tconst isMultipleSelected =\n\t\t\t\t\t\t!!this.props.selectedIndices &&\n\t\t\t\t\t\tthis.props.selectedIndices.indexOf(index) !== -1;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t{...option}\n\t\t\t\t\t\t\taria-disabled={option.disabled}\n\t\t\t\t\t\t\tcheckmark={\n\t\t\t\t\t\t\t\tthis.props.checkmark && (isSingleSelected || isMultipleSelected)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata={option}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tisSelected={isSingleSelected || isMultipleSelected}\n\t\t\t\t\t\t\tkey={`${id}-${option.value}`}\n\t\t\t\t\t\t\tlabelRenderer={this.props.itemRenderer}\n\t\t\t\t\t\t\tonSelect={this.props.onSelect}\n\t\t\t\t\t\t\tref={(listItem) => this.props.itemRefs(listItem, index)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\t},\n});\n\nexport default List;\n"],"file":"index.js"}