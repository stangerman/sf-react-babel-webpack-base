{"version":3,"sources":["../../../../.tmp-es/components/utilities/utility-icon/svg.jsx"],"names":["React","createReactClass","Svg","displayName","getPaths","paths","Array","map","item","getCircles","circles","getEllipses","ellipses","getGroups","groups","getShapes","data","shapes","g","push","ellipse","circle","path","getSVG","props","viewBox","rest","className","name","style","render"],"mappings":";;;;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,IAAMC,MAAMD,iBAAiB;AAC5BE,eAAa,KADe;AAG5BC,UAH4B,oBAGlBC,KAHkB,EAGX;AAChB,QAAIA,iBAAiBC,KAArB,EAA4B;AAC3B,aAAOD,MAAME,GAAN,CAAU,UAACC,IAAD;AAAA,eAAU,4BAAUA,IAAV,CAAV;AAAA,OAAV,CAAP;AACA;;AACD,WAAO;AAAM,WAAI;AAAV,OAAwBH,KAAxB,EAAP;AACA,GAR2B;AAU5BI,YAV4B,sBAUhBC,OAVgB,EAUP;AACpB,QAAIA,mBAAmBJ,KAAvB,EAA8B;AAC7B,aAAOI,QAAQH,GAAR,CAAY,UAACC,IAAD;AAAA,eAAU,8BAAYA,IAAZ,CAAV;AAAA,OAAZ,CAAP;AACA;;AACD,WAAO;AAAQ,WAAI;AAAZ,OAA4BE,OAA5B,EAAP;AACA,GAf2B;AAiB5BC,aAjB4B,uBAiBfC,QAjBe,EAiBL;AACtB,QAAIA,oBAAoBN,KAAxB,EAA+B;AAC9B,aAAOM,SAASL,GAAT,CAAa,UAACC,IAAD;AAAA,eAAU,+BAAaA,IAAb,CAAV;AAAA,OAAb,CAAP;AACA;;AACD,WAAO;AAAS,WAAI;AAAb,OAA8BI,QAA9B,EAAP;AACA,GAtB2B;AAwB5BC,WAxB4B,qBAwBjBC,MAxBiB,EAwBT;AAAA;;AAClB,QAAIA,kBAAkBR,KAAtB,EAA6B;AAC5B,aAAOQ,OAAOP,GAAP,CAAW,UAACC,IAAD;AAAA,eAAU,+BAAI,MAAKO,SAAL,CAAeP,IAAf,CAAJ,CAAV;AAAA,OAAX,CAAP;AACA;;AAED,WAAO;AAAG,WAAI;AAAP,OAAoB,KAAKO,SAAL,CAAeD,MAAf,CAApB,CAAP;AACA,GA9B2B;AAgC5BC,WAhC4B,qBAgCjBC,IAhCiB,EAgCX;AAChB,QAAMC,SAAS,EAAf;;AAEA,QAAID,IAAJ,EAAU;AACT,UAAIA,KAAKE,CAAT,EAAY;AACXD,eAAOE,IAAP,CAAY,KAAKN,SAAL,CAAeG,KAAKE,CAApB,CAAZ;AACA;;AAED,UAAIF,KAAKI,OAAT,EAAkB;AACjBH,eAAOE,IAAP,CAAY,KAAKR,WAAL,CAAiBK,KAAKI,OAAtB,CAAZ;AACA;;AAED,UAAIJ,KAAKK,MAAT,EAAiB;AAChBJ,eAAOE,IAAP,CAAY,KAAKV,UAAL,CAAgBO,KAAKK,MAArB,CAAZ;AACA;;AAED,UAAIL,KAAKM,IAAT,EAAe;AACdL,eAAOE,IAAP,CAAY,KAAKf,QAAL,CAAcY,KAAKM,IAAnB,CAAZ;AACA;AACD;;AACD,WAAOL,MAAP;AACA,GArD2B;AAuD5BM,QAvD4B,wBAuDEC,KAvDF,EAuDS;AAAA,QAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,QAAfC,IAAe;;AACpC,WACC;AACC,qBAAaF,MAAM,aAAN,CADd;AAEC,iBAAWA,MAAMG,SAFlB;AAGC,eAASF,OAHV;AAIC,YAAMD,MAAMI,IAJb;AAKC,aAAOJ,MAAMK;AALd,OAOE,KAAKd,SAAL,CAAeW,IAAf,CAPF,CADD;AAWA,GAnE2B;AAqE5BI,QArE4B,oBAqElB;AAAA,iBACkB,KAAKN,KADvB;AAAA,QACDR,IADC,UACDA,IADC;AAAA,QACQQ,KADR;;AAGT,WAAOR,OAAO,KAAKO,MAAL,CAAYP,IAAZ,EAAkBQ,KAAlB,CAAP,GAAkC,IAAzC;AACA;AAzE2B,CAAjB,CAAZ;AA4EA,eAAetB,GAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nconst Svg = createReactClass({\n\tdisplayName: 'Svg',\n\n\tgetPaths (paths) {\n\t\tif (paths instanceof Array) {\n\t\t\treturn paths.map((item) => <path {...item} />);\n\t\t}\n\t\treturn <path key=\"pathSVG\" {...paths} />;\n\t},\n\n\tgetCircles (circles) {\n\t\tif (circles instanceof Array) {\n\t\t\treturn circles.map((item) => <circle {...item} />);\n\t\t}\n\t\treturn <circle key=\"circleSVG\" {...circles} />;\n\t},\n\n\tgetEllipses (ellipses) {\n\t\tif (ellipses instanceof Array) {\n\t\t\treturn ellipses.map((item) => <ellipse {...item} />);\n\t\t}\n\t\treturn <ellipse key=\"ellipseSVG\" {...ellipses} />;\n\t},\n\n\tgetGroups (groups) {\n\t\tif (groups instanceof Array) {\n\t\t\treturn groups.map((item) => <g>{this.getShapes(item)}</g>);\n\t\t}\n\n\t\treturn <g key=\"groupsSVG\">{this.getShapes(groups)}</g>;\n\t},\n\n\tgetShapes (data) {\n\t\tconst shapes = [];\n\n\t\tif (data) {\n\t\t\tif (data.g) {\n\t\t\t\tshapes.push(this.getGroups(data.g));\n\t\t\t}\n\n\t\t\tif (data.ellipse) {\n\t\t\t\tshapes.push(this.getEllipses(data.ellipse));\n\t\t\t}\n\n\t\t\tif (data.circle) {\n\t\t\t\tshapes.push(this.getCircles(data.circle));\n\t\t\t}\n\n\t\t\tif (data.path) {\n\t\t\t\tshapes.push(this.getPaths(data.path));\n\t\t\t}\n\t\t}\n\t\treturn shapes;\n\t},\n\n\tgetSVG ({ viewBox, ...rest }, props) {\n\t\treturn (\n\t\t\t<svg\n\t\t\t\taria-hidden={props['aria-hidden']}\n\t\t\t\tclassName={props.className}\n\t\t\t\tviewBox={viewBox}\n\t\t\t\tname={props.name}\n\t\t\t\tstyle={props.style}\n\t\t\t>\n\t\t\t\t{this.getShapes(rest)}\n\t\t\t</svg>\n\t\t);\n\t},\n\n\trender () {\n\t\tconst { data, ...props } = this.props;\n\n\t\treturn data ? this.getSVG(data, props) : null;\n\t},\n});\n\nexport default Svg;\n"],"file":"svg.js"}