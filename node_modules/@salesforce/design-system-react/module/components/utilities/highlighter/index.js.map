{"version":3,"sources":["../../../../.tmp-es/components/utilities/highlighter/index.jsx"],"names":["React","PropTypes","ReactHighlighter","HIGHLIGHTER","Highlighter","props","search","children","className","findString","nodeArr","map","element","newElement","node","Array","displayName","propTypes","oneOfType","string","number","bool","any"],"mappings":"AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,mBAA7B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA;;;;AAGA,IAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC9B,MAAIA,MAAMC,MAAV,EAAkB;AACjB,QAAIC,QAAJ;;AACA,QAAI,OAAOF,MAAME,QAAb,KAA0B,QAA9B,EAAwC;AACvCA,iBACC,oBAAC,gBAAD;AACC,mBAAWF,MAAMG,SADlB;AAEC,oBAAY,IAFb;AAGC,sBAAa,MAHd;AAIC,gBAAQH,MAAMC,MAJf;AAKC,eAAOD,MAAME;AALd,SAOEF,MAAME,QAPR,CADD;AAWA,KAZD,MAYO;AACN,UAAME,aAAa,SAAbA,UAAa,CAACC,OAAD;AAAA,eAClBA,QAAQC,GAAR,CAAY,UAACC,OAAD,EAAa;AACxB,cAAIC,UAAJ;;AACA,cAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAChCC,yBACC,oBAAC,gBAAD;AACC,mBAAKD,OADN;AAEC,yBAAWP,MAAMG,SAFlB;AAGC,0BAAY,IAHb;AAIC,4BAAa,MAJd;AAKC,sBAAQH,MAAMC,MALf;AAMC,qBAAOM;AANR,eAQEA,OARF,CADD;AAYA,WAbD,MAaO;AACNC,yBAAaD,OAAb;AACA;;AACD,iBAAOC,UAAP;AACA,SAnBD,CADkB;AAAA,OAAnB;;AAsBA,UAAIR,MAAME,QAAN,CAAeF,KAAnB,EAA0B;AACzB,YAAMS,OAAOT,MAAME,QAAN,CAAeF,KAAf,CAAqBE,QAAlC;AACAA,mBAAWO,gBAAgBC,KAAhB,GAAwBN,WAAWK,IAAX,CAAxB,GAA2CA,IAAtD;AACA;AACD;;AAED,WAAO,kCAAOP,QAAP,CAAP;AACA;;AAED,MAAI,OAAOF,MAAME,QAAb,KAA0B,QAA9B,EAAwC;AACvC,WACC;AAAM,iBAAWF,MAAMG,SAAvB;AAAkC,aAAOH,MAAME;AAA/C,OACEF,MAAME,QADR,CADD;AAKA;;AAED,SAAO;AAAM,eAAWF,MAAMG;AAAvB,KAAmCH,MAAME,QAAzC,CAAP;AACA,CAxDD,C,CA0DA;;;AACAH,YAAYY,WAAZ,GAA0Bb,WAA1B,C,CAEA;;AACAC,YAAYa,SAAZ,GAAwB;AACvB;;;AAGAV,YAAUN,UAAUiB,SAAV,CAAoB,CAC7BjB,UAAUkB,MADmB,EAE7BlB,UAAUmB,MAFmB,EAG7BnB,UAAUoB,IAHmB,EAI7BpB,UAAUa,IAJmB,CAApB,CAJa;AAUvBN,aAAWP,UAAUkB,MAVE;;AAWvB;;;AAGAb,UAAQL,UAAUqB;AAdK,CAAxB;AAiBA,eAAelB,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### ReactHighlighter\nimport ReactHighlighter from 'react-highlighter';\n\n// ## Constants\nimport { HIGHLIGHTER } from '../../../utilities/constants';\n\n/**\n * A utility component that highlights occurrences of a particular pattern in its contents.\n */\nconst Highlighter = (props) => {\n\tif (props.search) {\n\t\tlet children;\n\t\tif (typeof props.children === 'string') {\n\t\t\tchildren = (\n\t\t\t\t<ReactHighlighter\n\t\t\t\t\tclassName={props.className}\n\t\t\t\t\tmatchClass={null}\n\t\t\t\t\tmatchElement=\"mark\"\n\t\t\t\t\tsearch={props.search}\n\t\t\t\t\ttitle={props.children}\n\t\t\t\t>\n\t\t\t\t\t{props.children}\n\t\t\t\t</ReactHighlighter>\n\t\t\t);\n\t\t} else {\n\t\t\tconst findString = (nodeArr) =>\n\t\t\t\tnodeArr.map((element) => {\n\t\t\t\t\tlet newElement;\n\t\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\t\tnewElement = (\n\t\t\t\t\t\t\t<ReactHighlighter\n\t\t\t\t\t\t\t\tkey={element}\n\t\t\t\t\t\t\t\tclassName={props.className}\n\t\t\t\t\t\t\t\tmatchClass={null}\n\t\t\t\t\t\t\t\tmatchElement=\"mark\"\n\t\t\t\t\t\t\t\tsearch={props.search}\n\t\t\t\t\t\t\t\ttitle={element}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{element}\n\t\t\t\t\t\t\t</ReactHighlighter>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewElement = element;\n\t\t\t\t\t}\n\t\t\t\t\treturn newElement;\n\t\t\t\t});\n\n\t\t\tif (props.children.props) {\n\t\t\t\tconst node = props.children.props.children;\n\t\t\t\tchildren = node instanceof Array ? findString(node) : node;\n\t\t\t}\n\t\t}\n\n\t\treturn <span>{children}</span>;\n\t}\n\n\tif (typeof props.children === 'string') {\n\t\treturn (\n\t\t\t<span className={props.className} title={props.children}>\n\t\t\t\t{props.children}\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn <span className={props.className}>{props.children}</span>;\n};\n\n// ### Display Name\nHighlighter.displayName = HIGHLIGHTER;\n\n// ### Prop Types\nHighlighter.propTypes = {\n\t/**\n\t * The full string to display.\n\t */\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.bool,\n\t\tPropTypes.node,\n\t]),\n\tclassName: PropTypes.string,\n\t/**\n\t * The string of text (or Regular Expression) to highlight.\n\t */\n\tsearch: PropTypes.any,\n};\n\nexport default Highlighter;\n"],"file":"index.js"}