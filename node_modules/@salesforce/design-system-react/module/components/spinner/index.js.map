{"version":3,"sources":["../../../.tmp-es/components/spinner/index.jsx"],"names":["React","PropTypes","classNames","checkProps","SPINNER","PROP_TYPES","assistiveText","shape","label","string","containerClassName","id","isInput","bool","size","oneOf","variant","DEFAULT_PROPS","Spinner","props","spinnerClassName","displayName","propTypes","defaultProps"],"mappings":";;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,2BAAxB,C,CAEA;;AACA,IAAMC,aAAa;AAClB;;;;;AAKAC,iBAAeL,UAAUM,KAAV,CAAgB;AAC9BC,WAAOP,UAAUQ;AADa,GAAhB,CANG;;AASlB;;;AAGAC,sBAAoBT,UAAUQ,MAZZ;;AAalB;;;AAGAE,MAAIV,UAAUQ,MAhBI;;AAiBlB;;;AAGAG,WAASX,UAAUY,IApBD;;AAqBlB;;;AAGAC,QAAMb,UAAUc,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,CAAhB,CAxBY;;AAyBlB;;;AAGAC,WAASf,UAAUc,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;AA5BS,CAAnB;AA+BA,IAAME,gBAAgB;AACrBX,iBAAe;AAAEE,WAAO;AAAT,GADM;AAErBM,QAAM,QAFe;AAGrBE,WAAS;AAHY,CAAtB,C,CAMA;;AACA,IAAME,UAAU,SAAVA,OAAU,CAACC,KAAD,EAAW;AAC1BhB,aAAWC,OAAX,EAAoBe,KAApB;AAD0B,MAElBT,kBAFkB,GAEiCS,KAFjC,CAElBT,kBAFkB;AAAA,MAEEC,EAFF,GAEiCQ,KAFjC,CAEER,EAFF;AAAA,MAEMC,OAFN,GAEiCO,KAFjC,CAEMP,OAFN;AAAA,MAEeE,IAFf,GAEiCK,KAFjC,CAEeL,IAFf;AAAA,MAEqBE,OAFrB,GAEiCG,KAFjC,CAEqBH,OAFrB;AAG1B,MAAMV,gBACL,OAAOa,MAAMb,aAAb,KAA+B,QAA/B,GACGa,MAAMb,aADT,GAEG,kBACEW,cAAcX,aADhB,EAEEa,MAAMb,aAFR,EAGAE,KANJ;AAQA,MAAMY,mBAAmBlB,WAAW,cAAX;AACxB,2BAAuBU,OADC;AAExB,0BAAsBI,YAAY,OAFV;AAGxB,4BAAwBA,YAAY;AAHZ,4BAIPF,IAJO,GAIEA,IAJF,EAAzB;AAOA,SACC;AAAK,eAAWZ,WAAWQ,kBAAX,EAA+B,wBAA/B;AAAhB,KACC;AACC,mBAAY,OADb;AAEC,eAAWU,gBAFZ;AAGC,QAAIT,EAHL;AAIC,UAAK;AAJN,KAMEL,iBACA;AAAM,eAAU;AAAhB,KAAuCA,aAAvC,CAPF,EASC;AAAK,eAAU;AAAf,IATD,EAUC;AAAK,eAAU;AAAf,IAVD,CADD,CADD;AAgBA,CAlCD;;AAoCAY,QAAQG,WAAR,GAAsBjB,OAAtB;AACAc,QAAQI,SAAR,GAAoBjB,UAApB;AACAa,QAAQK,YAAR,GAAuBN,aAAvB;AAEA,eAAeC,OAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Spinner Component --- SLDS for React\n\n// Implements the [Spinner design pattern - 2.1.0-beta.3 (204)](https://latest-204.lightningdesignsystem.com/components/spinners) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport checkProps from './check-props';\n\n// ## Constants\nimport { SPINNER } from '../../utilities/constants';\n\n// ### Prop Types\nconst PROP_TYPES = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Assistive text that is read out loud to screen readers.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Custom css classes applied to Spinner container\n\t */\n\tcontainerClassName: PropTypes.string,\n\t/**\n\t * Unique html id placed on div with role=\"status\".\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Determines if spinner is inside input field\n\t */\n\tisInput: PropTypes.bool,\n\t/**\n\t * Determines the size of the spinner\n\t */\n\tsize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * Determines the color of the spinner: `base` is gray, `brand` is blue, and `inverse` is white.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'brand', 'inverse']),\n};\n\nconst DEFAULT_PROPS = {\n\tassistiveText: { label: 'Loading...' },\n\tsize: 'medium',\n\tvariant: 'base',\n};\n\n// ## Spinner\nconst Spinner = (props) => {\n\tcheckProps(SPINNER, props);\n\tconst { containerClassName, id, isInput, size, variant } = props;\n\tconst assistiveText =\n\t\ttypeof props.assistiveText === 'string'\n\t\t\t? props.assistiveText\n\t\t\t: {\n\t\t\t\t...DEFAULT_PROPS.assistiveText,\n\t\t\t\t...props.assistiveText,\n\t\t\t}.label;\n\n\tconst spinnerClassName = classNames('slds-spinner', {\n\t\t'slds-input__spinner': isInput,\n\t\t'slds-spinner_brand': variant === 'brand',\n\t\t'slds-spinner_inverse': variant === 'inverse',\n\t\t[`slds-spinner_${size}`]: size,\n\t});\n\n\treturn (\n\t\t<div className={classNames(containerClassName, 'slds-spinner_container')}>\n\t\t\t<div\n\t\t\t\taria-hidden=\"false\"\n\t\t\t\tclassName={spinnerClassName}\n\t\t\t\tid={id}\n\t\t\t\trole=\"status\"\n\t\t\t>\n\t\t\t\t{assistiveText && (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText}</span>\n\t\t\t\t)}\n\t\t\t\t<div className=\"slds-spinner__dot-a\" />\n\t\t\t\t<div className=\"slds-spinner__dot-b\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nSpinner.displayName = SPINNER;\nSpinner.propTypes = PROP_TYPES;\nSpinner.defaultProps = DEFAULT_PROPS;\n\nexport default Spinner;\n"],"file":"index.js"}