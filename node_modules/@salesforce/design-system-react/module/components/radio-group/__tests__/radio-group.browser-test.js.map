{"version":3,"sources":["../../../../.tmp-es/components/radio-group/__tests__/radio-group.browser-test.jsx"],"names":["React","PropTypes","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","RadioGroup","Radio","use","RadioGroupExample","props","state","checked","values","labels","event","setState","target","value","disabled","required","map","Component","propTypes","shape","error","string","label","bool","defaultProps","describe","mountNode","wrapper","beforeEach","context","afterEach","it","attachTo","radios","find","to","have","lengthOf","forEach","radioWrapper","index","radio","get","equal","legend","text","be","true","abbr","false","simulate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\nimport RadioGroup from '../../radio-group';\nimport Radio from '../../radio-group/radio';\n\nchai.use(chaiEnzyme());\n\n/* Re-usable demo component.\n */\nclass RadioGroupExample extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = { checked: 'Radio Label One' };\n\t}\n\n\trender () {\n\t\tconst values = ['Radio Label One', 'Radio Label Two'];\n\t\treturn (\n\t\t\t<RadioGroup\n\t\t\t\tlabels={this.props.labels}\n\t\t\t\tonChange={(event) => this.setState({ checked: event.target.value })}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\trequired={this.props.required}\n\t\t\t>\n\t\t\t\t{values.map((value) => (\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tlabel={value}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tchecked={this.state.checked === value}\n\t\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioGroup>\n\t\t);\n\t}\n}\n\nRadioGroupExample.propTypes = {\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n};\n\nRadioGroupExample.defaultProps = {\n\tlabels: { label: 'Radio Group Label' },\n};\n\n/* RadioGroup rendering tests\n */\ndescribe('RadioGroup', function () {\n\tlet mountNode;\n\tlet wrapper;\n\n\tbeforeEach(() => {\n\t\tmountNode = createMountNode({ context: this });\n\t});\n\n\tafterEach(() => {\n\t\tdestroyMountNode({ wrapper, mountNode });\n\t});\n\n\tit('renders a radio group', () => {\n\t\twrapper = mount(<RadioGroupExample />, { attachTo: mountNode });\n\t\tconst radios = wrapper.find(Radio);\n\t\texpect(radios).to.have.lengthOf(2, 'there are 2 radio inputs');\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.checked).to.equal(\n\t\t\t\tradio.props.label === 'Radio Label One',\n\t\t\t\t'the second radio input is checked'\n\t\t\t);\n\t\t});\n\n\t\tconst legend = wrapper.find('legend');\n\t\texpect(legend.text()).to.equal('Radio Group Label', 'there is a label');\n\t});\n\n\tit('renders a disabled state', () => {\n\t\twrapper = mount(<RadioGroupExample disabled />, { attachTo: mountNode });\n\t\tconst radios = wrapper.find(Radio);\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.disabled, 'all radio inputs are disabled').to.be.true;\n\t\t});\n\t});\n\n\tit('renders a required indicator', () => {\n\t\twrapper = mount(<RadioGroupExample required />, { attachTo: mountNode });\n\t\tconst abbr = wrapper.find('abbr');\n\t\texpect(abbr.text()).to.equal('*', 'there is a required indicator');\n\t});\n\n\tit('triggers a change callback', () => {\n\t\twrapper = mount(<RadioGroupExample />, { attachTo: mountNode });\n\t\tconst radio = wrapper.find({ value: 'Radio Label Two' });\n\t\texpect(radio.props().checked).to.be.false;\n\t\tradio.simulate('change', { event: { target: 'Radio Label Two' } });\n\t\texpect(\n\t\t\tradio.props().checked,\n\t\t\t'radio button changes from unchecked to checked'\n\t\t).to.be.true;\n\t});\n});\n"],"file":"radio-group.browser-test.js"}