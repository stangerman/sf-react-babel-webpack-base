{"version":3,"sources":["../../../.tmp-es/components/progress-ring/index.jsx"],"names":["React","PropTypes","classNames","PROGRESS_RING","Icon","ProgressRingShape","THEME_OPTIONS","Object","freeze","WARNING","EXPIRED","COMPLETE","THEME_CLASSES","propTypes","id","string","className","oneOfType","array","object","theme","oneOf","icon","node","hasIcon","bool","value","number","isRequired","defaultProps","ProgressRing","props","themeClass","percentDecimal","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA;;;;AAGA,OAAO,IAAMC,gBAAgBC,OAAOC,MAAP,CAAc;AAC1CC,WAAS,SADiC;AAE1CC,WAAS,SAFiC;AAG1CC,YAAU;AAHgC,CAAd,CAAtB;AAMP;;;;AAGA,IAAMC,sEACJN,cAAcK,QADV,EACqB,6BADrB,mCAEJL,cAAcG,OAFV,EAEoB,4BAFpB,mCAGJH,cAAcI,OAHV,EAGoB,4BAHpB,kBAAN;AAMA,IAAMG,YAAY;AACjB;;;AAGAC,MAAIb,UAAUc,MAJG;;AAKjB;;;AAGAC,aAAWf,UAAUgB,SAAV,CAAoB,CAC9BhB,UAAUiB,KADoB,EAE9BjB,UAAUkB,MAFoB,EAG9BlB,UAAUc,MAHoB,CAApB,CARM;;AAajB;;;AAGAK,SAAOnB,UAAUoB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,CAAhB,CAhBU;;AAiBjB;;;AAGAC,QAAMrB,UAAUsB,IApBC;;AAqBjB;;;AAGAC,WAASvB,UAAUwB,IAxBF;;AAyBjB;;;AAGAC,SAAOzB,UAAU0B,MAAV,CAAiBC;AA5BP,CAAlB;AA+BA,IAAMC,eAAe,EAArB;AAEA;;;;IAGMC,Y;;;;;;;;;;;;;;AACL;;;;2BAIQ;AACP,UAAIR,OAAO,EAAX;;AAEA,UAAI,KAAKS,KAAL,CAAWP,OAAf,EAAwB;AACvB,YAAI,KAAKO,KAAL,CAAWT,IAAf,EAAqB;AACpBA,iBAAO,KAAKS,KAAL,CAAWT,IAAlB;AACA,SAFD,MAEO,IAAI,KAAKS,KAAL,CAAWX,KAAX,KAAqBd,cAAcG,OAAvC,EAAgD;AACtDa,iBAAO,oBAAC,IAAD;AAAM,sBAAS,SAAf;AAAyB,kBAAK,SAA9B;AAAwC,mBAAM;AAA9C,YAAP;AACA,SAFM,MAEA,IAAI,KAAKS,KAAL,CAAWX,KAAX,KAAqBd,cAAcI,OAAvC,EAAgD;AACtDY,iBAAO,oBAAC,IAAD;AAAM,sBAAS,SAAf;AAAyB,kBAAK,OAA9B;AAAsC,mBAAM;AAA5C,YAAP;AACA,SAFM,MAEA,IAAI,KAAKS,KAAL,CAAWX,KAAX,KAAqBd,cAAcK,QAAvC,EAAiD;AACvDW,iBAAO,oBAAC,IAAD;AAAM,sBAAS,SAAf;AAAyB,kBAAK,OAA9B;AAAsC,mBAAM;AAA5C,YAAP;AACA;AACD;;AAED,aAAOA,IAAP;AACA;AAED;;;;;;;qCAIkB;AACjB,aAAO,KAAKS,KAAL,CAAWL,KAAX,GAAmB,GAA1B;AACA;AAED;;;;;;;iCAIc;AACb,aAAOd,cAAc,KAAKmB,KAAL,CAAWX,KAAzB,KAAmC,EAA1C;AACA;;;6BAES;AACT,aACC,oBAAC,iBAAD;AACC,YAAI,KAAKW,KAAL,CAAWjB,EADhB;AAEC,mBAAWZ,WAAW,KAAK6B,KAAL,CAAWf,SAAtB,EAAiC,KAAKgB,UAAL,EAAjC,CAFZ;AAGC,4BAAoB,KAAKC,cAAL;AAHrB,SAKE,KAAKX,IAAL,EALF,CADD;AASA;;;;EAjDyBtB,MAAMkC,S;;AAoDjCJ,aAAaK,WAAb,GAA2BhC,aAA3B;AACA2B,aAAajB,SAAb,GAAyBA,SAAzB;AACAiB,aAAaD,YAAb,GAA4BA,YAA5B;AAEA,eAAeC,YAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Ring design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { PROGRESS_RING } from '../../utilities/constants';\nimport Icon from '../icon';\nimport ProgressRingShape from './private/ring-shape';\n\n/**\n * The themes available for the progress ring\n */\nexport const THEME_OPTIONS = Object.freeze({\n\tWARNING: 'warning',\n\tEXPIRED: 'expired',\n\tCOMPLETE: 'complete',\n});\n\n/**\n * The CSS classes associated with each theme\n */\nconst THEME_CLASSES = {\n\t[THEME_OPTIONS.COMPLETE]: 'slds-progress-ring_complete',\n\t[THEME_OPTIONS.WARNING]: 'slds-progress-ring_warning',\n\t[THEME_OPTIONS.EXPIRED]: 'slds-progress-ring_expired',\n};\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-progress-ring`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * The theme applied to the ring.\n\t */\n\ttheme: PropTypes.oneOf(['warning', 'expired', 'complete']),\n\t/**\n\t * Overrides the icon to be displayed.\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Display the icon associated with the theme.\n\t */\n\thasIcon: PropTypes.bool,\n\t/**\n\t * Percentage of progress completion, ranging [0, 100].\n\t */\n\tvalue: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {};\n\n/**\n * Customizable and configurable progress ring. Will display progress in a circular progress bar factor, and is capable of displaying iconography inside of the ring structure.\n */\nclass ProgressRing extends React.Component {\n\t/**\n\t * Gets the icon to display\n\t * @returns {node} Icon\n\t */\n\ticon () {\n\t\tlet icon = '';\n\n\t\tif (this.props.hasIcon) {\n\t\t\tif (this.props.icon) {\n\t\t\t\ticon = this.props.icon;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.WARNING) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"warning\" title=\"Warning\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.EXPIRED) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"error\" title=\"Expired\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.COMPLETE) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"check\" title=\"complete\" />;\n\t\t\t}\n\t\t}\n\n\t\treturn icon;\n\t}\n\n\t/**\n\t * Percentage as a decimal\n\t * @returns {decimal} Percentage\n\t */\n\tpercentDecimal () {\n\t\treturn this.props.value / 100;\n\t}\n\n\t/**\n\t * Gets the theme CSS class\n\t * @returns {string} Class name\n\t */\n\tthemeClass () {\n\t\treturn THEME_CLASSES[this.props.theme] || '';\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<ProgressRingShape\n\t\t\t\tid={this.props.id}\n\t\t\t\tclassName={classNames(this.props.className, this.themeClass())}\n\t\t\t\tfillPercentDecimal={this.percentDecimal()}\n\t\t\t>\n\t\t\t\t{this.icon()}\n\t\t\t</ProgressRingShape>\n\t\t);\n\t}\n}\n\nProgressRing.displayName = PROGRESS_RING;\nProgressRing.propTypes = propTypes;\nProgressRing.defaultProps = defaultProps;\n\nexport default ProgressRing;\n"],"file":"index.js"}