{"version":3,"sources":["../../../.tmp-es/components/media-object/index.jsx"],"names":["React","createReactClass","PropTypes","classnames","MEDIA_OBJECT","cssClasses","base","figure","body","MediaObject","displayName","propTypes","canTruncate","bool","className","oneOfType","array","object","string","node","verticalCenter","render","props"],"mappings":"AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;AACA,OAAO,IAAMC,aAAa;AACzBC,QAAM,YADmB;AAEzBC,UAAQ,oBAFiB;AAGzBC,QAAM;AAHmB,CAAnB;AAMP;;;;AAGA,IAAMC,cAAcR,iBAAiB;AACpC;AACA;AACAS,eAAaN,YAHuB;AAIpC;AACAO,aAAW;AACV;;;AAGAC,iBAAaV,UAAUW,IAJb;;AAKV;;;AAGAC,eAAWZ,UAAUa,SAAV,CAAoB,CAC9Bb,UAAUc,KADoB,EAE9Bd,UAAUe,MAFoB,EAG9Bf,UAAUgB,MAHoB,CAApB,CARD;;AAaV;;;AAGAV,UAAMN,UAAUiB,IAhBN;;AAiBV;;;AAGAZ,YAAQL,UAAUiB,IApBR;;AAqBV;;;AAGAC,oBAAgBlB,UAAUW;AAxBhB,GALyB;AAgCpCQ,QAhCoC,oBAgC1B;AACT,WACC;AACC,iBAAWlB,WACVE,WAAWC,IADD,EAEV;AACC,8BAAsB,KAAKgB,KAAL,CAAWF,cADlC;AAEC,mCAA2B,KAAKE,KAAL,CAAWV;AAFvC,OAFU,EAMV,KAAKU,KAAL,CAAWR,SAND;AADZ,OAUE,KAAKQ,KAAL,CAAWf,MAAX,GACA;AAAK,iBAAWF,WAAWE;AAA3B,OAAoC,KAAKe,KAAL,CAAWf,MAA/C,MADA,GAEG,IAZL,EAaC;AAAK,iBAAWF,WAAWG;AAA3B,OAAkC,KAAKc,KAAL,CAAWd,IAA7C,CAbD,CADD;AAiBA;AAlDmC,CAAjB,CAApB;AAqDA,eAAeC,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classnames from 'classnames';\n\nimport { MEDIA_OBJECT } from '../../utilities/constants';\n\n// Allow for predicatable DOM queries with `querySelectorAll(cssClasses.base)`\nexport const cssClasses = {\n\tbase: 'slds-media',\n\tfigure: 'slds-media__figure',\n\tbody: 'slds-media__body',\n};\n\n/**\n * When you need text and a figure next to each other, use a media object.\n */\nconst MediaObject = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: MEDIA_OBJECT,\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Often the body may need to be truncated for correct layout. This is only applicable if using the component within a flexbox container.\n\t\t */\n\t\tcanTruncate: PropTypes.bool,\n\t\t/**\n\t\t * Class names to be added to the component's HTML tag with `slds-media` class.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * The body is often text such as a heading or paragraph.\n\t\t */\n\t\tbody: PropTypes.node,\n\t\t/**\n\t\t * The figure is the optional visualization of the text within the body.\n\t\t */\n\t\tfigure: PropTypes.node,\n\t\t/**\n\t\t * Vertically centers the body with the middle of the figure.\n\t\t */\n\t\tverticalCenter: PropTypes.bool,\n\t},\n\n\trender () {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classnames(\n\t\t\t\t\tcssClasses.base,\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-media--center': this.props.verticalCenter,\n\t\t\t\t\t\t'slds-has-flexi-truncate': this.props.canTruncate,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.figure ? (\n\t\t\t\t\t<div className={cssClasses.figure}>{this.props.figure} </div>\n\t\t\t\t) : null}\n\t\t\t\t<div className={cssClasses.body}>{this.props.body}</div>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default MediaObject;\n"],"file":"index.js"}