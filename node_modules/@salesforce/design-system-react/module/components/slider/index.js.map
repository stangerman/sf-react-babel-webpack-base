{"version":3,"sources":["../../../.tmp-es/components/slider/index.jsx"],"names":["React","PropTypes","isFunction","classNames","shortid","SLIDER","propTypes","string","assistiveText","shape","label","classNameContainer","oneOfType","array","object","defaultValue","number","disabled","bool","errorText","id","max","min","name","onChange","func","onInput","size","oneOf","step","value","vertical","defaultProps","Slider","props","event","Number","target","generatedId","generate","generatedErrorId","labelText","getId","getErrorId","handleChange","handleInput","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Slider Component\n\n// Implements the [Slider design pattern](https://www.lightningdesignsystem.com/components/slider/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { SLIDER } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * Assistive text for accessibility**\n\t * `label`: Visually hidden label but read out loud by screen readers.\n\t *\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the outer container of the Slider.\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present\n\t * only to provide compatibility with hybrid framework applications that\n\t * are not entirely React. It should only be used in an application without\n\t * centralized state (Redux, Flux). \"Controlled components\" with centralized\n\t * state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultValue: PropTypes.number,\n\t/**\n\t * Disables the Slider and prevents clicking it. Only available on the horizontal view.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the Slider is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * Set the HTML `id` of the slider.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * This label appears above the Slider.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Maximum value of a specified range. Defaults to 100.\n\t */\n\tmax: PropTypes.number,\n\t/**\n\t * Minimum value of a specified range. Defaults to 0.\n\t */\n\tmin: PropTypes.number,\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires whenever the user has modified the data of the control. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * This event fires when the value is committed. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Size of the slider.\n\t */\n\tsize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * By default, the granularity is 1 and the value is always an integer. For example, If you need a value between 5 and 10, accurate to two decimal places, you should set the value of step to 0.01\n\t */\n\tstep: PropTypes.number,\n\t/**\n\t * The Slider should be a controlled component, and will always display this value. This should always be used if you are using a Flux/Redux framework.\n\t */\n\tvalue: PropTypes.number,\n\t/**\n\t * Modifier that makes the slider vertical\n\t */\n\tvertical: PropTypes.bool,\n};\n\nconst defaultProps = {\n\tmin: 0,\n\tmax: 100,\n\tstep: 1,\n};\n\n/**\n * The ability to style sliders with CSS varies across browsers. Using this component ensures sliders look the same everywhere.\n */\nclass Slider extends React.Component {\n\tstatic displayName = SLIDER;\n\tstatic propTypes = propTypes;\n\tstatic defaultProps = defaultProps;\n\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\t}\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetErrorId () {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t}\n\n\thandleChange = (event) => {\n\t\tif (isFunction(this.props.onChange)) {\n\t\t\tthis.props.onChange(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\thandleInput = (event) => {\n\t\tif (isFunction(this.props.onInput)) {\n\t\t\tthis.props.onInput(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\trender () {\n\t\tconst labelText =\n\t\t\tthis.props.label ||\n\t\t\t(this.props.assistiveText && this.props.assistiveText.label);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': this.props.errorText,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.classNameContainer\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classNames('slds-form-element__label', {\n\t\t\t\t\t\t'slds-assistive-text':\n\t\t\t\t\t\t\tthis.props.assistiveText && !this.props.label,\n\t\t\t\t\t})}\n\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-slider-label\">\n\t\t\t\t\t\t{labelText ? (\n\t\t\t\t\t\t\t<span className=\"slds-slider-label__label\">{labelText}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<span className=\"slds-slider-label__range\">\n\t\t\t\t\t\t\t{this.props.min} - {this.props.max}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames('slds-slider', {\n\t\t\t\t\t\t\t'slds-slider_vertical': this.props.vertical,\n\t\t\t\t\t\t\t'slds-size_x-small': this.props.size === 'x-small',\n\t\t\t\t\t\t\t'slds-size_small': this.props.size === 'small',\n\t\t\t\t\t\t\t'slds-size_medium': this.props.size === 'medium',\n\t\t\t\t\t\t\t'slds-size_large': this.props.size === 'large',\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tname={this.props.name}\n\t\t\t\t\t\t\tclassName=\"slds-slider__range\"\n\t\t\t\t\t\t\tdefaultValue={this.props.defaultValue}\n\t\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonInput={this.handleInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"slds-slider__value\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t{this.props.value || this.props.defaultValue || '0'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.errorText ? (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{this.props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Slider;\n"],"file":"index.js"}