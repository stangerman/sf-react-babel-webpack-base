{"version":3,"sources":["../../../../.tmp-es/components/tree/__tests__/tree.browser-test.jsx"],"names":["React","createReactClass","PropTypes","isFunction","cloneDeep","isEqual","chai","expect","chaiEnzyme","mountComponent","unmountComponent","keyObjects","sampleNodesDynamicHashMap","IconSettings","Tree","Search","DefaultExample","use","COMPONENT_CSS_CLASSES","base","describe","beforeEach","afterEach","it","wrapper","find","simulate","itemDiv","to","have","length","DOWN","UP","item","RIGHT","items","LEFT","id","height","container","hasClass","be","true","list","node","offsetHeight","equal","heading","ariaLabelledbyId","initialExpandedSelected","selectedNode","expandedBranchList","childNodes","itemClicked","sinon","spy","expandClicked","branch","callCount","expandButton","getNodes","nodes","map","getNodesSpy","nodeCallbackParameter","args","is","markedItem","onScroll","overflowY","large"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\n/* global sinon */\n/* eslint-disable prefer-arrow-callback */\n/* eslint-disable no-unused-expressions */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\nimport isFunction from 'lodash.isfunction';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEqual from 'lodash.isequal';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\n// `this.wrapper` and `this.dom` is set in the helpers file\nimport {\n\tmountComponent,\n\tunmountComponent,\n} from '../../../tests/enzyme-helpers';\n\nimport { keyObjects } from '../../../utilities/key-code';\nimport sampleNodesDynamicHashMap from '../__docs__/dynamic-hashmap';\n\nimport IconSettings from '../../icon-settings';\nimport Tree from '../../tree';\nimport Search from '../../forms/input/search';\nimport DefaultExample from '../__examples__/default';\n\nchai.use(chaiEnzyme());\n\nconst COMPONENT_CSS_CLASSES = {\n\tbase: 'slds-tree',\n};\n\ndescribe('Tree: ', () => {\n\t/*\n\t\tTests\n\t */\n\tdescribe('Tree can be navigated up/down using the keyboard', () => {\n\t\tbeforeEach(mountComponent(<DefaultExample log={() => {}} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('moves selection up/down with wrapping when using keyboard up/down keys', function () {\n\t\t\t// Initial focus selects the item\n\t\t\tthis.wrapper.find('#example-tree-1').simulate('focus');\n\t\t\tlet itemDiv = this.wrapper\n\t\t\t\t.find('#example-tree-1')\n\t\t\t\t.find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to next node\n\t\t\tthis.wrapper.find('#example-tree-1').simulate('keyDown', keyObjects.DOWN);\n\t\t\titemDiv = this.wrapper.find('#example-tree-2').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to next node\n\t\t\tthis.wrapper.find('#example-tree-2').simulate('keyDown', keyObjects.DOWN);\n\t\t\titemDiv = this.wrapper.find('#example-tree-3').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to next node\n\t\t\tthis.wrapper.find('#example-tree-3').simulate('keyDown', keyObjects.DOWN);\n\t\t\titemDiv = this.wrapper.find('#example-tree-7').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Wrap to first node\n\t\t\tthis.wrapper.find('#example-tree-7').simulate('keyDown', keyObjects.DOWN);\n\t\t\titemDiv = this.wrapper.find('#example-tree-1').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Wrap to last node\n\t\t\tthis.wrapper.find('#example-tree-1').simulate('keyDown', keyObjects.UP);\n\t\t\titemDiv = this.wrapper.find('#example-tree-7').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to previous node\n\t\t\tthis.wrapper.find('#example-tree-7').simulate('keyDown', keyObjects.UP);\n\t\t\titemDiv = this.wrapper.find('#example-tree-3').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to previous node\n\t\t\tthis.wrapper.find('#example-tree-3').simulate('keyDown', keyObjects.UP);\n\t\t\titemDiv = this.wrapper.find('#example-tree-2').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Go to previous node\n\t\t\tthis.wrapper.find('#example-tree-2').simulate('keyDown', keyObjects.UP);\n\t\t\titemDiv = this.wrapper.find('#example-tree-1').find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\t\t});\n\t});\n\n\tdescribe('Tree can be navigated right/left using the keyboard', () => {\n\t\tbeforeEach(mountComponent(<DefaultExample log={() => {}} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('expands/collapses branches when using right/left keys', function () {\n\t\t\t// Initial focus selects the item\n\t\t\tconst item = this.wrapper.find('#example-tree-1');\n\t\t\titem.simulate('focus');\n\t\t\tconst itemDiv = this.wrapper\n\t\t\t\t.find('#example-tree-1')\n\t\t\t\t.find('.slds-is-selected');\n\t\t\texpect(itemDiv).to.have.length(1);\n\n\t\t\t// Expand branch\n\t\t\tthis.wrapper\n\t\t\t\t.find('#example-tree-3')\n\t\t\t\t.simulate('keyDown', keyObjects.RIGHT);\n\t\t\tlet items = this.wrapper.find('li[aria-level=2]');\n\t\t\texpect(items).to.have.length(4);\n\n\t\t\t// Collapse branch\n\t\t\tthis.wrapper.find('#example-tree-3').simulate('keyDown', keyObjects.LEFT);\n\t\t\titems = this.wrapper.find('li[aria-level=2]');\n\t\t\texpect(items).to.have.length(0);\n\n\t\t\t// Expand branch and select an item\n\t\t\tthis.wrapper\n\t\t\t\t.find('#example-tree-3')\n\t\t\t\t.simulate('keyDown', keyObjects.RIGHT);\n\t\t\titems = this.wrapper.find('li[aria-level=2]');\n\t\t\texpect(items).to.have.length(4);\n\n\t\t\t// Collapse branch from an item\n\t\t\tthis.wrapper.find('#example-tree-3').simulate('keyDown', keyObjects.DOWN);\n\t\t\tthis.wrapper.find('#example-tree-8').simulate('keyDown', keyObjects.LEFT);\n\t\t\titems = this.wrapper.find('li[aria-level=2]');\n\t\t\texpect(items).to.have.length(0);\n\t\t});\n\t});\n\n\tdescribe('Default Structure and CSS', () => {\n\t\tconst id = 'this-is-a-container-test';\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DefaultExample\n\t\t\t\t\tclassName=\"this-is-a-container-test\"\n\t\t\t\t\theading=\"Foods\"\n\t\t\t\t\tid={id}\n\t\t\t\t\tlistClassName=\"this-is-an-unordered-list-test\"\n\t\t\t\t\tlistStyle={{ height: '500px' }}\n\t\t\t\t\tlog={() => {}}\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('has tree container class, list class, and heading', function () {\n\t\t\tconst container = this.wrapper.find('.slds-tree_container');\n\t\t\texpect(container.hasClass('this-is-a-container-test')).to.be.true;\n\n\t\t\tconst list = this.wrapper.find(`.${COMPONENT_CSS_CLASSES.base}`);\n\t\t\texpect(list).to.have.length(1);\n\t\t\texpect(list.hasClass('this-is-an-unordered-list-test')).to.be.true;\n\t\t\texpect(list.node.offsetHeight).to.equal(500);\n\n\t\t\tconst heading = this.wrapper.find(`#${id}__heading`);\n\t\t\texpect(heading).to.have.length(1);\n\t\t});\n\t});\n\n\tdescribe('Assistive Technology', () => {\n\t\tbeforeEach(\n\t\t\tmountComponent(<DefaultExample log={() => {}} assistiveText=\"Foods\" />)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('has heading via assistiveText', function () {\n\t\t\tconst heading = this.wrapper.find(\n\t\t\t\t'#example-tree__heading.slds-assistive-text'\n\t\t\t);\n\t\t\texpect(heading).to.have.length(1);\n\t\t\tconst ariaLabelledbyId = this.wrapper.find(\n\t\t\t\t'.slds-tree[aria-labelledby=\"example-tree__heading\"]'\n\t\t\t);\n\t\t\texpect(ariaLabelledbyId).to.have.length(1);\n\t\t});\n\t});\n\n\tdescribe('Initial Expanded and Selection based on nodes', () => {\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DefaultExample\n\t\t\t\t\tlog={() => {}}\n\t\t\t\t\tnodes={sampleNodesDynamicHashMap.initialExpandedSelected}\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('has initial selection', function () {\n\t\t\tlet selectedNode = this.wrapper\n\t\t\t\t.find('#example-tree-2')\n\t\t\t\t.find('.slds-is-selected');\n\t\t\t// Fruits, Watermelon, Tree Fruits\n\t\t\texpect(selectedNode).to.have.length(3);\n\t\t\tselectedNode = this.wrapper\n\t\t\t\t.find('#example-tree-5')\n\t\t\t\t.find('.slds-is-selected');\n\t\t\texpect(selectedNode).to.have.length(1);\n\t\t});\n\n\t\tit('has initial expanded branches', function () {\n\t\t\tconst expandedBranchList = this.wrapper\n\t\t\t\t.find('#example-tree-2')\n\t\t\t\t.find('.slds-is-expanded');\n\t\t\texpect(expandedBranchList.node.childNodes).to.have.length(2);\n\t\t});\n\t});\n\n\tdescribe('Branch expands and selects on click', () => {\n\t\tconst itemClicked = sinon.spy();\n\t\tconst expandClicked = sinon.spy();\n\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DefaultExample\n\t\t\t\t\tlog={() => {}}\n\t\t\t\t\tonExpandClick={expandClicked}\n\t\t\t\t\tonClick={itemClicked}\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('branch calls onExpandClicked and onClick', function () {\n\t\t\tconst branch = this.wrapper\n\t\t\t\t.find('#example-tree-2')\n\t\t\t\t.find('.slds-tree__item');\n\t\t\tbranch.simulate('click');\n\t\t\texpect(itemClicked.callCount).to.equal(1);\n\n\t\t\tconst expandButton = this.wrapper\n\t\t\t\t.find('#example-tree-2')\n\t\t\t\t.find('.slds-button');\n\t\t\texpandButton.simulate('click');\n\t\t\texpect(expandClicked.callCount).to.equal(1);\n\t\t});\n\t});\n\n\tdescribe('Item calls onClick', () => {\n\t\tconst itemClicked = sinon.spy();\n\n\t\tbeforeEach(\n\t\t\tmountComponent(<DefaultExample log={() => {}} onClick={itemClicked} />)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('item calls itemClicked', function () {\n\t\t\tconst item = this.wrapper\n\t\t\t\t.find('#example-tree-1')\n\t\t\t\t.find('.slds-tree__item');\n\t\t\titem.simulate('click');\n\t\t\texpect(itemClicked.callCount).to.equal(1);\n\t\t});\n\t});\n\n\tdescribe('getNodes is called correctly on initial tree', () => {\n\t\tconst getNodes = (node) =>\n\t\t\t(node.nodes\n\t\t\t\t? node.nodes.map(\n\t\t\t\t\t(id) => sampleNodesDynamicHashMap.initialExpandedSelected[id]\n\t\t\t\t)\n\t\t\t\t: []);\n\t\tconst getNodesSpy = sinon.spy(getNodes);\n\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DefaultExample\n\t\t\t\t\tgetNodes={getNodesSpy}\n\t\t\t\t\tlog={() => {}}\n\t\t\t\t\tnodes={sampleNodesDynamicHashMap.initialExpandedSelected}\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('getNodes passes in correct node and is called 18 times (all branches twice + root branch) on initial tree', () => {\n\t\t\tconst nodeCallbackParameter = getNodesSpy.args[0][0];\n\t\t\texpect(\n\t\t\t\tisEqual(\n\t\t\t\t\tnodeCallbackParameter.nodes,\n\t\t\t\t\tsampleNodesDynamicHashMap.initialExpandedSelected[0].nodes\n\t\t\t\t)\n\t\t\t).is.true;\n\t\t\texpect(getNodesSpy.callCount).to.equal(18);\n\t\t});\n\t});\n\n\tdescribe('Search term is highlighted', () => {\n\t\tbeforeEach(\n\t\t\tmountComponent(<DefaultExample log={() => {}} searchTerm=\"fruit\" />)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('item calls itemClicked', function () {\n\t\t\tconst markedItem = this.wrapper.find('mark');\n\t\t\texpect(markedItem).to.have.length(1);\n\t\t});\n\t});\n\n\tdescribe('Scrolling calls onScroll', () => {\n\t\tconst onScroll = sinon.spy();\n\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DefaultExample\n\t\t\t\t\theading=\"Foods\"\n\t\t\t\t\tlistStyle={{\n\t\t\t\t\t\theight: '300px',\n\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t}}\n\t\t\t\t\tlog={() => {}}\n\t\t\t\t\tnodes={sampleNodesDynamicHashMap.large}\n\t\t\t\t\tonScroll={onScroll}\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('scrolling calls onScroll', function () {\n\t\t\tconst list = this.wrapper.find(`.${COMPONENT_CSS_CLASSES.base}`);\n\t\t\tlist.simulate('scroll');\n\t\t\texpect(onScroll.callCount).to.equal(1);\n\t\t});\n\t});\n});\n"],"file":"tree.browser-test.js"}