{"version":3,"sources":["../../../../.tmp-es/components/tree/private/item.jsx"],"names":["React","PropTypes","classNames","isFunction","Button","Highlighter","EventUtil","KEYS","mapKeyEventCallbacks","TREE_ITEM","handleSelect","event","props","fromFocus","trap","onSelect","data","node","select","selected","treeIndex","findNextNode","flattenedNodes","nodes","map","flattenedNode","index","indexOf","length","findPreviousNode","handleKeyDownDown","focusedNodeIndex","clearSelectedNodes","handleKeyDownUp","handleKeyDownLeft","parent","onExpand","expand","expanded","handleKeyDownEnter","handleKeyDown","callbacks","DOWN","callback","evt","UP","LEFT","ENTER","handleFocus","treeHasFocus","target","currentTarget","getTabIndex","initialFocus","selectedNodeIndexes","Item","isSelected","isFocused","treeId","id","level","onNodeBlur","component","focus","icon","searchTerm","label","displayName","propTypes","htmlId","string","isRequired","oneOfType","number","object","func","arrayOf","bool","defaultProps"],"mappings":";;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,IAAMC,eAAe,SAAfA,YAAe,OAAiC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACrDP,YAAUQ,IAAV,CAAeH,KAAf;;AACA,MAAIR,WAAWS,MAAMG,QAAjB,CAAJ,EAAgC;AAC/BH,UAAMG,QAAN,CAAe;AACdJ,kBADc;AAEdK,YAAM;AACLC,cAAML,MAAMK,IADP;AAELC,gBAAQ,CAACN,MAAMK,IAAN,CAAWE,QAFf;AAGLC,mBAAWR,MAAMQ;AAHZ,OAFQ;AAOdP;AAPc,KAAf;AASA;AACD,CAbD;;AAeA,IAAMQ,eAAe,SAAfA,YAAe,CAACC,cAAD,EAAiBL,IAAjB,EAA0B;AAC9C,MAAMM,QAAQD,eAAeE,GAAf,CAAmB,UAACC,aAAD;AAAA,WAAmBA,cAAcR,IAAjC;AAAA,GAAnB,CAAd;AACA,MAAMS,QAAQH,MAAMI,OAAN,CAAcV,IAAd,CAAd;AACA,SAAOK,eAAe,CAACI,QAAQ,CAAT,IAAcJ,eAAeM,MAA5C,CAAP;AACA,CAJD;;AAMA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACP,cAAD,EAAiBL,IAAjB,EAA0B;AAClD,MAAMM,QAAQD,eAAeE,GAAf,CAAmB,UAACC,aAAD;AAAA,WAAmBA,cAAcR,IAAjC;AAAA,GAAnB,CAAd;AACA,MAAIS,QAAQH,MAAMI,OAAN,CAAcV,IAAd,IAAsB,CAAlC;;AACA,MAAIS,QAAQ,CAAZ,EAAe;AACdA,aAASJ,eAAeM,MAAxB;AACA;;AACD,SAAON,eAAeI,KAAf,CAAP;AACA,CAPD;;AASA,IAAMI,oBAAoB,SAApBA,iBAAoB,CAACnB,KAAD,EAAQC,KAAR,EAAkB;AAC3C,MAAIA,MAAMmB,gBAAN,KAA2BnB,MAAMQ,SAArC,EAAgD;AAC/C;AACA,QAAMK,gBAAgBJ,aAAaT,MAAMU,cAAnB,EAAmCV,MAAMK,IAAzC,CAAtB;AACAL,UAAMG,QAAN,CAAe;AACdJ,kBADc;AAEdK,YAAM;AACLC,cAAMQ,cAAcR,IADf;AAELC,gBAAQ,IAFH;AAGLE,mBAAWK,cAAcL;AAHpB,OAFQ;AAOdY,0BAAoB;AAPN,KAAf;AASA;AACD,CAdD;;AAgBA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACtB,KAAD,EAAQC,KAAR,EAAkB;AACzC,MAAIA,MAAMmB,gBAAN,KAA2BnB,MAAMQ,SAArC,EAAgD;AAC/C;AACA,QAAMK,gBAAgBI,iBAAiBjB,MAAMU,cAAvB,EAAuCV,MAAMK,IAA7C,CAAtB;AACAL,UAAMG,QAAN,CAAe;AACdJ,kBADc;AAEdK,YAAM;AACLC,cAAMQ,cAAcR,IADf;AAELC,gBAAQ,IAFH;AAGLE,mBAAWK,cAAcL;AAHpB,OAFQ;AAOdY,0BAAoB;AAPN,KAAf;AASA;AACD,CAdD;;AAgBA,IAAME,oBAAoB,SAApBA,iBAAoB,CAACvB,KAAD,EAAQC,KAAR,EAAkB;AAC3C,MAAMW,QAAQX,MAAMU,cAAN,CAAqBE,GAArB,CAAyB,UAACC,aAAD;AAAA,WAAmBA,cAAcR,IAAjC;AAAA,GAAzB,CAAd;AACA,MAAMS,QAAQH,MAAMI,OAAN,CAAcf,MAAMuB,MAApB,CAAd;;AACA,MAAIT,UAAU,CAAC,CAAf,EAAkB;AACjBd,UAAMwB,QAAN,CAAe;AACdzB,kBADc;AAEdK,YAAM;AACLC,cAAML,MAAMuB,MADP;AAELjB,gBAAQ,IAFH;AAGLmB,gBAAQ,CAACzB,MAAMuB,MAAN,CAAaG,QAHjB;AAILlB,mBAAWR,MAAMU,cAAN,CAAqBI,KAArB,EAA4BN;AAJlC;AAFQ,KAAf;AASA;AACD,CAdD;;AAgBA,IAAMmB,qBAAqB,SAArBA,kBAAqB,CAAC5B,KAAD,EAAQC,KAAR,EAAkB;AAC5CF,eAAa;AAAEC,gBAAF;AAASC;AAAT,GAAb;AACA,CAFD;;AAIA,IAAM4B,gBAAgB,SAAhBA,aAAgB,CAAC7B,KAAD,EAAQC,KAAR,EAAkB;AAAA;;AACvCJ,uBAAqBG,KAArB,EAA4B;AAC3B8B,6DACElC,KAAKmC,IADP,EACc;AAAEC,gBAAU,kBAACC,GAAD;AAAA,eAASd,kBAAkBc,GAAlB,EAAuBhC,KAAvB,CAAT;AAAA;AAAZ,KADd,+BAEEL,KAAKsC,EAFP,EAEY;AAAEF,gBAAU,kBAACC,GAAD;AAAA,eAASX,gBAAgBW,GAAhB,EAAqBhC,KAArB,CAAT;AAAA;AAAZ,KAFZ,+BAGEL,KAAKuC,IAHP,EAGc;AAAEH,gBAAU,kBAACC,GAAD;AAAA,eAASV,kBAAkBU,GAAlB,EAAuBhC,KAAvB,CAAT;AAAA;AAAZ,KAHd,+BAIEL,KAAKwC,KAJP,EAIe;AAAEJ,gBAAU,kBAACC,GAAD;AAAA,eAASL,mBAAmBK,GAAnB,EAAwBhC,KAAxB,CAAT;AAAA;AAAZ,KAJf;AAD2B,GAA5B;AAQA,CATD;;AAWA,IAAMoC,cAAc,SAAdA,WAAc,CAACrC,KAAD,EAAQC,KAAR,EAAkB;AACrC,MACC,CAACA,MAAMqC,YAAP,IACA,CAACrC,MAAMmB,gBADP,IAEApB,MAAMuC,MAAN,KAAiBvC,MAAMwC,aAHxB,EAIE;AACDzC,iBAAa;AAAEC,kBAAF;AAASC;AAAT,KAAb;AACA;AACD,CARD;;AAUA,IAAMwC,cAAc,SAAdA,WAAc,CAACxC,KAAD,EAAW;AAC9B,MAAMyC,eACLzC,MAAM0C,mBAAN,CAA0B1B,MAA1B,KAAqC,CAArC,IACAhB,MAAMQ,SAAN,KAAoBR,MAAMU,cAAN,CAAqB,CAArB,EAAwBF,SAF7C;AAGA,SAAOR,MAAMQ,SAAN,KAAoBR,MAAMmB,gBAA1B,IAA8CsB,YAA9C,GAA6D,CAA7D,GAAiE,CAAC,CAAzE;AACA,CALD;AAOA;;;;;AAGA,IAAME,OAAO,SAAPA,IAAO,CAAC3C,KAAD,EAAW;AACvB,MAAM4C,aAAa5C,MAAMK,IAAN,CAAWE,QAA9B;AACA,MAAMsC,YAAY7C,MAAMQ,SAAN,KAAoBR,MAAMmB,gBAA5C;AAEA,SACC;AACC,kBAAOnB,MAAM8C,MAAb,cAAuB9C,MAAMK,IAAN,CAAW0C,EAAlC,CADD;AAEC,UAAK,UAFN;AAGC,kBAAY/C,MAAMgD,KAHnB;AAIC,qBAAeJ,aAAa,MAAb,GAAsB,OAJtC;AAKC,cAAUJ,YAAYxC,KAAZ,CALX;AAMC,eAAW,mBAACD,KAAD;AAAA,aAAW6B,cAAc7B,KAAd,EAAqBC,KAArB,CAAX;AAAA,KANZ;AAOC,aAAS,iBAACD,KAAD;AAAA,aAAWqC,YAAYrC,KAAZ,EAAmBC,KAAnB,CAAX;AAAA,KAPV;AAQC,YAAQA,MAAMiD,UARf;AASC,SAAK,aAACC,SAAD,EAAe;AACnB,UAAIlD,MAAMqC,YAAN,IAAsBa,SAAtB,IAAmCL,SAAvC,EAAkD;AACjDK,kBAAUC,KAAV;AACA;AACD;AAbF,KAgBC;AACC,eAAW7D,WAAW,iBAAX,EAA8B;AACxC,0BAAoBsD;AADoB,KAA9B,CADZ;AAIC,aAAS,iBAAC7C,KAAD,EAAW;AACnBD,mBAAa;AAAEC,oBAAF;AAASC;AAAT,OAAb;AACA;AANF,KASC,oBAAC,MAAD;AACC,cAAS,IADV;AAEC,mBAAe;AAAEoD,YAAM;AAAR,KAFhB;AAGC,UAAK,cAHN;AAIC,kBAAa,SAJd;AAKC,cAAS,cALV;AAMC,cAAS,OANV;AAOC,aAAQ,MAPT;AAQC,eAAU,sCARX;AASC;AATD,IATD,EAqBC;AAAM,eAAU;AAAhB,KAEC,oBAAC,WAAD;AACC,YAAQpD,MAAMqD,UADf;AAEC,eAAU;AAFX,KAIErD,MAAMsD,KAJR,CAFD,CArBD,CAhBD,CADD;AAkDA,CAtDD,C,CAwDA;AACA;;;AACAX,KAAKY,WAAL,GAAmB1D,SAAnB,C,CAEA;;AACA8C,KAAKa,SAAL,GAAiB;AAChB;;;AAGAC,UAAQpE,UAAUqE,MAAV,CAAiBC,UAJT;;AAKhB;;;AAGAL,SAAOjE,UAAUuE,SAAV,CAAoB,CAACvE,UAAUgB,IAAX,EAAiBhB,UAAUqE,MAA3B,CAApB,EAAwDC,UAR/C;;AAShB;;;AAGAX,SAAO3D,UAAUwE,MAAV,CAAiBF,UAZR;;AAahB;;;AAGAtD,QAAMhB,UAAUyE,MAAV,CAAiBH,UAhBP;;AAiBhB;;;AAGAnC,YAAUnC,UAAU0E,IAAV,CAAeJ,UApBT;;AAqBhB;;;AAGAxD,YAAUd,UAAU0E,IAxBJ;;AAyBhB;;;AAGAV,cAAYhE,UAAUqE,MA5BN;;AA6BhB;;;AAGAZ,UAAQzD,UAAUqE,MAhCF;;AAiChB;;;AAGAlD,aAAWnB,UAAUqE,MApCL;;AAqChB;;;AAGAhD,kBAAgBrB,UAAU2E,OAAV,CAAkB3E,UAAUyE,MAA5B,CAxCA;;AAyChB;;;AAGApB,uBAAqBrD,UAAU2E,OAAV,CAAkB3E,UAAUqE,MAA5B,CA5CL;;AA6ChB;;;AAGAvC,oBAAkB9B,UAAUqE,MAhDZ;;AAiDhB;;;AAGAT,cAAY5D,UAAU0E,IApDN;;AAqDhB;;;AAGA1B,gBAAchD,UAAU4E,IAxDR;;AAyDhB;;;AAGA1C,UAAQlC,UAAUyE;AA5DF,CAAjB;AA+DAnB,KAAKuB,YAAL,GAAoB;AACnB3D,YAAU,KADS;AAEnBmC,uBAAqB;AAFF,CAApB;AAKA,eAAeC,IAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tree Item Component\n\n// Implements the [Tree design pattern](https://www.lightningdesignsystem.com/components/tree/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isFunction from 'lodash.isfunction';\n\nimport Button from '../../button';\nimport Highlighter from '../../utilities/highlighter';\n\nimport EventUtil from '../../../utilities/event';\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\nimport { TREE_ITEM } from '../../../utilities/constants';\n\nconst handleSelect = ({ event, props, fromFocus }) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.node,\n\t\t\t\tselect: !props.node.selected,\n\t\t\t\ttreeIndex: props.treeIndex,\n\t\t\t},\n\t\t\tfromFocus,\n\t\t});\n\t}\n};\n\nconst findNextNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = nodes.indexOf(node);\n\treturn flattenedNodes[(index + 1) % flattenedNodes.length];\n};\n\nconst findPreviousNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tlet index = nodes.indexOf(node) - 1;\n\tif (index < 0) {\n\t\tindex += flattenedNodes.length;\n\t}\n\treturn flattenedNodes[index];\n};\n\nconst handleKeyDownDown = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Select the next visible node\n\t\tconst flattenedNode = findNextNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownUp = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Go to the previous visible node\n\t\tconst flattenedNode = findPreviousNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownLeft = (event, props) => {\n\tconst nodes = props.flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = nodes.indexOf(props.parent);\n\tif (index !== -1) {\n\t\tprops.onExpand({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.parent,\n\t\t\t\tselect: true,\n\t\t\t\texpand: !props.parent.expanded,\n\t\t\t\ttreeIndex: props.flattenedNodes[index].treeIndex,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst handleKeyDownEnter = (event, props) => {\n\thandleSelect({ event, props });\n};\n\nconst handleKeyDown = (event, props) => {\n\tmapKeyEventCallbacks(event, {\n\t\tcallbacks: {\n\t\t\t[KEYS.DOWN]: { callback: (evt) => handleKeyDownDown(evt, props) },\n\t\t\t[KEYS.UP]: { callback: (evt) => handleKeyDownUp(evt, props) },\n\t\t\t[KEYS.LEFT]: { callback: (evt) => handleKeyDownLeft(evt, props) },\n\t\t\t[KEYS.ENTER]: { callback: (evt) => handleKeyDownEnter(evt, props) },\n\t\t},\n\t});\n};\n\nconst handleFocus = (event, props) => {\n\tif (\n\t\t!props.treeHasFocus &&\n\t\t!props.focusedNodeIndex &&\n\t\tevent.target === event.currentTarget\n\t) {\n\t\thandleSelect({ event, props });\n\t}\n};\n\nconst getTabIndex = (props) => {\n\tconst initialFocus =\n\t\tprops.selectedNodeIndexes.length === 0 &&\n\t\tprops.treeIndex === props.flattenedNodes[0].treeIndex;\n\treturn props.treeIndex === props.focusedNodeIndex || initialFocus ? 0 : -1;\n};\n\n/**\n * A Tree Item is a non-branching node in a hierarchical list.\n */\nconst Item = (props) => {\n\tconst isSelected = props.node.selected;\n\tconst isFocused = props.treeIndex === props.focusedNodeIndex;\n\n\treturn (\n\t\t<li\n\t\t\tid={`${props.treeId}-${props.node.id}`}\n\t\t\trole=\"treeitem\"\n\t\t\taria-level={props.level}\n\t\t\taria-selected={isSelected ? 'true' : 'false'}\n\t\t\ttabIndex={getTabIndex(props)}\n\t\t\tonKeyDown={(event) => handleKeyDown(event, props)}\n\t\t\tonFocus={(event) => handleFocus(event, props)}\n\t\t\tonBlur={props.onNodeBlur}\n\t\t\tref={(component) => {\n\t\t\t\tif (props.treeHasFocus && component && isFocused) {\n\t\t\t\t\tcomponent.focus();\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{/* eslint-disable jsx-a11y/no-static-element-interactions */}\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-tree__item', {\n\t\t\t\t\t'slds-is-selected': isSelected,\n\t\t\t\t})}\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\thandleSelect({ event, props });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Button\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\tassistiveText={{ icon: '' }}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"chevronright\"\n\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\tclassName=\"slds-m-right--small slds-is-disabled\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t{/* eslint-disable no-script-url */}\n\t\t\t\t<span className=\"slds-size_1-of-1\">\n\t\t\t\t\t{/* eslint-enable no-script-url */}\n\t\t\t\t\t<Highlighter\n\t\t\t\t\t\tsearch={props.searchTerm}\n\t\t\t\t\t\tclassName=\"slds-tree__item-label slds-truncate\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.label}\n\t\t\t\t\t</Highlighter>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = TREE_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * HTML `id` of the wrapping container element joined with the `id` of the node. This will recursively increase as the tree depth increases.\n\t */\n\thtmlId: PropTypes.string.isRequired,\n\t/**\n\t * The text of the tree item.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n\t/**\n\t * The number of nestings. Determines the ARIA level and style alignment.\n\t */\n\tlevel: PropTypes.number.isRequired,\n\t/**\n\t * The current node that is being rendered.\n\t */\n\tnode: PropTypes.object.isRequired,\n\t/**\n\t * This function triggers when the expand or collapse icon is clicked or due to keyboard navigation.\n\t */\n\tonExpand: PropTypes.func.isRequired,\n\t/**\n\t * Function that will run whenever an item or branch is selected (click or keyboard).\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * Highlights term if found in node label\n\t */\n\tsearchTerm: PropTypes.string,\n\t/**\n\t * Unique id used for a prefix of all tree nodes\n\t */\n\ttreeId: PropTypes.string,\n\t/**\n\t * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n\t */\n\ttreeIndex: PropTypes.string,\n\t/**\n\t * Flattened tree structure.\n\t */\n\tflattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t * Tree indexes of nodes that are currently selected.\n\t */\n\tselectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Tree index of the node that is currently focused.\n\t */\n\tfocusedNodeIndex: PropTypes.string,\n\t/**\n\t * Callback for when a node is blurred.\n\t */\n\tonNodeBlur: PropTypes.func,\n\t/**\n\t * Sets focus on render.\n\t */\n\ttreeHasFocus: PropTypes.bool,\n\t/**\n\t * This node's parent.\n\t */\n\tparent: PropTypes.object,\n};\n\nItem.defaultProps = {\n\tselected: false,\n\tselectedNodeIndexes: [],\n};\n\nexport default Item;\n"],"file":"item.js"}