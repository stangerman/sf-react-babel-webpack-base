{"version":3,"sources":["../../../.tmp-es/components/illustration/index.jsx"],"names":["React","PropTypes","checkProps","classNames","Svg","ILLUSTRATION","Illustration","className","illustration","internalIllustration","heading","messageBody","name","path","size","style","kababCaseName","replace","toLowerCase","illustrationSvg","height","displayName","propTypes","oneOfType","array","object","string","bool","isRequired","node","oneOf","defaultProps"],"mappings":"AAAA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,6BAAvB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,+BAAhB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA;;;;AAGA,IAAMC,eAAe,SAAfA,YAAe,OAUf;AAAA,MATLC,SASK,QATLA,SASK;AAAA,MARLC,YAQK,QARLA,YAQK;AAAA,MAPLC,oBAOK,QAPLA,oBAOK;AAAA,MANLC,OAMK,QANLA,OAMK;AAAA,MALLC,WAKK,QALLA,WAKK;AAAA,MAJLC,IAIK,QAJLA,IAIK;AAAA,MAHLC,IAGK,QAHLA,IAGK;AAAA,MAFLC,IAEK,QAFLA,IAEK;AAAA,MADLC,KACK,QADLA,KACK;AACLb,aAAW,cAAX,EAA2B;AAC1BM,8BAD0B;AAE1BC,8CAF0B;AAG1BC,oBAH0B;AAI1BG;AAJ0B,GAA3B;AAMA,MAAMG,gBAAgBJ,OAAOA,KAAKK,OAAL,CAAa,MAAb,EAAqB,GAArB,EAA0BC,WAA1B,EAAP,GAAiD,EAAvE;AACA,MAAIC,eAAJ;;AACA,MAAIX,YAAJ,EAAkB;AACjB;AACAW,sBACC,oBAAC,GAAD;AACC,iBAAU,wBADX;AAEC,qBAAY,MAFb;AAGC,YAAMX,YAHP;AAIC,YAAMQ,aAJP;AAKC,aAAOD;AALR,MADD;AASA,GAXD,MAWO,IAAIF,IAAJ,EAAU;AAChBM,sBACC;AACC,iBAAU,wBADX;AAEC,qBAAY,MAFb;AAGC,YAAMH,aAHP;AAIC,aAAOD;AAJR,OAMC;AAAK,iBAAWF;AAAhB,MAND,CADD;AAUA,GA/BI,CAgCL;;;AACA,MAAIM,mBAAmBL,SAAS,OAA5B,IAAuC,CAACC,MAAMK,MAAlD,EAA0D;AACzDL,UAAMK,MAAN,GAAe,OAAf;AACA;;AACD,SACC;AACC,eAAWjB,WAAWI,SAAX,EAAsB,mBAAtB,EAA2C;AACrD,iCAA2BO,SAAS,OADiB;AAErD,iCAA2BA,SAAS;AAFiB,KAA3C;AADZ,KAMEK,eANF,EAOC;AAAK,eAAU;AAAf,KACET,UACA;AAAI,eAAU;AAAd,KAA0CA,OAA1C,CADA,GAEG,IAHL,EAIEC,cACA;AAAG,eAAU;AAAb,KAAuCA,WAAvC,CADA,GAEG,IANL,CAPD,CADD;AAkBA,CAhED,C,CAkEA;AACA;;;AACAL,aAAae,WAAb,GAA2BhB,YAA3B,C,CAEA;;AACAC,aAAagB,SAAb,GAAyB;AACxB;;;AAGAf,aAAWN,UAAUsB,SAAV,CAAoB,CAC9BtB,UAAUuB,KADoB,EAE9BvB,UAAUwB,MAFoB,EAG9BxB,UAAUyB,MAHoB,CAApB,CAJa;;AASxB;;;AAGAhB,WAAST,UAAUyB,MAZK;;AAaxB;;;AAGAlB,gBAAcP,UAAUwB,MAhBA;;AAiBxB;;;AAGAhB,wBAAsBR,UAAU0B,IAAV,CAAeC,UApBb;;AAqBxB;;;AAGAjB,eAAaV,UAAUsB,SAAV,CAAoB,CAACtB,UAAUyB,MAAX,EAAmBzB,UAAU4B,IAA7B,CAApB,CAxBW;;AAyBxB;;;AAGAjB,QAAMX,UAAUyB,MA5BQ;;AA6BxB;;;AAGAb,QAAMZ,UAAUyB,MAhCQ;;AAiCxB;;;AAGAZ,QAAMb,UAAU6B,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CApCkB;;AAqCxB;;;AAGAf,SAAOd,UAAUwB;AAxCO,CAAzB;AA2CAnB,aAAayB,YAAb,GAA4B;AAC3BtB,wBAAsB,IADK;AAE3BK,QAAM,OAFqB;AAG3BC,SAAO;AAHoB,CAA5B;AAMA,eAAeT,YAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Illustration Component\n\n// Based on SLDS v2.6.2\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// A simple javascript utility for conditionally joining classNames together.\nimport classNames from '../../utilities/class-names';\n\n// ## SVG\nimport Svg from '../utilities/utility-icon/svg';\n\n// ## Constants\nimport { ILLUSTRATION } from '../../utilities/constants';\n\n/**\n * An illustration is an image and inline text that work in tandem to communicate a state in a more friendly way.\n */\nconst Illustration = ({\n\tclassName,\n\tillustration,\n\tinternalIllustration,\n\theading,\n\tmessageBody,\n\tname,\n\tpath,\n\tsize,\n\tstyle,\n}) => {\n\tcheckProps('Illustration', {\n\t\tillustration,\n\t\tinternalIllustration,\n\t\theading,\n\t\tpath,\n\t});\n\tconst kababCaseName = name ? name.replace(/_| /g, '-').toLowerCase() : '';\n\tlet illustrationSvg;\n\tif (illustration) {\n\t\t// Use SVG data passed in with `illustration` prop\n\t\tillustrationSvg = (\n\t\t\t<Svg\n\t\t\t\tclassName=\"slds-illustration__svg\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t\tdata={illustration}\n\t\t\t\tname={kababCaseName}\n\t\t\t\tstyle={style}\n\t\t\t/>\n\t\t);\n\t} else if (path) {\n\t\tillustrationSvg = (\n\t\t\t<svg\n\t\t\t\tclassName=\"slds-illustration__svg\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t\tname={kababCaseName}\n\t\t\t\tstyle={style}\n\t\t\t>\n\t\t\t\t<use xlinkHref={path} />\n\t\t\t</svg>\n\t\t);\n\t}\n\t// large illustration svg should have a default height of 400px if not already specified\n\tif (illustrationSvg && size === 'large' && !style.height) {\n\t\tstyle.height = '400px';\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(className, 'slds-illustration', {\n\t\t\t\t'slds-illustration_small': size === 'small',\n\t\t\t\t'slds-illustration_large': size === 'large',\n\t\t\t})}\n\t\t>\n\t\t\t{illustrationSvg}\n\t\t\t<div className=\"slds-text-longform\">\n\t\t\t\t{heading ? (\n\t\t\t\t\t<h3 className=\"slds-text-heading_medium\">{heading}</h3>\n\t\t\t\t) : null}\n\t\t\t\t{messageBody ? (\n\t\t\t\t\t<p className=\"slds-text-body_regular\">{messageBody}</p>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nIllustration.displayName = ILLUSTRATION;\n\n// ### Prop Types\nIllustration.propTypes = {\n\t/**\n\t * CSS classes that are applied to the SVG. _Tested with Mocha testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * A heading text. It is required if illustration is present. _Tested with snapshot testing._ _Tested with Mocha testing._\n\t */\n\theading: PropTypes.string,\n\t/**\n\t * A custom SVG object to use instead of the supplied SLDS illustrations, look in `design-system-react/assets/images/illustrations` for examples and syntax. _Tested with snapshot testing._ _Tested with Mocha testing._\n\t */\n\tillustration: PropTypes.object,\n\t/**\n\t * Indicates whether the illustration SVGs are from the design-system-react repo. If yes, set to true.\n\t */\n\tinternalIllustration: PropTypes.bool.isRequired,\n\t/**\n\t * A message body below the heading to further communicate the state of the component. _Tested with snapshot testing._ _Tested with Mocha testing._\n\t */\n\tmessageBody: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Name of the illustration. Visit <a href='https://lightningdesignsystem.com/components/illustration/'>Lightning Design System Illustration</a> to reference illustration names. _Tested with snapshot testing._ _Tested with Mocha testing._\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * Path to the illustration SVG image. _Tested with snapshot testing._\n\t */\n\tpath: PropTypes.string,\n\t/**\n\t * Size of the illustration. _Tested with snapshot testing._ _Tested with Mocha testing._\n\t */\n\tsize: PropTypes.oneOf(['small', 'large']),\n\t/**\n\t * Custom styles to be passed to the illustration SVG. _Tested with Mocha testing._\n\t */\n\tstyle: PropTypes.object,\n};\n\nIllustration.defaultProps = {\n\tinternalIllustration: true,\n\tsize: 'small',\n\tstyle: {},\n};\n\nexport default Illustration;\n"],"file":"index.js"}