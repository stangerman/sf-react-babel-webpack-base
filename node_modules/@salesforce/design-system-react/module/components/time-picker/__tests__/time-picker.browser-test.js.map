{"version":3,"sources":["../../../../.tmp-es/components/time-picker/__tests__/time-picker.browser-test.jsx"],"names":["React","createFactory","createReactClass","ReactDOM","TestUtils","expect","assign","SLDSTimepicker","IconSettings","Simulate","findRenderedDOMComponentWithTag","findRenderedDOMComponentWithClass","mockCallback","sinon","spy","formatter","date","toLocaleTimeString","hour","minute","dateTimeNow","Date","defaultStrValue","defaultProps","onDateChange","value","strValue","describe","it","futureDateTime","getTime","TestTimepicker","getInitialState","isOpen","render","parent","renderIntoDocument","refs","timePicker","state","should","eql"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;IAGCC,Q,GAGGL,S,CAHHK,Q;IACAC,+B,GAEGN,S,CAFHM,+B;IACAC,iC,GACGP,S,CADHO,iC;AAGD,IAAMC,eAAeC,MAAMC,GAAN,EAArB;;AAEA,IAAMC,YAAY,SAAZA,SAAY,CAACC,IAAD;AAAA,SACjBA,KAAKC,kBAAL,CAAwB,OAAxB,EAAiC;AAAEC,UAAM,SAAR;AAAmBC,YAAQ;AAA3B,GAAjC,CADiB;AAAA,CAAlB;;AAEA,IAAMC,cAAc,IAAIC,IAAJ,EAApB;AACA,IAAMC,kBAAkBP,UAAUK,WAAV,CAAxB;AAEA,IAAMG,eAAe;AACpBC,gBAAc,wBAAM,CAAE,CADF;AAEpBC,SAAOL,WAFa;AAGpBM,YAAUJ;AAHU,CAArB;AAMAK,SAAS,kBAAT,EAA6B,YAAM;AAClCA,WAAS,8BAAT,EAAyC,YAAM;AAC9CC,OAAG,+CAAH,EAAoD,YAAM;AACzD,UAAMC,iBAAiB,IAAIR,IAAJ,CACtB,IAAIA,IAAJ,GAAWS,OAAX,KAAuB,KAAK,EAAL,GAAU,EAAV,GAAe,IADhB,CAAvB;AAIA,UAAMC,iBAAiB9B,cACtBC,iBAAiB;AAAA;AAChB8B,uBADgB,6BACG;AAClB;AACA,iBAAO;AACNC,oBAAQ,KADF;AAENR,mBAAOI,cAFD;AAGNH,sBAAUX,UAAUc,cAAV;AAHJ,WAAP;AAKA,SARe;AAShBK,cATgB,oBASN;AACT,iBACC,oBAAC,YAAD;AAAc,sBAAS;AAAvB,aACC,oBAAC,cAAD;AAAgB,iBAAI;AAApB,aAAqCX,YAArC,EADD,CADD;AAKA;AAfe,OAAjB,CADsB,CAAvB;AAoBA,UAAMY,SAAS/B,UAAUgC,kBAAV,CAA6BL,gBAA7B,CAAf;AACAI,aAAOE,IAAP,CAAYC,UAAZ,CAAuBC,KAAvB,CAA6Bb,QAA7B,CAAsCc,MAAtC,CAA6CC,GAA7C,CAAiDnB,eAAjD;AACA,KA3BD;AA4BA,GA7BD;AA8BA,CA/BD","sourcesContent":["/* eslint-disable react/no-string-refs */\n\nimport React, { createFactory } from 'react';\nimport createReactClass from 'create-react-class';\nimport ReactDOM from 'react-dom';\nimport TestUtils from 'react-addons-test-utils';\nimport { expect } from 'chai';\nimport assign from 'lodash.assign';\n\nimport SLDSTimepicker from '../../time-picker';\nimport IconSettings from '../../icon-settings';\n\nconst {\n\tSimulate,\n\tfindRenderedDOMComponentWithTag,\n\tfindRenderedDOMComponentWithClass,\n} = TestUtils;\n\nconst mockCallback = sinon.spy();\n\nconst formatter = (date) =>\n\tdate.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\nconst dateTimeNow = new Date();\nconst defaultStrValue = formatter(dateTimeNow);\n\nconst defaultProps = {\n\tonDateChange: () => {},\n\tvalue: dateTimeNow,\n\tstrValue: defaultStrValue,\n};\n\ndescribe('SLDSTimepicker: ', () => {\n\tdescribe('Timepicker Value Prop Change', () => {\n\t\tit('displays a modified state upon changing props', () => {\n\t\t\tconst futureDateTime = new Date(\n\t\t\t\tnew Date().getTime() + 24 * 60 * 60 * 1000\n\t\t\t);\n\n\t\t\tconst TestTimepicker = createFactory(\n\t\t\t\tcreateReactClass({\n\t\t\t\t\tgetInitialState () {\n\t\t\t\t\t\t// force the state to have a future dateTime...\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tisOpen: false,\n\t\t\t\t\t\t\tvalue: futureDateTime,\n\t\t\t\t\t\t\tstrValue: formatter(futureDateTime),\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\trender () {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t\t\t\t\t<SLDSTimepicker ref=\"timePicker\" {...defaultProps} />\n\t\t\t\t\t\t\t</IconSettings>\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconst parent = TestUtils.renderIntoDocument(TestTimepicker());\n\t\t\tparent.refs.timePicker.state.strValue.should.eql(defaultStrValue);\n\t\t});\n\t});\n});\n"],"file":"time-picker.browser-test.js"}