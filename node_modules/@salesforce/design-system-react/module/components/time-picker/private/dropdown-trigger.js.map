{"version":3,"sources":["../../../../.tmp-es/components/time-picker/private/dropdown-trigger.jsx"],"names":["React","createReactClass","PropTypes","Input","KEYS","MENU_DROPDOWN_TRIGGER","TimepickerDropdownTrigger","displayName","propTypes","iconRight","node","id","string","label","menu","onBlur","func","onClick","onFocus","onKeyDown","onMouseDown","triggerRef","value","handleKeyDown","event","props","keyCode","ENTER","DOWN","UP","ESCAPE","render"],"mappings":";;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,6BAAjB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA;;;;AAGA,IAAMC,4BAA4BL,iBAAiB;AAClD;AACA;AACA;AACAM,eAAaF,qBAJqC;AAMlD;AACAG,aAAW;AACV;;;AAGAC,eAAWP,UAAUQ,IAJX;;AAKV;;;AAGAC,QAAIT,UAAUU,MARJ;;AASV;;;AAGAC,WAAOX,UAAUU,MAZP;;AAaV;;;AAGAE,UAAMZ,UAAUQ,IAhBN;;AAiBV;;;AAGAK,YAAQb,UAAUc,IApBR;;AAqBV;;;AAGAC,aAASf,UAAUc,IAxBT;;AAyBV;;;AAGAE,aAAShB,UAAUc,IA5BT;;AA6BV;;;AAGAG,eAAWjB,UAAUc,IAhCX;;AAiCV;;;AAGAI,iBAAalB,UAAUc,IApCb;;AAqCV;;;AAGAK,gBAAYnB,UAAUc,IAxCZ;;AAyCV;;;AAGAM,WAAOpB,UAAUU;AA5CP,GAPuC;AAsDlDW,eAtDkD,yBAsDnCC,KAtDmC,EAsD5B;AACrB,QAAI,KAAKC,KAAL,CAAWN,SAAX,IAAwBK,MAAME,OAAlC,EAA2C;AAC1C,UACCF,MAAME,OAAN,KAAkBtB,KAAKuB,KAAvB,IACAH,MAAME,OAAN,KAAkBtB,KAAKwB,IADvB,IAEAJ,MAAME,OAAN,KAAkBtB,KAAKyB,EAFvB,IAGAL,MAAME,OAAN,KAAkBtB,KAAK0B,MAJxB,EAKE;AACD,aAAKL,KAAL,CAAWN,SAAX,CAAqBK,KAArB;AACA;AACD;AACD,GAjEiD;AAmElD;AACAO,QApEkD,oBAoExC;AAAA,iBAUL,KAAKN,KAVA;AAAA,QAERhB,SAFQ,UAERA,SAFQ;AAAA,QAGRK,IAHQ,UAGRA,IAHQ;AAAA,QAIRC,MAJQ,UAIRA,MAJQ;AAAA,QAKRG,OALQ,UAKRA,OALQ;AAAA,QAMRC,SANQ,UAMRA,SANQ;AAAA,QAORC,WAPQ,UAORA,WAPQ;AAAA,QAQRC,UARQ,UAQRA,UARQ;AAAA,QASLI,KATK;;AAYT;AACC;AACA;AACC,gBAAQV,MADT;AAEC,iBAASG,OAFV;AAGC,mBAAW,KAAKK,aAHjB;AAIC,qBAAaH;AAJd,SAOC,oBAAC,KAAD;AAAO,mBAAWX;AAAlB,SAAiCgB,KAAjC;AAAwC,kBAAUJ;AAAlD,UACEP,IADF,CAPD;AAFD;AAcA;AA9FiD,CAAjB,CAAlC;AAiGA,eAAeR,yBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Timepicker Dropdown Trigger\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### Children\nimport Input from '../../input';\n\n// ### Event Helpers\nimport KEYS from '../../../utilities/key-code';\n\n// ## Constants\nimport { MENU_DROPDOWN_TRIGGER } from '../../../utilities/constants';\n\n/**\n *  Component description.\n */\nconst TimepickerDropdownTrigger = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name (set in the core) as the React\n\t// display name.\n\tdisplayName: MENU_DROPDOWN_TRIGGER,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Icon for right side of trigger\n\t\t */\n\t\ticonRight: PropTypes.node,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering input.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * This label appears above the input.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The dropdown menu.\n\t\t */\n\t\tmenu: PropTypes.node,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering input loses focus.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * This prop is passed onto the triggering `Input`. Triggered when the trigger input is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering input gains focus.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Called when a key pressed.\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse clicks down on the trigger input.\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * The ref of the actual triggering input.\n\t\t */\n\t\ttriggerRef: PropTypes.func,\n\t\t/**\n\t\t * Date\n\t\t */\n\t\tvalue: PropTypes.string,\n\t},\n\n\thandleKeyDown (event) {\n\t\tif (this.props.onKeyDown && event.keyCode) {\n\t\t\tif (\n\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\tevent.keyCode === KEYS.UP ||\n\t\t\t\tevent.keyCode === KEYS.ESCAPE\n\t\t\t) {\n\t\t\t\tthis.props.onKeyDown(event);\n\t\t\t}\n\t\t}\n\t},\n\n\t// ### Render\n\trender () {\n\t\tconst {\n\t\t\ticonRight,\n\t\t\tmenu,\n\t\t\tonBlur,\n\t\t\tonFocus,\n\t\t\tonKeyDown, // eslint-disable-line no-unused-vars\n\t\t\tonMouseDown,\n\t\t\ttriggerRef,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t<div\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonMouseDown={onMouseDown}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Input iconRight={iconRight} {...props} inputRef={triggerRef}>\n\t\t\t\t\t{menu}\n\t\t\t\t</Input>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default TimepickerDropdownTrigger;\n"],"file":"dropdown-trigger.js"}