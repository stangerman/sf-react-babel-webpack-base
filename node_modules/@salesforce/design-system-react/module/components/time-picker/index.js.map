{"version":3,"sources":["../../../.tmp-es/components/time-picker/index.jsx"],"names":["React","createReactClass","PropTypes","isDate","checkProps","InputIcon","MenuDropdown","TimepickerDropdownTrigger","TIME_PICKER","Timepicker","displayName","propTypes","constrainToScrollParent","bool","disabled","formatter","func","inheritTargetWidth","label","string","listItemRenderer","menuPosition","oneOf","onDateChange","parser","placeholder","required","stepInMinutes","number","strValue","value","instanceOf","Date","getDefaultProps","date","toLocaleTimeString","navigator","language","hour","minute","timeStr","dateStr","toLocaleString","year","month","day","getInitialState","props","options","getOptions","componentWillMount","componentWillReceiveProps","nextProps","currentTime","getTime","nextTime","setState","baseDate","setHours","setMinutes","setSeconds","setMilliseconds","curDate","getDate","formatted","push","getMinutes","parseDate","newDate","isNaN","handleChange","handleSelect","val","handleInputChange","event","target","parsedDate","render","maxHeight","overflowX","minWidth","state"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Timepicker Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### isDate\nimport isDate from 'lodash.isdate';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Dropdown\nimport InputIcon from '../icon/input-icon';\nimport MenuDropdown from '../menu-dropdown';\nimport TimepickerDropdownTrigger from './private/dropdown-trigger';\n\n// ## Constants\nimport { TIME_PICKER } from '../../utilities/constants';\n\n/**\n *  Component description.\n */\nconst Timepicker = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: TIME_PICKER,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * If true, constrains the menu to the scroll parent. See `Dropdown`.\n\t\t */\n\t\tconstrainToScrollParent: PropTypes.bool,\n\t\t/**\n\t\t * Disables the input and prevents editing the contents.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Time formatting function\n\t\t */\n\t\tformatter: PropTypes.func,\n\t\t/**\n\t\t * Sets the dialog width to the width of the target. Menus attached to `input` typically follow this UX pattern.\n\t\t */\n\t\tinheritTargetWidth: PropTypes.bool,\n\t\t/**\n\t\t * This label appears above the input.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Please select one of the following:\n\t\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t\t */\n\t\tmenuPosition: PropTypes.oneOf([\n\t\t\t'absolute',\n\t\t\t'overflowBoundaryElement',\n\t\t\t'relative',\n\t\t]),\n\t\t/**\n\t\t * Receives the props `(dateValue, stringValue)`\n\t\t */\n\t\tonDateChange: PropTypes.func,\n\t\t/**\n\t\t * Parsing date string into Date\n\t\t */\n\t\tparser: PropTypes.func,\n\t\t/**\n\t\t * Text that will appear in an empty input.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * If true, adds asterisk next to input label to indicate it is a required field.\n\t\t */\n\t\trequired: PropTypes.bool,\n\t\t/**\n\t\t * Frequency of options\n\t\t */\n\t\tstepInMinutes: PropTypes.number,\n\t\t/**\n\t\t * Value for input that is parsed to create an internal state in the `date` format.\n\t\t */\n\t\tstrValue: PropTypes.string,\n\t\t/**\n\t\t * Instance an internal state in the `date` format.\n\t\t */\n\t\tvalue: PropTypes.instanceOf(Date),\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tformatter (date) {\n\t\t\t\tif (date) {\n\t\t\t\t\treturn date.toLocaleTimeString(navigator.language, {\n\t\t\t\t\t\thour: '2-digit',\n\t\t\t\t\t\tminute: '2-digit',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tparser (timeStr) {\n\t\t\t\tconst date = new Date();\n\t\t\t\tconst dateStr = date.toLocaleString(navigator.language, {\n\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\tmonth: 'numeric',\n\t\t\t\t\tday: 'numeric',\n\t\t\t\t});\n\t\t\t\treturn new Date(`${dateStr} ${timeStr}`);\n\t\t\t},\n\t\t\tmenuPosition: 'absolute',\n\t\t\tplaceholder: 'Pick Time',\n\t\t\tvalue: null,\n\t\t\tstepInMinutes: 30,\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tvalue: this.props.value,\n\t\t\tstrValue: this.props.strValue,\n\t\t\toptions: this.getOptions(),\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(TIME_PICKER, this.props);\n\t},\n\n\tcomponentWillReceiveProps (nextProps) {\n\t\tif (nextProps.value && this.props.value) {\n\t\t\tconst currentTime = this.props.value.getTime();\n\t\t\tconst nextTime = nextProps.value.getTime();\n\n\t\t\tif (currentTime !== nextTime) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: nextProps.value,\n\t\t\t\t\tstrValue: this.props.formatter(nextProps.value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\n\tgetOptions () {\n\t\tconst baseDate = new Date();\n\t\tconst options = [];\n\n\t\tbaseDate.setHours(0);\n\t\tbaseDate.setMinutes(0);\n\t\tbaseDate.setSeconds(0);\n\t\tbaseDate.setMilliseconds(0);\n\n\t\tconst curDate = new Date(baseDate);\n\n\t\twhile (baseDate.getDate() === curDate.getDate()) {\n\t\t\tconst formatted = this.props.formatter(curDate);\n\n\t\t\toptions.push({\n\t\t\t\tlabel: formatted,\n\t\t\t\tvalue: new Date(curDate),\n\t\t\t});\n\n\t\t\tcurDate.setMinutes(curDate.getMinutes() + this.props.stepInMinutes);\n\t\t}\n\n\t\treturn options;\n\t},\n\n\tparseDate (strValue) {\n\t\tconst newDate = this.props.parser(strValue);\n\n\t\tif (isDate(newDate)) {\n\t\t\tif (!isNaN(newDate.getTime())) {\n\t\t\t\treturn newDate;\n\t\t\t}\n\t\t}\n\n\t\treturn new Date();\n\t},\n\n\thandleChange (date, strValue) {\n\t\tthis.setState({\n\t\t\tvalue: date,\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tthis.props.onDateChange(date, strValue);\n\t\t}\n\t},\n\n\thandleSelect (val) {\n\t\tif (val && val.value) {\n\t\t\tthis.handleChange(val.value, val.label);\n\t\t}\n\t},\n\n\thandleInputChange (event) {\n\t\tconst strValue = event.target.value;\n\n\t\tthis.setState({\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tconst parsedDate = this.props.parser(strValue);\n\t\t\tthis.props.onDateChange(parsedDate, strValue);\n\t\t}\n\t},\n\n\t// ### Render\n\trender () {\n\t\treturn (\n\t\t\t<MenuDropdown\n\t\t\t\tcheckmark={false}\n\t\t\t\tconstrainToScrollParent={this.props.constrainToScrollParent}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tinheritTargetWidth={this.props.inheritTargetWidth}\n\t\t\t\tlabel={this.props.label}\n\t\t\t\tlistItemRenderer={this.props.listItemRenderer}\n\t\t\t\t// inline style override\n\t\t\t\tmenuStyle={{\n\t\t\t\t\tmaxHeight: '20em',\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\tminWidth: '100%',\n\t\t\t\t}}\n\t\t\t\tmenuPosition={this.props.menuPosition}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.state.options}\n\t\t\t>\n\t\t\t\t<TimepickerDropdownTrigger\n\t\t\t\t\ticonRight={<InputIcon category=\"utility\" name=\"clock\" />}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.strValue}\n\t\t\t\t/>\n\t\t\t</MenuDropdown>\n\t\t);\n\t},\n});\n\nexport default Timepicker;\n"],"file":"index.js"}