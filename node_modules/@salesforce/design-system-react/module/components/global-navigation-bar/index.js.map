{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/index.jsx"],"names":["React","PropTypes","classNames","GLOBAL_NAVIGATION_BAR","GLOBAL_NAVIGATION_BAR_REGION","auditChildren","children","primaryRegion","secondaryRegions","tertiaryRegion","Children","forEach","child","type","displayName","props","region","push","length","dividerPosition","undefined","cloneElement","key","GlobalNavigationBar","cloud","theme","className","propTypes","node","oneOfType","array","object","string","oneOf","defaultProps"],"mappings":";;AAAA;;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SACCC,qBADD,EAECC,4BAFD,QAGO,2BAHP;;AAKA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACnC,MAAIC,aAAJ,CADmC,CAEnC;;AACA,MAAMC,mBAAmB,EAAzB;AACA,MAAIC,cAAJ;AAEAT,QAAMU,QAAN,CAAeC,OAAf,CAAuBL,QAAvB,EAAiC,UAACM,KAAD,EAAW;AAC3C,QAAIA,SAASA,MAAMC,IAAN,CAAWC,WAAX,KAA2BV,4BAAxC,EAAsE;AACrE,UAAIQ,MAAMG,KAAN,CAAYC,MAAZ,KAAuB,SAA3B,EAAsC;AACrCT,wBAAgBK,KAAhB;AACA,OAFD,MAEO,IAAIA,MAAMG,KAAN,CAAYC,MAAZ,KAAuB,WAA3B,EAAwC;AAC9CR,yBAAiBS,IAAjB,CAAsBL,KAAtB;AACA,OAFM,MAEA,IAAIA,MAAMG,KAAN,CAAYC,MAAZ,KAAuB,UAA3B,EAAuC;AAC7CP,yBAAiBG,KAAjB;AACA;AACD;AACD,GAVD;;AAYA,MAAIL,iBAAiBC,iBAAiBU,MAAjB,GAA0B,CAA/C,EAAkD;AACjD,QAAMC,kBACLZ,cAAcQ,KAAd,CAAoBI,eAApB,KAAwCC,SAAxC,GACG,OADH,GAEGb,cAAcQ,KAAd,CAAoBI,eAHxB;AAKAZ,oBAAgBP,MAAMqB,YAAN,CAAmBd,aAAnB,EAAkC;AACjDY,sCADiD;AAEjDG,WAAK;AAF4C,KAAlC,CAAhB;AAIA;;AAED,UAAQf,aAAR,SAA0BC,gBAA1B,GAA4CC,cAA5C;AACA,CA/BD;AAiCA;;;;;AAGA,IAAMc,sBAAsB,SAAtBA,mBAAsB,CAACR,KAAD;AAAA;;AAAA,SAC3B;AACC,eAAWb,WACV,kBADU,oFAGmBa,MAAMS,KAHzB,GAGmCT,MAAMS,KAHzC,kEAImBT,MAAMU,KAJzB,GAImCV,MAAMU,KAJzC,iBAMVV,MAAMW,SANI;AADZ,KAUErB,cAAcU,MAAMT,QAApB,CAVF,CAD2B;AAAA,CAA5B,C,CAeA;;;AACAiB,oBAAoBI,SAApB,GAAgC;AAC/B;;;AAGArB,YAAUL,UAAU2B,IAJW;;AAK/B;;;AAGAF,aAAWzB,UAAU4B,SAAV,CAAoB,CAC9B5B,UAAU6B,KADoB,EAE9B7B,UAAU8B,MAFoB,EAG9B9B,UAAU+B,MAHoB,CAApB,CARoB;;AAa/B;;;AAGAR,SAAOvB,UAAU+B,MAhBc;;AAiB/B;;;AAGAP,SAAOxB,UAAUgC,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB;AApBwB,CAAhC;AAuBAV,oBAAoBW,YAApB,GAAmC;AAClCV,SAAO,SAD2B;AAElCC,SAAO;AAF2B,CAAnC;AAKAF,oBAAoBT,WAApB,GAAkCX,qBAAlC;AAEA,eAAeoB,mBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Navigation Bar Component\n\n// Implements the [Global Navigation Bar design pattern](https://www.lightningdesignsystem.com/components/global-navigation#flavor-navigation-bar) in React.\n// Based on SLDS v2.1.0-rc.2\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Constants\nimport {\n\tGLOBAL_NAVIGATION_BAR,\n\tGLOBAL_NAVIGATION_BAR_REGION,\n} from '../../utilities/constants';\n\nconst auditChildren = (children) => {\n\tlet primaryRegion;\n\t// there can be multiple secondary navigation regions\n\tconst secondaryRegions = [];\n\tlet tertiaryRegion;\n\n\tReact.Children.forEach(children, (child) => {\n\t\tif (child && child.type.displayName === GLOBAL_NAVIGATION_BAR_REGION) {\n\t\t\tif (child.props.region === 'primary') {\n\t\t\t\tprimaryRegion = child;\n\t\t\t} else if (child.props.region === 'secondary') {\n\t\t\t\tsecondaryRegions.push(child);\n\t\t\t} else if (child.props.region === 'tertiary') {\n\t\t\t\ttertiaryRegion = child;\n\t\t\t}\n\t\t}\n\t});\n\n\tif (primaryRegion && secondaryRegions.length > 0) {\n\t\tconst dividerPosition =\n\t\t\tprimaryRegion.props.dividerPosition === undefined\n\t\t\t\t? 'right'\n\t\t\t\t: primaryRegion.props.dividerPosition;\n\n\t\tprimaryRegion = React.cloneElement(primaryRegion, {\n\t\t\tdividerPosition,\n\t\t\tkey: 'primary-region',\n\t\t});\n\t}\n\n\treturn [primaryRegion, ...secondaryRegions, tertiaryRegion];\n};\n\n/**\n * Global Navigation Bar represents a list of links that either take the user to another page or parts of the page the user is in.\n */\nconst GlobalNavigationBar = (props) => (\n\t<div\n\t\tclassName={classNames(\n\t\t\t'slds-context-bar',\n\t\t\t{\n\t\t\t\t[`slds-context-bar--theme-${props.cloud}`]: props.cloud,\n\t\t\t\t[`slds-context-bar--theme-${props.theme}`]: props.theme,\n\t\t\t},\n\t\t\tprops.className\n\t\t)}\n\t>\n\t\t{auditChildren(props.children)}\n\t</div>\n);\n\n// ### Prop Types\nGlobalNavigationBar.propTypes = {\n\t/**\n\t * The items to be displayed in the Global Navigation Bar.\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS class names to be added to the container element.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Typically the cloud name (e.g.- \"sales\" or \"marketing\"). This primarily changes the background color.\n\t */\n\tcloud: PropTypes.string,\n\t/**\n\t * Transforms text and interactions (such as hover) to be more visually accessible.\n\t */\n\ttheme: PropTypes.oneOf(['light', 'dark']),\n};\n\nGlobalNavigationBar.defaultProps = {\n\tcloud: 'default',\n\ttheme: 'dark',\n};\n\nGlobalNavigationBar.displayName = GLOBAL_NAVIGATION_BAR;\n\nexport default GlobalNavigationBar;\n"],"file":"index.js"}