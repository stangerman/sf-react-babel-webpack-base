{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/label.jsx"],"names":["React","PropTypes","classNames","GLOBAL_NAVIGATION_BAR_LABEL","GlobalNavigationBarLabel","props","className","dividerPosition","id","label","color","displayName","propTypes","oneOfType","array","object","string","oneOf"],"mappings":";;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,2BAAT,QAA4C,2BAA5C;AAEA;;;;AAGA,IAAMC,2BAA2B,SAA3BA,wBAA2B,CAACC,KAAD,EAAW;AAC3C;AAD2C,MAEnCC,SAFmC,GAEOD,KAFP,CAEnCC,SAFmC;AAAA,MAExBC,eAFwB,GAEOF,KAFP,CAExBE,eAFwB;AAAA,MAEPC,EAFO,GAEOH,KAFP,CAEPG,EAFO;AAAA,MAEHC,KAFG,GAEOJ,KAFP,CAEHI,KAFG;AAI3C,SACC;AAAI,eAAU;AAAd,KACC;AACC,QAAID,EADL,CAEC;AAFD;AAGC,WAAO;AAAEE,aAAO;AAAT,KAHR;AAIC,eAAWR,WACV,gCADU,gEAG2BK,eAH3B,GAG+CA,eAH/C,GAKVD,SALU;AAJZ,KAYC;AAAM,eAAU;AAAhB,KAAiCG,KAAjC,CAZD,CADD,CADD;AAkBA,CAtBD;;AAwBAL,yBAAyBO,WAAzB,GAAuCR,2BAAvC,C,CAEA;;AACAC,yBAAyBQ,SAAzB,GAAqC;AACpC;;;AAGAN,aAAWL,UAAUY,SAAV,CAAoB,CAC9BZ,UAAUa,KADoB,EAE9Bb,UAAUc,MAFoB,EAG9Bd,UAAUe,MAHoB,CAApB,CAJyB;;AASpC;;;AAGAT,mBAAiBN,UAAUgB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAZmB;;AAapC;;;AAGAT,MAAIP,UAAUe,MAhBsB;;AAiBpC;;;AAGAP,SAAOR,UAAUe;AApBmB,CAArC;AAuBA,eAAeZ,wBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # GlobalNavigationBar Label Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Constants\nimport { GLOBAL_NAVIGATION_BAR_LABEL } from '../../utilities/constants';\n\n/**\n * Wraps text in the proper markup and removes link styling to support use in the GlobalNavigationBar.\n */\nconst GlobalNavigationBarLabel = (props) => {\n\t// Separate props we care about in order to pass others along passively to the `span` tag\n\tconst { className, dividerPosition, id, label } = props;\n\n\treturn (\n\t\t<li className=\"slds-context-bar__item slds-no-hover\">\n\t\t\t<span\n\t\t\t\tid={id}\n\t\t\t\t// inline style override\n\t\t\t\tstyle={{ color: '#16325c' }}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-context-bar__label-action',\n\t\t\t\t\t{\n\t\t\t\t\t\t[`slds-context-bar__item--divider-${dividerPosition}`]: dividerPosition,\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<span className=\"slds-truncate\">{label}</span>\n\t\t\t</span>\n\t\t</li>\n\t);\n};\n\nGlobalNavigationBarLabel.displayName = GLOBAL_NAVIGATION_BAR_LABEL;\n\n// ### Prop Types\nGlobalNavigationBarLabel.propTypes = {\n\t/**\n\t * Class names to be added to the `span` element\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Determines position of separating bar.\n\t */\n\tdividerPosition: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * Id string applied to first <span> inside of <li>\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Text to show\n\t */\n\tlabel: PropTypes.string,\n};\n\nexport default GlobalNavigationBarLabel;\n"],"file":"label.js"}