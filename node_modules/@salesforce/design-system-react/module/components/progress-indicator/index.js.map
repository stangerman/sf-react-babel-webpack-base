{"version":3,"sources":["../../../.tmp-es/components/progress-indicator/index.jsx"],"names":["React","PropTypes","assign","find","shortid","PROGRESS_INDICATOR","Step","Progress","displayName","propTypes","assistiveText","shape","percentage","string","className","oneOfType","array","object","completedSteps","disabledSteps","errorSteps","id","onStepClick","func","onStepFocus","selectedStep","isRequired","steps","tooltipIsOpenSteps","variant","oneOf","defaultSteps","label","defaultProps","checkSteps","isStepsDefined","undefined","isLabelDefined","step","stepLabelsDefined","Array","isArray","every","findStep","item","items","JSON","stringify","ProgressIndicator","generatedId","generate","isUnmounting","props","allSteps","getSteps","currentStep","i","length","getId","map","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Indicator design pattern](https://lightningdesignsystem.com/components/progress-indicator/) in React.\n// Based on SLDS v2.4.0\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\n\nimport find from 'lodash.find';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\nimport { PROGRESS_INDICATOR } from '../../utilities/constants';\n\n// Child components\nimport Step from './private/step';\nimport Progress from './private/progress';\n\nconst displayName = PROGRESS_INDICATOR;\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `percentage`: Label for Progress Bar. The default is `Progress: [this.props.value]%`\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tpercentage: PropTypes.string,\n\t}),\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Stores all completed steps. It is an array of step objects.\n\t */\n\tcompletedSteps: PropTypes.array,\n\t/**\n\t * Stores all disabled steps. It is an array of step objects. Steps are still clickable/focusable,\n\t * this only disables cursor change and removes onClick and onFocus event callbacks.\n\t */\n\tdisabledSteps: PropTypes.array,\n\t/**\n\t * Stores all error steps. It is an array of step objects and usually there is only one error step, the current step.\n\t */\n\terrorSteps: PropTypes.array,\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Triggered when an individual step is clicked. By default, it receives an event and returns step state and the step object clicked: `{ isCompleted, isDisabled, isError, isSelected, step }`. Users are able to pass a callback handleClick function in forms of: <function name>(event, data) where data is the callback result.\n\t * ```\n\t * const handleStepClick = function(event, data) { console.log(data); };\n\t *   <ProgressIndicator onStepClick={handleStepClick} />\n\t * ```\n\t */\n\tonStepClick: PropTypes.func,\n\t/**\n\t * Triggered when an individual step is focused. By default, it receives an event and returns step state and the step object clicked: `{ isCompleted, isDisabled, isError, isSelected, step }`. Users are able to pass a callback handleClick function in forms of: <function name>(event, data) where data is the callback result.\n\t * ```\n\t * const handleStepFocus = function(event, data) { console.log(data); };\n\t *   <ProgressIndicator onStepFocus={handleStepFocus} />\n\t * ```\n\t */\n\tonStepFocus: PropTypes.func,\n\t/**\n\t * Represents the currently selected or active step. It is a step object.\n\t */\n\tselectedStep: PropTypes.object.isRequired,\n\t/**\n\t * It is an array of step objects in the following form:\n\t * ```\n\t *  [{\n\t *    id: <PropTypes.number> or <PropTypes.string>, has to be unique\n\t *    label: <PropTypes.string>, representing the tooltip content\n\t *    assistiveText: <PropTypes.string>, The default is `[Step props.index + 1]: [status]`. Status is if the step has been completed or in an error state.\n\t *  }],\n\t *  ```\n\t */\n\tsteps: PropTypes.array.isRequired,\n\t/**\n\t * Stores all steps with opened tooltips. This property is mainly for development purposes. The tooltip should only show on hover for the user.\n\t */\n\ttooltipIsOpenSteps: PropTypes.array,\n\t/**\n\t * Determines component style.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'modal']),\n};\n\nconst defaultSteps = [\n\t{ id: 0, label: 'tooltip label #1' },\n\t{ id: 1, label: 'tooltip label #2' },\n\t{ id: 2, label: 'tooltip label #3' },\n\t{ id: 3, label: 'tooltip label #4' },\n\t{ id: 4, label: 'tooltip label #5' },\n];\n\nconst defaultProps = {\n\tassistiveText: {},\n\terrorSteps: [],\n\tcompletedSteps: [],\n\tdisabledSteps: [],\n\tselectedStep: defaultSteps[0],\n\tvariant: 'base',\n\t// click/focus callbacks by default do nothing\n\tonStepClick: () => {},\n\tonStepFocus: () => {},\n};\n\n/**\n * Check if `steps` prop is valid\n */\nfunction checkSteps (steps) {\n\tconst isStepsDefined = steps !== undefined;\n\tconst isLabelDefined = (step) => step.label !== undefined;\n\tconst stepLabelsDefined = Array.isArray(steps) && steps.every(isLabelDefined);\n\n\treturn isStepsDefined && stepLabelsDefined;\n}\n\n/**\n * Check if an item is from an array of items when 'items' is an array;\n * Check if an item is equal to the other item after being stringified when 'items' is a JSON object\n */\nfunction findStep (item, items) {\n\tif (Array.isArray(items)) {\n\t\treturn !!find(items, item);\n\t}\n\treturn JSON.stringify(item) === JSON.stringify(items);\n}\n\n/**\n * Progress Indicator is a component that communicates to the user the progress of a particular process.\n */\nclass ProgressIndicator extends React.Component {\n\tcomponentWillMount () {\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tcomponentWillUnmount () {\n\t\tthis.isUnmounting = true;\n\t}\n\n\t/**\n\t * Get the progress indicator's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetSteps () {\n\t\t// check if passed steps are valid\n\t\treturn checkSteps(this.props.steps) ? this.props.steps : defaultSteps;\n\t}\n\n\trender () {\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = this.props\n\t\t\t? assign({}, defaultProps.assistiveText, this.props.assistiveText)\n\t\t\t: defaultProps.assistiveText;\n\n\t\t/** 1. preparing data */\n\t\tconst allSteps = this.getSteps();\n\n\t\tlet currentStep = 0;\n\t\t// find index for the current step\n\t\tfor (let i = 0; i < allSteps.length; i += 1) {\n\t\t\t// assign step an id if it does not have one\n\t\t\tif (allSteps[i].id === undefined) {\n\t\t\t\tallSteps[i].id = i;\n\t\t\t}\n\t\t\tif (findStep(allSteps[i], this.props.selectedStep)) {\n\t\t\t\tcurrentStep = i;\n\t\t\t}\n\t\t}\n\n\t\t/** 2. return DOM */\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tid={this.getId()}\n\t\t\t\tvalue={\n\t\t\t\t\tcurrentStep === 0\n\t\t\t\t\t\t? '0'\n\t\t\t\t\t\t: `${100 * (currentStep / (allSteps.length - 1))}`\n\t\t\t\t}\n\t\t\t\tvariant={this.props.variant}\n\t\t\t\tclassName={this.props.className}\n\t\t\t>\n\t\t\t\t{allSteps.map((step, i) => (\n\t\t\t\t\t<Step\n\t\t\t\t\t\tkey={`${this.getId()}-${step.id}`}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tisSelected={findStep(step, this.props.selectedStep)}\n\t\t\t\t\t\tisDisabled={findStep(step, this.props.disabledSteps)}\n\t\t\t\t\t\tisError={findStep(step, this.props.errorSteps)}\n\t\t\t\t\t\tisCompleted={findStep(step, this.props.completedSteps)}\n\t\t\t\t\t\tonClick={this.props.onStepClick}\n\t\t\t\t\t\tonFocus={this.props.onStepFocus}\n\t\t\t\t\t\tstep={step}\n\t\t\t\t\t\ttooltipIsOpen={findStep(step, this.props.tooltipIsOpenSteps)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Progress>\n\t\t);\n\t}\n}\n\nProgressIndicator.displayName = displayName;\nProgressIndicator.propTypes = propTypes;\nProgressIndicator.defaultProps = defaultProps;\n\nexport default ProgressIndicator;\n"],"file":"index.js"}