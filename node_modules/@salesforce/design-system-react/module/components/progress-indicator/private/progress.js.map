{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/private/progress.jsx"],"names":["React","PropTypes","classNames","ProgressBar","PROGRESS_INDICATOR_PROGRESS","propTypes","assistiveText","shape","percentage","string","children","node","className","oneOfType","array","object","id","isRequired","value","variant","oneOf","Progress","props","getId","Component","displayName"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,2BAAT,QAA4C,8BAA5C,C,CAEA;;AACA,IAAMC,YAAY;AACjB;;;AAGAC,iBAAeL,UAAUM,KAAV,CAAgB;AAC9BC,gBAAYP,UAAUQ;AADQ,GAAhB,CAJE;;AAOjB;;;AAGAC,YAAUT,UAAUU,IAVH;;AAWjB;;;AAGAC,aAAWX,UAAUY,SAAV,CAAoB,CAC9BZ,UAAUa,KADoB,EAE9Bb,UAAUc,MAFoB,EAG9Bd,UAAUQ,MAHoB,CAApB,CAdM;;AAmBjB;;;AAGAO,MAAIf,UAAUQ,MAAV,CAAiBQ,UAtBJ;;AAuBjB;;;AAGAC,SAAOjB,UAAUQ,MAAV,CAAiBQ,UA1BP;;AA2BjB;;;AAGAE,WAASlB,UAAUmB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;AA9BQ,CAAlB;AAiCA;;;;IAGMC,Q;;;;;;;;;;;;;;AACL;;;4BAGS;AACR,aAAO,KAAKC,KAAL,CAAWN,EAAlB;AACA;;;6BAES;AACT,aACC;AACC,YAAI,KAAKO,KAAL,EADL;AAEC,mBAAWrB,WACV,eADU,EAEV;AAAE,iCAAuB,KAAKoB,KAAL,CAAWH,OAAX,KAAuB;AAAhD,SAFU,EAGV,KAAKG,KAAL,CAAWV,SAHD;AAFZ,SAQC;AAAI,mBAAU;AAAd,SAAqC,KAAKU,KAAL,CAAWZ,QAAhD,CARD,EASC,oBAAC,WAAD;AACC,eAAO,KAAKY,KAAL,CAAWJ,KADnB;AAEC,uBAAe,KAAKI,KAAL,CAAWhB;AAF3B,QATD,CADD;AAgBA;;;;EAzBqBN,MAAMwB,S;;AA4B7BH,SAAShB,SAAT,GAAqBA,SAArB;AACAgB,SAASI,WAAT,GAAuBrB,2BAAvB;AAEA,eAAeiB,QAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\nimport ProgressBar from './progress-bar';\n\nimport { PROGRESS_INDICATOR_PROGRESS } from '../../../utilities/constants';\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * Assistive text for percentage\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tpercentage: PropTypes.string,\n\t}),\n\t/**\n\t * Steps in the component\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS class names to be added to the container element.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string.isRequired,\n\t/**\n\t * Percentage of progress completion, ranging [0, 100]\n\t */\n\tvalue: PropTypes.string.isRequired,\n\t/**\n\t * Determines component style\n\t */\n\tvariant: PropTypes.oneOf(['base', 'modal']),\n};\n\n/**\n * Progress renders all step buttons and a container wrapping these buttongs and a progress bar\n */\nclass Progress extends React.Component {\n\t/**\n\t * Get the progress's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId () {\n\t\treturn this.props.id;\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-progress',\n\t\t\t\t\t{ 'slds-progress_shade': this.props.variant === 'modal' },\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<ol className=\"slds-progress__list\">{this.props.children}</ol>\n\t\t\t\t<ProgressBar\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgress.propTypes = propTypes;\nProgress.displayName = PROGRESS_INDICATOR_PROGRESS;\n\nexport default Progress;\n"],"file":"progress.js"}