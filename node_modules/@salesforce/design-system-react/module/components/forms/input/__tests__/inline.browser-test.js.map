{"version":3,"sources":["../../../../../.tmp-es/components/forms/input/__tests__/inline.browser-test.jsx"],"names":["React","ReactDOM","TestUtils","chai","InlineEdit","IconSettings","should","Simulate","describe","sampleValue","renderInlineEdit","instance","dom","document","createElement","body","appendChild","component","render","removeInlineEdit","unmountComponentAtNode","removeChild","getWrapper","querySelector","getInput","getStatic","getTrigger","beforeEach","afterEach","it","wrapper","input","staticElement","trigger","exist","not","value","textContent","equal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,IAAMC,SAASH,KAAKG,MAAL,EAAf;IAEQC,Q,GAAaL,S,CAAbK,Q;AAERC,SAAS,eAAT,EAA0B,YAAY;AACrC,MAAMC,cAAc,cAApB;;AAEA,MAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,WACxB,YAAY;AACX,WAAKC,GAAL,GAAWC,SAASC,aAAT,CAAuB,KAAvB,CAAX;AACAD,eAASE,IAAT,CAAcC,WAAd,CAA0B,KAAKJ,GAA/B;AACA,WAAKK,SAAL,GAAiBhB,SAASiB,MAAT,CAChB,oBAAC,YAAD;AAAc,kBAAS;AAAvB,SAAwCP,QAAxC,CADgB,EAEhB,KAAKC,GAFW,CAAjB;AAIA,KARuB;AAAA,GAAzB;;AAUA,WAASO,gBAAT,GAA6B;AAC5BlB,aAASmB,sBAAT,CAAgC,KAAKR,GAArC;AACAC,aAASE,IAAT,CAAcM,WAAd,CAA0B,KAAKT,GAA/B;AACA;;AAED,MAAMU,aAAa,SAAbA,UAAa,CAACV,GAAD;AAAA,WAASA,IAAIW,aAAJ,CAAkB,oBAAlB,CAAT;AAAA,GAAnB;;AAEA,MAAMC,WAAW,SAAXA,QAAW,CAACZ,GAAD;AAAA,WAASA,IAAIW,aAAJ,CAAkB,aAAlB,CAAT;AAAA,GAAjB;;AAEA,MAAME,YAAY,SAAZA,SAAY,CAACb,GAAD;AAAA,WAASA,IAAIW,aAAJ,CAAkB,4BAAlB,CAAT;AAAA,GAAlB;;AAEA,MAAMG,aAAa,SAAbA,UAAa,CAACd,GAAD;AAAA,WAASa,UAAUb,GAAV,EAAeW,aAAf,CAA6B,cAA7B,CAAT;AAAA,GAAnB;;AAEAf,WAAS,WAAT,EAAsB,YAAY;AACjCmB,eACCjB,iBACC,oBAAC,UAAD;AAAY,UAAG,sBAAf;AAAsC,aAAOD;AAA7C,MADD,CADD;AAMAmB,cAAUT,gBAAV;AAEAU,OAAG,2BAAH,EAAgC,YAAY;AAC3C,UAAMC,UAAUR,WAAW,KAAKV,GAAhB,CAAhB;AACA,UAAMmB,QAAQP,SAAS,KAAKZ,GAAd,CAAd;AACA,UAAMoB,gBAAgBP,UAAU,KAAKb,GAAf,CAAtB;AACA,UAAMqB,UAAUP,WAAW,KAAKd,GAAhB,CAAhB;AAEAN,aAAO4B,KAAP,CAAaJ,OAAb;AACAxB,aAAO6B,GAAP,CAAWD,KAAX,CAAiBH,KAAjB;AACAzB,aAAO4B,KAAP,CAAaF,aAAb;AACA1B,aAAO4B,KAAP,CAAaD,OAAb;AACA,KAVD;AAYAJ,OAAG,2BAAH,EAAgC,YAAY;AAC3C,UAAMG,gBAAgBP,UAAU,KAAKb,GAAf,CAAtB;AACA,UAAMwB,QAAQJ,cAAcK,WAA5B;AAEAD,YAAM9B,MAAN,CAAagC,KAAb,CAAmB,uBAAnB;AACA,KALD;AAMA,GA3BD,EA1BqC,CAuDrC;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAlJD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TestUtils from 'react-addons-test-utils';\n\nimport chai from 'chai';\n\nimport InlineEdit from '../../../forms/input/inline';\nimport IconSettings from '../../../icon-settings';\n\nconst should = chai.should();\n\nconst { Simulate } = TestUtils;\n\ndescribe('Inline Edit: ', function () {\n\tconst sampleValue = 'Sample value';\n\n\tconst renderInlineEdit = (instance) =>\n\t\tfunction () {\n\t\t\tthis.dom = document.createElement('div');\n\t\t\tdocument.body.appendChild(this.dom);\n\t\t\tthis.component = ReactDOM.render(\n\t\t\t\t<IconSettings iconPath=\"/assets/icons\">{instance}</IconSettings>,\n\t\t\t\tthis.dom\n\t\t\t);\n\t\t};\n\n\tfunction removeInlineEdit () {\n\t\tReactDOM.unmountComponentAtNode(this.dom);\n\t\tdocument.body.removeChild(this.dom);\n\t}\n\n\tconst getWrapper = (dom) => dom.querySelector('.slds-form-element');\n\n\tconst getInput = (dom) => dom.querySelector('.slds-input');\n\n\tconst getStatic = (dom) => dom.querySelector('.slds-form-element__static');\n\n\tconst getTrigger = (dom) => getStatic(dom).querySelector('.slds-button');\n\n\tdescribe('Structure', function () {\n\t\tbeforeEach(\n\t\t\trenderInlineEdit(\n\t\t\t\t<InlineEdit id=\"inline-edit-standard\" value={sampleValue} />\n\t\t\t)\n\t\t);\n\n\t\tafterEach(removeInlineEdit);\n\n\t\tit('renders static by default', function () {\n\t\t\tconst wrapper = getWrapper(this.dom);\n\t\t\tconst input = getInput(this.dom);\n\t\t\tconst staticElement = getStatic(this.dom);\n\t\t\tconst trigger = getTrigger(this.dom);\n\n\t\t\tshould.exist(wrapper);\n\t\t\tshould.not.exist(input);\n\t\t\tshould.exist(staticElement);\n\t\t\tshould.exist(trigger);\n\t\t});\n\n\t\tit('renders the correct value', function () {\n\t\t\tconst staticElement = getStatic(this.dom);\n\t\t\tconst value = staticElement.textContent;\n\n\t\t\tvalue.should.equal('Sample valueEdit text');\n\t\t});\n\t});\n\n\t// describe('Editable', function () {\n\t// \tbeforeEach(renderInlineEdit(\n\t// \t\t<InlineEdit id=\"inline-edit-standard\" value={sampleValue} />\n\t// \t));\n\n\t// \tafterEach(removeInlineEdit);\n\n\t// \tit('becomes editable on click', function () {\n\t// \t\tconst trigger = getTrigger(this.dom);\n\n\t// \t\tshould.exist(trigger);\n\n\t// \t\tSimulate.click(trigger, {});\n\n\t// \t\tsetTimeout(() => {\n\t// \t\t\tconst input = getInput(this.dom);\n\t// \t\t\tconst staticElement = getStatic(this.dom);\n\n\t// \t\t\tshould.exist(input);\n\t// \t\t\tshould.not.exist(staticElement);\n\t// \t\t}, 100);\n\t// \t});\n\t// });\n\n\t// describe('Custom Handler Function', function () {\n\t// \tconst enterEditModeHanlder = sinon.spy();\n\t// \tconst leaveEditModeHanlder = sinon.spy();\n\t// \tconst keyDownHandler = sinon.spy();\n\t// \tconst keyUpHandler = sinon.spy();\n\n\t// \tbeforeEach(renderInlineEdit(<InlineEdit id=\"inline-edit-standard\" value={sampleValue} onEnterEditMode={enterEditModeHanlder} onLeaveEditMode={leaveEditModeHanlder} onKeyDown={keyDownHandler} onKeyUp={keyUpHandler} />\n\t// \t));\n\n\t// \tafterEach(removeInlineEdit);\n\n\t// \tit('enterEditMode and leaveEditMode handler get called', function () {\n\t// \t\tconst trigger = getTrigger(this.dom);\n\n\t// \t\tshould.exist(trigger);\n\n\t// \t\tSimulate.click(trigger, {});\n\n\t// \t\tsetTimeout(() => {\n\t// \t\t\tconst input = getInput(this.dom);\n\n\t// \t\t\tshould.exist(input);\n\n\t// \t\t\texpect(enterEditModeHanlder.callCount).to.equal(1);\n\n\t// \t\t\tSimulate.keyDown(input, { key: 'Escape', keyCode: 27, which: 27 });\n\n\t// \t\t\tsetTimeout(() => {\n\t// \t\t\t\tconst input2 = getInput(this.dom);\n\n\t// \t\t\t\tshould.not.exist(input2);\n\n\t// \t\t\t\texpect(leaveEditModeHanlder.callCount).to.equal(1);\n\t// \t\t\t\texpect(leaveEditModeHanlder).to.have.been.called.with(undefined, { cancel: true });\n\t// \t\t\t}, 100);\n\t// \t\t}, 100);\n\t// \t});\n\n\t// \tit('keyup and keydown handler get called', function () {\n\t// \t\tconst trigger = getTrigger(this.dom);\n\n\t// \t\tshould.exist(trigger);\n\n\t// \t\tSimulate.click(trigger, {});\n\n\t// \t\tsetTimeout(() => {\n\t// \t\t\tconst input = getInput(this.dom);\n\n\t// \t\t\tshould.exist(input);\n\n\t// \t\t\tinput.value = '1';\n\n\t// \t\t\tSimulate.change(input);\n\n\t// \t\t\tSimulate.keyDown(input, { key: 'Enter', keyCode: 13, which: 13 });\n\n\t// \t\t\tsetTimeout(() => {\n\t// \t\t\t\tconst input2 = getInput(this.dom);\n\n\t// \t\t\t\tshould.not.exist(input2);\n\n\t// \t\t\t\texpect(keyUpHandler.callCount).to.equal(1);\n\t// \t\t\t\texpect(keyDownHandler.callCount).to.equal(1);\n\t// \t\t\t}, 100);\n\t// \t\t}, 100);\n\t// \t});\n\t// });\n});\n"],"file":"inline.browser-test.js"}