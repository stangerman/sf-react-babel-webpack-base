{"version":3,"sources":["../../../../.tmp-es/components/forms/input/inline.jsx"],"names":["React","PropTypes","isFunction","Button","Input","InputIcon","KEYS","checkProps","FORMS_INLINE_EDIT","propTypes","className","oneOfType","array","object","string","name","disabled","bool","id","isRequired","onChange","func","onKeyUp","onEnterEditMode","onLeaveEditMode","type","oneOf","value","defaultProps","assistiveText","InlineEdit","props","option","willSave","clearTimeout","setState","isEditing","undefined","setTimeout","saveEdits","event","target","keyCode","ESCAPE","cancel","ENTER","state","endEditMode","autoFocus","inputNode","focus","select","rest","icon","handleBlur","handleChange","triggerEditMode","handleKeyDown","handleKeyUp","input","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,6BAAjB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,sBAAvB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,8BAAlC,C,CAEA;;AACA,IAAMC,YAAY;AACjB;;;AAGAC,aAAWT,UAAUU,SAAV,CAAoB,CAC9BV,UAAUW,KADoB,EAE9BX,UAAUY,MAFoB,EAG9BZ,UAAUa,MAHoB,CAApB,CAJM;;AASjB;;;AAGAC,QAAMd,UAAUa,MAZC;;AAajB;;;AAGAE,YAAUf,UAAUgB,IAhBH;;AAiBjB;;;AAGAC,MAAIjB,UAAUa,MAAV,CAAiBK,UApBJ;;AAqBjB;;;AAGAC,YAAUnB,UAAUoB,IAxBH;;AAyBjB;;;AAGAC,WAASrB,UAAUoB,IA5BF;;AA6BjB;;;AAGAE,mBAAiBtB,UAAUoB,IAhCV;;AAiCjB;;;AAGAG,mBAAiBvB,UAAUoB,IApCV;;AAqCjB;;;AAGAI,QAAMxB,UAAUyB,KAAV,CAAgB,CACrB,MADqB,EAErB,UAFqB,EAGrB,UAHqB,EAIrB,gBAJqB,EAKrB,MALqB,EAMrB,OANqB,EAOrB,MAPqB,EAQrB,MARqB,EASrB,QATqB,EAUrB,OAVqB,EAWrB,KAXqB,EAYrB,QAZqB,EAarB,KAbqB,EAcrB,OAdqB,CAAhB,CAxCW;;AAwDjB;;;AAGAC,SAAO1B,UAAUa,MAAV,CAAiBK;AA3DP,CAAlB;AA8DA,IAAMS,eAAe;AACpBC,iBAAe,WADK;AAEpBJ,QAAM;AAFc,CAArB;AAKA;;;;IAGMK,U;;;;;AACL,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AACnB,oHAAMA,KAAN;AADmB;AAAA;AAAA;AAAA;AAAA,aAsBN,eAACC,MAAD,EAAY;AACzB,YAAI,MAAKC,QAAT,EAAmB;AAClBC,uBAAa,MAAKD,QAAlB;AACA,iBAAO,MAAKA,QAAZ;AACA;;AAED,cAAKE,QAAL,CAAc;AACbC,qBAAW,KADE;AAEbT,iBAAO;AAFM,SAAd;;AAKA,YAAI,MAAKI,KAAL,CAAWP,eAAX,IAA8BtB,WAAW,MAAK6B,KAAL,CAAWP,eAAtB,CAAlC,EAA0E;AACzE,gBAAKO,KAAL,CAAWP,eAAX,CAA2Ba,SAA3B,EAAsCL,MAAtC;AACA;AACD;AApCmB;AAAA;AAAA;AAAA;AAAA;AAAA,aAsCP,iBAAM;AAClB,YAAI,CAAC,MAAKC,QAAV,EAAoB;AACnB,gBAAKA,QAAL,GAAgBK,WAAW,MAAKC,SAAhB,EAA2B,GAA3B,CAAhB;AACA;;AACD,YAAI,MAAKR,KAAL,CAAWP,eAAX,IAA8BtB,WAAW,MAAK6B,KAAL,CAAWP,eAAtB,CAAlC,EAA0E;AACzE,gBAAKO,KAAL,CAAWP,eAAX;AACA;AACD;AA7CmB;AAAA;AAAA;AAAA;AAAA;AAAA,aA+CL,eAACgB,KAAD,EAAW;AACzB,cAAKL,QAAL,CAAc;AACbR,iBAAOa,MAAMC,MAAN,CAAad;AADP,SAAd;AAGA;AAnDmB;AAAA;AAAA;AAAA;AAAA;AAAA,aAqDJ,eAACa,KAAD,EAAW;AAC1B,YAAIA,MAAME,OAAV,EAAmB;AAClB,cAAIF,MAAME,OAAN,KAAkBpC,KAAKqC,MAA3B,EAAmC;AAClC,kBAAKJ,SAAL,CAAe;AAAEK,sBAAQ;AAAV,aAAf;AACA,WAFD,MAEO,IAAIJ,MAAME,OAAN,KAAkBpC,KAAKuC,KAA3B,EAAkC;AACxC,kBAAKN,SAAL;AACA;AACD;AACD;AA7DmB;AAAA;AAAA;AAAA;AAAA;AAAA,aA+DN,eAACC,KAAD,EAAW;AACxB,YAAIA,MAAME,OAAV,EAAmB;AAClB,cAAI,MAAKX,KAAL,CAAWT,OAAX,IAAsBpB,WAAW,MAAK6B,KAAL,CAAWT,OAAtB,CAA1B,EAA0D;AACzD,kBAAKS,KAAL,CAAWT,OAAX,CAAmBkB,KAAnB,EAA0B;AACzBb,qBAAO,MAAKmB,KAAL,CAAWnB;AADO,aAA1B;AAGA;AACD;AACD;AAvEmB;AAAA;AAAA;AAAA;AAAA;AAAA,aAyER,eAACK,MAAD,EAAY;AACvB,YAAI,EAAEA,UAAUA,OAAOY,MAAP,KAAkB,IAA9B,CAAJ,EAAyC;AACxC,cAAI1C,WAAW,MAAK6B,KAAL,CAAWX,QAAtB,CAAJ,EAAqC;AACpC,kBAAKW,KAAL,CAAWX,QAAX,CAAoB;AACnBO,qBAAO,MAAKmB,KAAL,CAAWnB;AADC,aAApB;AAGA;AACD;;AACD,cAAKoB,WAAL,CAAiBf,MAAjB;AACA;AAlFmB;AAAA;AAAA;AAAA;AAAA;AAAA,aAoFF,iBAAM;AACvB,YAAI,CAAC,MAAKD,KAAL,CAAWf,QAAhB,EAA0B;AACzB,gBAAKgC,SAAL,GAAiB,IAAjB;;AACA,gBAAKb,QAAL,CAAc;AACbC,uBAAW,IADE;AAEbT,mBAAO,MAAKI,KAAL,CAAWJ;AAFL,WAAd;;AAIA,cAAIzB,WAAW,MAAK6B,KAAL,CAAWR,eAAtB,CAAJ,EAA4C;AAC3C,kBAAKQ,KAAL,CAAWR,eAAX;AACA;AACD;AACD;AA/FmB;AAEnB,UAAKuB,KAAL,GAAa;AACZV,iBAAW,KADC;AAEZT,aAAO;AAFK,KAAb;AAFmB;AAMnB;;;;yCAEqB;AACrBpB,iBAAWC,iBAAX,EAA8B,KAAKuB,KAAnC;AACA;;;yCAEqB;AACrB,UAAI,KAAKiB,SAAT,EAAoB;AACnB,YAAI,KAAKC,SAAT,EAAoB;AACnB,eAAKA,SAAL,CAAeC,KAAf;AACA,eAAKD,SAAL,CAAeE,MAAf;AACA;;AACD,aAAKH,SAAL,GAAiB,KAAjB;AACA;AACD;;;AA6ED;6BACU;AAAA;;AAAA,mBAUL,KAAKjB,KAVA;AAAA,UAERF,aAFQ,UAERA,aAFQ;AAAA,UAGRb,QAHQ,UAGRA,QAHQ;AAAA,UAIRW,KAJQ,UAIRA,KAJQ;AAAA,UAKRZ,IALQ,UAKRA,IALQ;AAAA,UASLqC,IATK;;AAYT,aACC,oBAAC,KAAD,eACKA,IADL;AAEC,mBACC,KAAKN,KAAL,CAAWV,SAAX,GACC,oBAAC,SAAD;AACC,oBAAS,SADV;AAEC,gBAAK,OAFN;AAGC,oBAAS,OAHV;AAIC,mBAAS,KAAKW,WAJf;AAKC,oBAAS;AALV,UADD,GAQI,IAXN;AAaC,kBAAU/B,QAbX;AAcC,2BACC,oBAAC,MAAD;AACC,yBAAe;AAAEqC,kBAAMxB;AAAR,WADhB;AAEC,qBAAU,qBAFX;AAGC,oBAAUb,QAHX;AAIC,wBAAa,SAJd;AAKC,oBAAS,MALV;AAMC,wBAAa,OANd;AAOC,oBAAS,OAPV;AAQC,mBAAQ;AART,UAfF;AA0BC,gBAAQ,KAAKsC,UA1Bd;AA2BC,kBAAU,KAAKC,YA3BhB;AA4BC,iBAAS,CAAC,KAAKT,KAAL,CAAWV,SAAZ,GAAwB,KAAKoB,eAA7B,GAA+C,IA5BzD;AA6BC,mBAAW,KAAKC,aA7BjB;AA8BC,iBAAS,KAAKC,WA9Bf;AA+BC,kBAAU,CAAC,KAAKZ,KAAL,CAAWV,SA/BvB;AAgCC,cAAMrB,IAhCP;AAiCC,eAAO,KAAK+B,KAAL,CAAWV,SAAX,GAAuB,KAAKU,KAAL,CAAWnB,KAAlC,GAA0CA,KAjClD;AAkCC,kBAAU,kBAACgC,KAAD,EAAW;AACpB,iBAAKV,SAAL,GAAiBU,KAAjB;AACA;AApCF,SADD;AAwCA;;;;EAvJuB3D,MAAM4D,S;;AA0J/B9B,WAAW+B,WAAX,GAAyBrD,iBAAzB;AACAsB,WAAWrB,SAAX,GAAuBA,SAAvB;AACAqB,WAAWF,YAAX,GAA0BA,YAA1B;AAEA,eAAeE,UAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Inline Edit Component\n\n// Implements an inline edit component based on the [Input design pattern](https://www.lightningdesignsystem.com/components/forms/#input) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Children\nimport Button from '../../button';\nimport Input from './index';\nimport InputIcon from '../../icon/input-icon';\n\n// ### Event Helpers\nimport KEYS from '../../../utilities/key-code';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './inline-check-props';\n\n// ## Constants\nimport { FORMS_INLINE_EDIT } from '../../../utilities/constants';\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * Class names to be added to the outer container of the input.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * Disables the Inline Edit component and prevents editing the contents.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Every Inline Edit component must have a unique ID in order to support keyboard navigation and ARIA support.\n\t */\n\tid: PropTypes.string.isRequired,\n\t/**\n\t * This event fires when the input changes.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Function will run when keyup during text edit\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Function will run when we enter edit mode\n\t */\n\tonEnterEditMode: PropTypes.func,\n\t/**\n\t * Function will run when we leave edit mode\n\t */\n\tonLeaveEditMode: PropTypes.func,\n\t/**\n\t * Typically an Inline Edit component will be of the type text, but like the Input element it includes support for all HTML5 types.\n\t */\n\ttype: PropTypes.oneOf([\n\t\t'text',\n\t\t'password',\n\t\t'datetime',\n\t\t'datetime-local',\n\t\t'date',\n\t\t'month',\n\t\t'time',\n\t\t'week',\n\t\t'number',\n\t\t'email',\n\t\t'url',\n\t\t'search',\n\t\t'tel',\n\t\t'color',\n\t]),\n\t/**\n\t * Inline Edit is a controlled component, and will always display this value.\n\t */\n\tvalue: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: 'Edit text',\n\ttype: 'text',\n};\n\n/**\n * An inline input is rendered as a label by default. When clicked (or tabbed in), it's rendered as an input. When the focus is lost, the current input value is saved and the input is rendered as a label again.\n */\nclass InlineEdit extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisEditing: false,\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\tcomponentWillMount () {\n\t\tcheckProps(FORMS_INLINE_EDIT, this.props);\n\t}\n\n\tcomponentDidUpdate () {\n\t\tif (this.autoFocus) {\n\t\t\tif (this.inputNode) {\n\t\t\t\tthis.inputNode.focus();\n\t\t\t\tthis.inputNode.select();\n\t\t\t}\n\t\t\tthis.autoFocus = false;\n\t\t}\n\t}\n\n\tendEditMode = (option) => {\n\t\tif (this.willSave) {\n\t\t\tclearTimeout(this.willSave);\n\t\t\tdelete this.willSave;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisEditing: false,\n\t\t\tvalue: null,\n\t\t});\n\n\t\tif (this.props.onLeaveEditMode && isFunction(this.props.onLeaveEditMode)) {\n\t\t\tthis.props.onLeaveEditMode(undefined, option);\n\t\t}\n\t};\n\n\thandleBlur = () => {\n\t\tif (!this.willSave) {\n\t\t\tthis.willSave = setTimeout(this.saveEdits, 200);\n\t\t}\n\t\tif (this.props.onLeaveEditMode && isFunction(this.props.onLeaveEditMode)) {\n\t\t\tthis.props.onLeaveEditMode();\n\t\t}\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (event.keyCode === KEYS.ESCAPE) {\n\t\t\t\tthis.saveEdits({ cancel: true });\n\t\t\t} else if (event.keyCode === KEYS.ENTER) {\n\t\t\t\tthis.saveEdits();\n\t\t\t}\n\t\t}\n\t};\n\n\thandleKeyUp = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (this.props.onKeyUp && isFunction(this.props.onKeyUp)) {\n\t\t\t\tthis.props.onKeyUp(event, {\n\t\t\t\t\tvalue: this.state.value,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tsaveEdits = (option) => {\n\t\tif (!(option && option.cancel === true)) {\n\t\t\tif (isFunction(this.props.onChange)) {\n\t\t\t\tthis.props.onChange({\n\t\t\t\t\tvalue: this.state.value,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.endEditMode(option);\n\t};\n\n\ttriggerEditMode = () => {\n\t\tif (!this.props.disabled) {\n\t\t\tthis.autoFocus = true;\n\t\t\tthis.setState({\n\t\t\t\tisEditing: true,\n\t\t\t\tvalue: this.props.value,\n\t\t\t});\n\t\t\tif (isFunction(this.props.onEnterEditMode)) {\n\t\t\t\tthis.props.onEnterEditMode();\n\t\t\t}\n\t\t}\n\t};\n\n\t// ### Render\n\trender () {\n\t\tconst {\n\t\t\tassistiveText,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tname,\n\n\t\t\t// ### Additional properties\n\t\t\t// Using [object destructuring](https://facebook.github.io/react/docs/transferring-props.html#transferring-with-...-in-jsx) to pass on any properties which are not explicitly defined.\n\t\t\t...rest\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\t{...rest}\n\t\t\t\ticonRight={\n\t\t\t\t\tthis.state.isEditing ? (\n\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t\t\tposition=\"right\"\n\t\t\t\t\t\t\tonClick={this.endEditMode}\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tinlineEditTrigger={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tassistiveText={{ icon: assistiveText }}\n\t\t\t\t\t\tclassName=\"slds-m-left_x-small\"\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\ticonName=\"edit\"\n\t\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonClick={!this.state.isEditing ? this.triggerEditMode : null}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonKeyUp={this.handleKeyUp}\n\t\t\t\tisStatic={!this.state.isEditing}\n\t\t\t\tname={name}\n\t\t\t\tvalue={this.state.isEditing ? this.state.value : value}\n\t\t\t\tinputRef={(input) => {\n\t\t\t\t\tthis.inputNode = input;\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nInlineEdit.displayName = FORMS_INLINE_EDIT;\nInlineEdit.propTypes = propTypes;\nInlineEdit.defaultProps = defaultProps;\n\nexport default InlineEdit;\n"],"file":"inline.js"}