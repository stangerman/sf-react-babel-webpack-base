{"version":3,"sources":["../../../../.tmp-es/components/navigation/__tests__/navigation.browser-test.jsx"],"names":["React","createReactClass","PropTypes","chai","expect","chaiEnzyme","entries","mountComponent","unmountComponent","sampleReportCategories","Navigation","Object","shim","use","defaultProps","id","className","categories","DemoComponent","displayName","propTypes","selectedId","string","onSelect","func","getDefaultProps","getInitialState","render","props","describe","beforeEach","afterEach","it","structure","reports","folders","forEach","categoryId","itemCount","header","wrapper","find","to","have","length","ariaDescribedbyId","item","clickHandler","sinon","spy","simulate","callCount","equal"],"mappings":"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","sourcesContent":["/* Adds all of the Mocha (eg `it` and `should`) and sinon testing global\n * variables to the global namespace for eslint purposes.\n */\n/* eslint-env mocha */\n/* global sinon */\n\n// Import your external dependencies\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\n\nimport entries from 'object.entries';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tmountComponent,\n\tunmountComponent,\n} from '../../../tests/enzyme-helpers';\n\nimport { sampleReportCategories } from '../../../utilities/sample-data/navigation';\nimport Navigation from '../../navigation';\n\n// shim for PhantomJS\nif (!Object.entries) {\n\tentries.shim();\n}\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\nchai.use(chaiEnzyme());\n\nconst defaultProps = {\n\tid: 'sample-navigation',\n\tclassName: 'sample-navigation',\n\tcategories: sampleReportCategories,\n};\n\n/* A re-usable demo component fixture outside of `describe` sections\n * can accept props within each test and be unmounted after each tests.\n */\nconst DemoComponent = createReactClass({\n\tdisplayName: 'NavigationDemoComponent',\n\tpropTypes: {\n\t\tselectedId: PropTypes.string,\n\t\tonSelect: PropTypes.func,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn defaultProps;\n\t},\n\n\tgetInitialState () {\n\t\treturn {};\n\t},\n\n\t// event handlers\n\n\trender () {\n\t\treturn <Navigation {...this.props} />;\n\t},\n});\n\ndescribe('SLDSNavigation', () => {\n\tdescribe('Assistive technology', () => {\n\t\t/* Detect if presence of accessibility features such as ARIA\n\t\t * roles and screen reader text is present in the DOM.\n\t\t */\n\t\tbeforeEach(mountComponent(<DemoComponent />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('has items described by category headers', function () {\n\t\t\tconst structure = { reports: 5, folders: 3 };\n\t\t\tObject.entries(structure).forEach(([categoryId, itemCount]) => {\n\t\t\t\tconst header = this.wrapper.find(`#sample-navigation-${categoryId}`);\n\t\t\t\texpect(header).to.have.length(1);\n\t\t\t\tconst ariaDescribedbyId = this.wrapper.find(\n\t\t\t\t\t`a[aria-describedby=\"sample-navigation-${categoryId}\"]`\n\t\t\t\t);\n\t\t\t\texpect(ariaDescribedbyId).to.have.length(itemCount);\n\t\t\t});\n\t\t});\n\t});\n\n\t// PROPS\n\n\tdescribe('selectedId prop', () => {\n\t\tconst selectedId = 'my_folders';\n\n\t\tbeforeEach(mountComponent(<DemoComponent selectedId={selectedId} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('is used to select an item', function () {\n\t\t\tconst item = this.wrapper\n\t\t\t\t.find('.sample-navigation')\n\t\t\t\t.find('li.slds-is-active')\n\t\t\t\t.find('a[data-id=\"my_folders\"]');\n\t\t\texpect(item).to.have.length(1);\n\t\t});\n\t});\n\n\t// EVENTS\n\n\tdescribe('Item', () => {\n\t\tconst clickHandler = sinon.spy();\n\n\t\tbeforeEach(mountComponent(<DemoComponent onSelect={clickHandler} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('calls onSelect', function () {\n\t\t\tconst item = this.wrapper\n\t\t\t\t.find('.sample-navigation')\n\t\t\t\t.find('a[data-id=\"my_folders\"]');\n\t\t\titem.simulate('click');\n\t\t\texpect(clickHandler.callCount).to.equal(1);\n\t\t});\n\t});\n});\n"],"file":"navigation.browser-test.js"}