{"version":3,"sources":["../../../../.tmp-es/components/navigation/private/item.jsx"],"names":["React","PropTypes","classNames","isFunction","NAVIGATION_ITEM","handleClick","event","props","onSelect","item","Item","isSelected","id","url","categoryId","label","displayName","propTypes","shape","string","isRequired","bool","func","defaultProps"],"mappings":"AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAASC,eAAT,QAAgC,8BAAhC;;AAEA,IAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,MAAIJ,WAAWI,MAAMC,QAAjB,CAAJ,EAAgC;AAC/BD,UAAMC,QAAN,CAAeF,KAAf,EAAsB;AACrBG,YAAMF,MAAME;AADS,KAAtB;AAGA;AACD,CAND;;AAQA,IAAMC,OAAO,SAAPA,IAAO,CAACH,KAAD;AAAA,SACZ;AAAI,eAAWL,WAAW;AAAE,wBAAkBK,MAAMI;AAA1B,KAAX;AAAf,KACC;AACC,eAASJ,MAAME,IAAN,CAAWG,EADrB;AAEC,UAAML,MAAME,IAAN,CAAWI,GAAX,IAAkB,qBAFzB,CAEgD;AAFhD;AAGC,eAAU,8DAHX;AAIC,wBAAkBN,MAAMO,UAJzB;AAKC,aAAS,iBAACR,KAAD,EAAW;AACnBD,kBAAYC,KAAZ,EAAmBC,KAAnB;AACA;AAPF,KASEA,MAAME,IAAN,CAAWM,KATb,CADD,CADY;AAAA,CAAb,C,CAgBA;AACA;;;AACAL,KAAKM,WAAL,GAAmBZ,eAAnB,C,CAEA;;AACAM,KAAKO,SAAL,GAAiB;AAChB;;;AAGAR,QAAMR,UAAUiB,KAAV,CAAgB;AACrBN,QAAIX,UAAUkB,MAAV,CAAiBC,UADA;AAErBL,WAAOd,UAAUkB,MAAV,CAAiBC,UAFH;AAGrBP,SAAKZ,UAAUkB;AAHM,GAAhB,CAJU;;AAShB;;;AAGAR,cAAYV,UAAUoB,IAZN;;AAahB;;;AAGAP,cAAYb,UAAUkB,MAAV,CAAiBC,UAhBb;;AAiBhB;;;AAGAZ,YAAUP,UAAUqB;AApBJ,CAAjB;AAuBAZ,KAAKa,YAAL,GAAoB;AACnBZ,cAAY;AADO,CAApB;AAIA,eAAeD,IAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\nimport { NAVIGATION_ITEM } from '../../../utilities/constants';\n\nconst handleClick = (event, props) => {\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect(event, {\n\t\t\titem: props.item,\n\t\t});\n\t}\n};\n\nconst Item = (props) => (\n\t<li className={classNames({ 'slds-is-active': props.isSelected })}>\n\t\t<a\n\t\t\tdata-id={props.item.id}\n\t\t\thref={props.item.url || 'javascript:void(0);'} // eslint-disable-line no-script-url\n\t\t\tclassName=\"slds-navigation-list--vertical__action slds-text-link--reset\"\n\t\t\taria-describedby={props.categoryId}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, props);\n\t\t\t}}\n\t\t>\n\t\t\t{props.item.label}\n\t\t</a>\n\t</li>\n);\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = NAVIGATION_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * Item to be rendered.\n\t */\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tlabel: PropTypes.string.isRequired,\n\t\turl: PropTypes.string,\n\t}),\n\t/**\n\t * Whether item is selected or not.\n\t */\n\tisSelected: PropTypes.bool,\n\t/**\n\t * ID of the category this item belongs to.\n\t */\n\tcategoryId: PropTypes.string.isRequired,\n\t/**\n\t * Function that will run whenever an item is selected.\n\t */\n\tonSelect: PropTypes.func,\n};\n\nItem.defaultProps = {\n\tisSelected: false,\n};\n\nexport default Item;\n"],"file":"item.js"}