{"version":3,"sources":["../../../.tmp-es/components/navigation/index.jsx"],"names":["React","createReactClass","PropTypes","classNames","shortid","NAVIGATION","Item","Navigation","displayName","propTypes","id","string","className","oneOfType","array","object","categories","selectedId","onSelect","func","variant","oneOf","getDefaultProps","componentWillMount","generatedId","generate","getId","props","getVariant","getSelectedId","length","items","render","rootId","map","category","categoryId","label","item"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Navigation design pattern](https://lightningdesignsystem.com/components/navigation/) in React.\n// Based on SLDS v2.2.1\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { NAVIGATION } from '../../utilities/constants';\n\n// Child components\nimport Item from './private/item';\n\n/**\n * Navigation represents a list of links that either take the user to another page or parts of the page the user is in.\n */\nconst Navigation = createReactClass({\n\tdisplayName: NAVIGATION,\n\n\tpropTypes: {\n\t\t/**\n\t\t * HTML id for component. _Tested with snapshot testing._\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * CSS class names to be added to the container element. _Tested with snapshot testing._\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Array of categories. The required shape is: `{id: string, label: string, items: array}`. The required shape of an item is `{id: string, label: string, url: string}`. All item ids are expected to be unique. _Tested with snapshot testing._\n\t\t */\n\t\tcategories: PropTypes.array,\n\t\t/**\n\t\t * The ID of the item that is currently selected. Defaults to the ID of the first item. _Tested with Mocha framework._\n\t\t */\n\t\tselectedId: PropTypes.string,\n\t\t/**\n\t\t * Triggered when the selection changes. It receives an event and an item object in the shape: `event, {item: [object] }`. _Tested with Mocha framework._\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * Determines component style. _Tested with snapshot testing._\n\t\t */\n\t\tvariant: PropTypes.oneOf(['default', 'shade']),\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tvariant: 'default',\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\tthis.generatedId = shortid.generate();\n\t},\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t},\n\n\tgetVariant () {\n\t\treturn this.props.variant === 'shade' ? 'shade' : 'default';\n\t},\n\n\tgetSelectedId () {\n\t\tconst categories = this.props.categories;\n\t\tlet selectedId;\n\t\tif (this.props.selectedId) {\n\t\t\tselectedId = this.props.selectedId;\n\t\t} else if (\n\t\t\tcategories.length > 0 &&\n\t\t\tcategories[0].items &&\n\t\t\tcategories[0].items.length > 0\n\t\t) {\n\t\t\tselectedId = categories[0].items[0].id;\n\t\t}\n\t\treturn selectedId;\n\t},\n\n\trender () {\n\t\tconst rootId = this.getId();\n\t\tconst variant = this.getVariant();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={rootId}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-grid',\n\t\t\t\t\t'slds-grid--vertical',\n\t\t\t\t\t'slds-navigation-list--vertical',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-navigation-list--vertical-inverse': variant === 'shade',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.categories.map((category) => {\n\t\t\t\t\tconst categoryId = `${rootId}-${category.id}`;\n\t\t\t\t\tconst selectedId = this.getSelectedId();\n\t\t\t\t\treturn [\n\t\t\t\t\t\t<h2\n\t\t\t\t\t\t\tid={categoryId}\n\t\t\t\t\t\t\tkey={`${categoryId}-header`}\n\t\t\t\t\t\t\tclassName=\"slds-text-title--caps slds-p-around--medium\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{category.label}\n\t\t\t\t\t\t</h2>,\n\t\t\t\t\t\t<ul key={categoryId}>\n\t\t\t\t\t\t\t{category.items.map((item) => (\n\t\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\tisSelected={item.id === selectedId}\n\t\t\t\t\t\t\t\t\tcategoryId={categoryId}\n\t\t\t\t\t\t\t\t\tonSelect={this.props.onSelect}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>,\n\t\t\t\t\t];\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default Navigation;\n"],"file":"index.js"}