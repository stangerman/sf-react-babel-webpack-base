{"version":3,"sources":["../../../.tmp-es/components/menu-picklist/index.jsx"],"names":["React","createReactClass","PropTypes","classNames","shortid","checkProps","Dialog","Icon","List","ListItemLabel","Pill","KeyboardNavigable","EventUtil","KEYS","MENU_PICKLIST","MenuPicklist","displayName","propTypes","buttonRef","func","className","string","checkmark","bool","disabled","errorText","id","isInline","label","labels","shape","multipleOptionsSelected","listItemRenderer","multiple","onClick","onSelect","onPillRemove","options","array","isRequired","placeholder","required","value","node","initValueIndex","number","mixins","getDefaultProps","inheritTargetWidth","menuPosition","getInitialState","focusedIndex","props","selectedIndex","selectedIndices","currentPillLabel","componentWillMount","generatedId","generate","generatedErrorId","window","addEventListener","closeOnClick","setState","getIndexByValue","currentSelectedIndex","currentIndices","state","push","componentWillReceiveProps","nextProps","length","concat","componentWillUnmount","isUnmounting","removeEventListener","getId","getErrorId","getClickEventName","foundIndex","some","element","index","getValueByIndex","getListItemRenderer","setFocus","button","focus","handleSelect","handleClose","indexOf","deselectIndex","splice","option","optionIndex","isOpen","handleClick","event","nativeEvent","handleMouseDown","trapImmediate","handleKeyDown","keyCode","ENTER","SPACE","DOWN","UP","trap","TAB","openMenuKeys","isTrigger","target","tagName","handleKeyboardNavigate","toggleOpen","handleCancel","saveRefToList","list","saveRefToListItem","listItem","listItems","handleKeyboardFocus","saveRefToTrigger","trigger","triggerRendered","renderMenuContent","getListItemId","undefined","renderInlineMenu","maxHeight","overflowX","minWidth","renderDialog","constrainToScrollParent","context","renderTrigger","modal","inputValue","renderPills","selectedPills","map","selectedPill","pillLabel","item","onRequestRemove","data","newData","render","requiredElem","color","width","contextTypes","iconPath"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Picklist Component\n\n// Implements the [Picklist design pattern](https://www.lightningdesignsystem.com/components/menus/#flavor-picklist) in React.\n// Based on SLDS v2.1.0-rc.2\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Children\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon';\nimport List from '../utilities/menu-list';\nimport ListItemLabel from '../utilities/menu-list/item-label';\nimport Pill from '../utilities/pill';\n\n// ### Traits\n\n// #### KeyboardNavigable\nimport KeyboardNavigable from '../../utilities/keyboard-navigable-menu';\n\nimport EventUtil from '../../utilities/event';\nimport KEYS from '../../utilities/key-code';\nimport { MENU_PICKLIST } from '../../utilities/constants';\n\n/**\n * ** MenuPicklist is deprecated. Please use a read-only Combobox instead.**\n *\n * The MenuPicklist component is a variant of the Lightning Design System Menu component.\n */\nconst MenuPicklist = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: MENU_PICKLIST,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tbuttonRef: PropTypes.func,\n\t\tclassName: PropTypes.string,\n\t\t/**\n\t\t * If true, renders checkmark icon on the selected Menu Item.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error.\n\t\t */\n\t\terrorText: PropTypes.string,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Renders menu within the wrapping trigger as a sibling of the button. By default, you will have an absolutely positioned container at an elevated z-index.\n\t\t */\n\t\tisInline: PropTypes.bool,\n\t\t/**\n\t\t * Form element label\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * **Text labels for internationalization**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `multipleOptionsSelected`: Text to be used when multiple items are selected. \"2 Options Selected\" is a good pattern to use.\n\t\t */\n\t\tlabels: PropTypes.shape({\n\t\t\tmultipleOptionsSelected: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Allows multiple items to be selected. Items will be shown in pills. Clicking the item does not close the menu.\n\t\t */\n\t\tmultiple: PropTypes.bool,\n\t\t/**\n\t\t * Triggered when the trigger button is clicked to open.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Triggered when an item is selected. Passes in the option object that has been selected and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a pill is removed. Passes in the option object that has been removed and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n\t\t */\n\t\tonPillRemove: PropTypes.func,\n\t\t/**\n\t\t * Menu item data.\n\t\t */\n\t\toptions: PropTypes.array.isRequired,\n\t\t/**\n\t\t * Text present in trigger button if no items are selected.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * Add styling of a required form element.\n\t\t */\n\t\trequired: PropTypes.bool,\n\t\t/**\n\t\t * Current selected item.\n\t\t */\n\t\tvalue: PropTypes.node,\n\t\t/**\n\t\t * Initial selected item index.\n\t\t */\n\t\tinitValueIndex: PropTypes.number,\n\t},\n\n\tmixins: [KeyboardNavigable],\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tinheritTargetWidth: true,\n\t\t\tplaceholder: 'Select an Option',\n\t\t\tcheckmark: true,\n\t\t\tlabels: {\n\t\t\t\tmultipleOptionsSelected: 'Multiple Options Selected',\n\t\t\t},\n\t\t\tmenuPosition: 'absolute',\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tfocusedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n\t\t\tselectedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n\t\t\tselectedIndices: [],\n\t\t\tcurrentPillLabel: '',\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(MENU_PICKLIST, this.props);\n\n\t\tthis.generatedId = shortid.generate();\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.addEventListener('click', this.closeOnClick, false);\n\t\t}\n\n\t\tif (!this.props.multiple) {\n\t\t\tthis.setState({\n\t\t\t\tselectedIndex: this.getIndexByValue(this.props),\n\t\t\t});\n\t\t} else {\n\t\t\tconst currentSelectedIndex = this.getIndexByValue(this.props);\n\t\t\tconst currentIndices = this.state.selectedIndices;\n\t\t\tif (currentSelectedIndex !== -1) {\n\t\t\t\tcurrentIndices.push(currentSelectedIndex);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponentWillReceiveProps (nextProps) {\n\t\tif (\n\t\t\tthis.props.value !== nextProps.value ||\n\t\t\tthis.props.options.length !== nextProps.length\n\t\t) {\n\t\t\tif (this.props.multiple !== true) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedIndex: this.getIndexByValue(nextProps),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst currentSelectedIndex = this.getIndexByValue(nextProps);\n\t\t\t\tif (currentSelectedIndex !== -1) {\n\t\t\t\t\tconst currentIndices = this.state.selectedIndices.concat(\n\t\t\t\t\t\tcurrentSelectedIndex\n\t\t\t\t\t);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tselectedIndices: currentIndices,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tcomponentWillUnmount () {\n\t\tthis.isUnmounting = true;\n\t\twindow.removeEventListener('click', this.closeOnClick, false);\n\t},\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t},\n\n\tgetErrorId () {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t},\n\n\tgetClickEventName () {\n\t\treturn `SLDS${this.getId()}ClickEvent`;\n\t},\n\n\tgetIndexByValue ({ value, options } = this.props) {\n\t\tlet foundIndex = -1;\n\n\t\tif (options && options.length) {\n\t\t\toptions.some((element, index) => {\n\t\t\t\tif (element && element.value === value) {\n\t\t\t\t\tfoundIndex = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn foundIndex;\n\t},\n\n\tgetValueByIndex (index) {\n\t\treturn this.props.options[index];\n\t},\n\n\tgetListItemRenderer () {\n\t\treturn this.props.listItemRenderer\n\t\t\t? this.props.listItemRenderer\n\t\t\t: ListItemLabel;\n\t},\n\n\tsetFocus () {\n\t\tif (!this.isUnmounting && this.button) {\n\t\t\tthis.button.focus();\n\t\t}\n\t},\n\n\thandleSelect (index) {\n\t\tif (!this.props.multiple) {\n\t\t\tthis.setState({ selectedIndex: index });\n\t\t\tthis.handleClose();\n\t\t\tthis.setFocus();\n\t\t} else {\n\t\t\tlet currentIndices;\n\n\t\t\tif (this.state.selectedIndices.indexOf(index) === -1) {\n\t\t\t\tcurrentIndices = this.state.selectedIndices.concat(index);\n\t\t\t} else {\n\t\t\t\tconst deselectIndex = this.state.selectedIndices.indexOf(index);\n\t\t\t\tcurrentIndices = this.state.selectedIndices;\n\t\t\t\tcurrentIndices.splice(deselectIndex, 1);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.onSelect) {\n\t\t\tconst option = this.getValueByIndex(index);\n\t\t\tthis.props.onSelect(option, { option, optionIndex: index });\n\t\t}\n\t},\n\n\thandleClose () {\n\t\tthis.setState({ isOpen: false });\n\t},\n\n\thandleClick (event) {\n\t\tif (event) {\n\t\t\tevent.nativeEvent[this.getClickEventName()] = true;\n\t\t}\n\n\t\tif (!this.state.isOpen) {\n\t\t\tthis.setState({ isOpen: true });\n\t\t\tthis.setFocus();\n\n\t\t\tif (this.props.onClick) {\n\t\t\t\tthis.props.onClick(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleClose();\n\t\t}\n\t},\n\n\thandleMouseDown (event) {\n\t\tif (event) {\n\t\t\tEventUtil.trapImmediate(event);\n\t\t\tevent.nativeEvent[this.getClickEventName()] = true;\n\t\t}\n\t},\n\n\thandleKeyDown (event) {\n\t\tif (event.keyCode) {\n\t\t\tif (\n\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\tevent.keyCode === KEYS.SPACE ||\n\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\tevent.keyCode === KEYS.UP\n\t\t\t) {\n\t\t\t\tEventUtil.trap(event);\n\t\t\t}\n\n\t\t\tif (event.keyCode !== KEYS.TAB) {\n\t\t\t\t// The outer div with onKeyDown is overriding button onClick so we need to add it here.\n\t\t\t\tconst openMenuKeys =\n\t\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\t\tevent.keyCode === KEYS.UP;\n\t\t\t\tconst isTrigger = event.target.tagName === 'BUTTON';\n\t\t\t\tif (openMenuKeys && isTrigger && this.props.onClick) {\n\t\t\t\t\tthis.props.onClick(event);\n\t\t\t\t}\n\n\t\t\t\tthis.handleKeyboardNavigate({\n\t\t\t\t\tisOpen: this.state.isOpen || false,\n\t\t\t\t\tkeyCode: event.keyCode,\n\t\t\t\t\tonSelect: this.handleSelect,\n\t\t\t\t\ttoggleOpen: this.toggleOpen,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.handleCancel();\n\t\t\t}\n\t\t}\n\t},\n\n\thandleCancel () {\n\t\tthis.setFocus();\n\t\tthis.handleClose();\n\t},\n\n\tcloseOnClick (event) {\n\t\tif (!event[this.getClickEventName()] && this.state.isOpen) {\n\t\t\tthis.handleClose();\n\t\t}\n\t},\n\n\ttoggleOpen () {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t},\n\n\tsaveRefToList (list) {\n\t\tthis.list = list;\n\t},\n\n\tsaveRefToListItem (listItem, index) {\n\t\tif (!this.listItems) {\n\t\t\tthis.listItems = {};\n\t\t}\n\n\t\tthis.listItems[index] = listItem;\n\n\t\tif (index === this.state.focusedIndex) {\n\t\t\tthis.handleKeyboardFocus(this.state.focusedIndex);\n\t\t}\n\t},\n\n\t// Trigger opens, closes, and recieves focus on close\n\tsaveRefToTrigger (trigger) {\n\t\tthis.button = trigger;\n\t\tif (this.props.buttonRef) {\n\t\t\tthis.props.buttonRef(this.button);\n\t\t}\n\n\t\tif (!this.state.triggerRendered) {\n\t\t\tthis.setState({ triggerRendered: true });\n\t\t}\n\t},\n\n\trenderMenuContent () {\n\t\treturn (\n\t\t\t<List\n\t\t\t\tcheckmark={this.props.checkmark}\n\t\t\t\tgetListItemId={this.getListItemId}\n\t\t\t\titemRefs={this.saveRefToListItem}\n\t\t\t\titemRenderer={this.getListItemRenderer()}\n\t\t\t\tonCancel={this.handleCancel}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.props.options}\n\t\t\t\tref={this.saveRefToList}\n\t\t\t\tselectedIndex={\n\t\t\t\t\t!this.props.multiple ? this.state.selectedIndex : undefined\n\t\t\t\t}\n\t\t\t\tselectedIndices={\n\t\t\t\t\tthis.props.multiple ? this.state.selectedIndices : undefined\n\t\t\t\t}\n\t\t\t\ttriggerId={this.getId()}\n\t\t\t/>\n\t\t);\n\t},\n\n\trenderInlineMenu () {\n\t\treturn !this.props.disabled && this.state.isOpen ? (\n\t\t\t<div\n\t\t\t\tclassName=\"slds-dropdown slds-dropdown--left\"\n\t\t\t\t// inline style override\n\t\t\t\tstyle={{\n\t\t\t\t\tmaxHeight: '20em',\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\tminWidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent()}\n\t\t\t</div>\n\t\t) : null;\n\t},\n\n\trenderDialog () {\n\t\treturn !this.props.disabled && this.state.isOpen ? (\n\t\t\t<Dialog\n\t\t\t\tcloseOnTabKey\n\t\t\t\tconstrainToScrollParent={this.props.constrainToScrollParent}\n\t\t\t\tcontentsClassName=\"slds-dropdown slds-dropdown--left\"\n\t\t\t\tcontext={this.context}\n\t\t\t\tflippable\n\t\t\t\tonClose={this.handleCancel}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonRequestTargetElement={() => this.button}\n\t\t\t\tinheritWidthOf={this.props.inheritTargetWidth ? 'target' : 'none'}\n\t\t\t\tposition={this.props.menuPosition}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent()}\n\t\t\t</Dialog>\n\t\t) : null;\n\t},\n\n\trenderTrigger () {\n\t\tlet isInline;\n\t\t/* eslint-disable react/prop-types */\n\t\tif (this.props.isInline) {\n\t\t\tisInline = true;\n\t\t} else if (this.props.modal !== undefined) {\n\t\t\tisInline = !this.props.modal;\n\t\t}\n\t\t/* eslint-enable react/prop-types */\n\n\t\tlet inputValue;\n\t\tif (this.props.multiple && this.state.selectedIndices.length === 0) {\n\t\t\tinputValue = this.props.placeholder;\n\t\t} else if (this.props.multiple && this.state.selectedIndices.length === 1) {\n\t\t\tconst option = this.props.options[this.state.selectedIndices];\n\t\t\tinputValue = option.label;\n\t\t} else if (this.props.multiple && this.state.selectedIndices.length > 1) {\n\t\t\tinputValue = this.props.labels.multipleOptionsSelected;\n\t\t} else {\n\t\t\tconst option = this.props.options[this.state.selectedIndex];\n\t\t\tinputValue =\n\t\t\t\toption && option.label ? option.label : this.props.placeholder;\n\t\t}\n\n\t\t// TODO: make use of <Button>\n\t\treturn (\n\t\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-picklist slds-dropdown-trigger slds-dropdown-trigger--click',\n\t\t\t\t\t{ 'slds-is-open': this.state.isOpen },\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonMouseDown={this.handleMouseDown}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\taria-expanded={this.state.isOpen}\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tclassName=\"slds-button slds-button--neutral slds-picklist__label\"\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tonClick={!this.props.disabled && this.handleClick}\n\t\t\t\t\tref={this.saveRefToTrigger}\n\t\t\t\t\ttabIndex={this.state.isOpen ? -1 : 0}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-truncate\">{inputValue}</span>\n\t\t\t\t\t<Icon name=\"down\" category=\"utility\" />\n\t\t\t\t</button>\n\t\t\t\t{isInline ? this.renderInlineMenu() : this.renderDialog()}\n\t\t\t</div>\n\t\t);\n\t},\n\n\trenderPills () {\n\t\tconst selectedPills = this.state.selectedIndices.map((selectedPill) => {\n\t\t\tconst pillLabel = this.getValueByIndex(selectedPill).label;\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"slds-listbox__item\"\n\t\t\t\t\tkey={`pill-${selectedPill}`}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t>\n\t\t\t\t\t<Pill\n\t\t\t\t\t\teventData={{\n\t\t\t\t\t\t\titem: this.props.options[selectedPill],\n\t\t\t\t\t\t\tindex: selectedPill,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonRequestRemove: (event, data) => {\n\t\t\t\t\t\t\t\tconst newData = this.state.selectedIndices;\n\t\t\t\t\t\t\t\tconst index = data.index;\n\t\t\t\t\t\t\t\tnewData.splice(this.state.selectedIndices.indexOf(index), 1);\n\t\t\t\t\t\t\t\tthis.setState({ selectedIndices: newData });\n\n\t\t\t\t\t\t\t\tif (this.props.onPillRemove) {\n\t\t\t\t\t\t\t\t\tconst option = this.getValueByIndex(index);\n\t\t\t\t\t\t\t\t\tthis.props.onPillRemove(option, {\n\t\t\t\t\t\t\t\t\t\toption,\n\t\t\t\t\t\t\t\t\t\toptionIndex: index,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\tlabel: pillLabel,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid=\"listbox-selections-unique-id\"\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\trole=\"listbox\"\n\t\t\t>\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"slds-listbox slds-listbox_inline slds-p-top_xxx-small\"\n\t\t\t\t\trole=\"group\"\n\t\t\t\t\taria-label=\"Selected Options:\"\n\t\t\t\t>\n\t\t\t\t\t{selectedPills}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t},\n\n\trender () {\n\t\tconst { className, errorText, label, required } = this.props;\n\n\t\tconst requiredElem = required ? (\n\t\t\t<span style={{ color: 'red' }}>* </span>\n\t\t) : null;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': errorText,\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.label ? (\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"slds-form-element__label\"\n\t\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\t\t// inline style override\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{requiredElem}\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t) : null}\n\t\t\t\t{this.renderTrigger()}\n\t\t\t\t{this.renderPills()}\n\t\t\t\t{errorText && (\n\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t{errorText}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nMenuPicklist.contextTypes = {\n\ticonPath: PropTypes.string,\n};\n\nexport default MenuPicklist;\nexport { ListItemLabel };\n"],"file":"index.js"}