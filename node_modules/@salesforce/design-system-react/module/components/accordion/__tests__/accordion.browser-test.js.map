{"version":3,"sources":["../../../../.tmp-es/components/accordion/__tests__/accordion.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","Accordion","IconSettings","Panel","Dropdown","use","propTypes","defaultProps","AccordionExample","props","state","expandedPanels","items","id","summary","details","selectedItem","option","label","setState","filter","item","console","log","event","value","map","menuDropdown","togglePanel","Component","displayName","describe","mountNode","wrapper","beforeEach","context","afterEach","it","attachTo","accordion","find","panelContentActions","to","exist","panel","first","expanded","be","false","simulate","true","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\n\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\nimport Accordion from '../../accordion';\nimport IconSettings from '../../icon-settings';\nimport Panel from '../../accordion/panel';\nimport Dropdown from '../../menu-dropdown';\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\n\nchai.use(chaiEnzyme());\n\n/* Re-usable demo component.\n */\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nclass AccordionExample extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpandedPanels: {},\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: '1',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - A',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '2',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - B',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '3',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - C',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tmenuDropdown (selectedItem) {\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\talign=\"right\"\n\t\t\t\tid=\"ButtonGroupExampleDropdown\"\n\t\t\t\tassistiveText=\"More Options\"\n\t\t\t\tbuttonVariant=\"icon\"\n\t\t\t\tbuttonClassName=\"slds-shrink-none\"\n\t\t\t\ticonCategory=\"utility\"\n\t\t\t\ticonName=\"down\"\n\t\t\t\ticonVariant=\"border-filled\"\n\t\t\t\tonSelect={(option) => {\n\t\t\t\t\tif (option.label === 'delete') {\n\t\t\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\titems: state.items.filter((item) => item.id !== selectedItem.id),\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\tconsole.log('onSelect', event, option);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\toptions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'delete',\n\t\t\t\t\t\tvalue: 'A0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'redo',\n\t\t\t\t\t\tvalue: 'B0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'activate',\n\t\t\t\t\t\tvalue: 'C0',\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\ticonSize=\"x-small\"\n\t\t\t/>\n\t\t);\n\t}\n\n\ttogglePanel (id) {\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\texpandedPanels: {\n\t\t\t\t...state.expandedPanels,\n\t\t\t\t[id]: !state.expandedPanels[id],\n\t\t\t},\n\t\t}));\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Accordion id=\"base-example-accordion\">\n\t\t\t\t\t{this.state.items.map((item) => (\n\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\texpanded={!!this.state.expandedPanels[item.id]}\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tpanelContentActions={this.menuDropdown(item)}\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tonTogglePanel={() => this.togglePanel(item.id)}\n\t\t\t\t\t\t\tsummary={item.summary}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.details}\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t))}\n\t\t\t\t</Accordion>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nAccordionExample.displayName = 'AccordionExampleComponent';\nAccordionExample.propTypes = propTypes;\nAccordionExample.defaultProps = defaultProps;\n\n/* Accordion rendering tests\n */\n\ndescribe('Accordion', function () {\n\tdescribe('Renders Accordion', () => {\n\t\tlet mountNode;\n\t\tlet wrapper;\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('renders an accordion', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst accordion = wrapper.find(Accordion);\n\t\t\texpect();\n\t\t});\n\n\t\tit('renders `panelContentActions` component, if passed', () => {\n\t\t\twrapper = mount(<AccordionExample />, {\n\t\t\t\tattachTo: mountNode,\n\t\t\t});\n\t\t\tconst panelContentActions = wrapper.find(\n\t\t\t\t'div .slds-dropdown-trigger .slds-dropdown-trigger--click'\n\t\t\t);\n\t\t\texpect(panelContentActions, 'panel dropdown component exists').to.exist;\n\t\t});\n\t});\n\n\tdescribe('Open panel', () => {\n\t\tlet mountNode;\n\t\tlet wrapper;\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('triggers a change callback on panel select', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst panel = wrapper.find('SLDSAccordionPanel').first();\n\t\t\texpect(panel.props().expanded).to.be.false;\n\t\t\tpanel.find('.slds-accordion__summary-action').simulate('click');\n\t\t\texpect(panel.props().expanded).to.be.true;\n\t\t});\n\n\t\tit('`aria-expanded` set to true on panel select', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst panel = wrapper.find('SLDSAccordionPanel').first();\n\t\t\tconst button = panel.find('.slds-accordion__summary-action');\n\t\t\tpanel.find('.slds-accordion__summary-action').simulate('click');\n\t\t\texpect(button.props()['aria-expanded']).to.be.true;\n\t\t});\n\t});\n});\n"],"file":"accordion.browser-test.js"}