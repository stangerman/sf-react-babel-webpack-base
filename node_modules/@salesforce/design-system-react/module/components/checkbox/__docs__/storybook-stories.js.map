{"version":3,"sources":["../../../../.tmp-es/components/checkbox/__docs__/storybook-stories.jsx"],"names":["React","storiesOf","action","IconSettings","FORMS_CHECKBOX","Checkbox","Button","DefaultCheckbox","CheckboxIndeterminate","indeterminate","checked","currentStateHelper","event","data","checkedLabel","setState","changeToIndeterminate","changeToCheck","changeToUnChecked","state","label","handleChange","Component","module","addDecorator","getStory","add","e","console","log","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport IconSettings from '../../icon-settings';\n\nimport { FORMS_CHECKBOX } from '../../../utilities/constants';\nimport Checkbox from '../';\nimport Button from '../../button';\n\nimport DefaultCheckbox from '../__examples__/default';\n\nclass CheckboxIndeterminate extends React.Component {\n\tstatic displayName = `${FORMS_CHECKBOX}_INDETERMINATE`;\n\n\tstate = {\n\t\tindeterminate: true,\n\t\tchecked: true,\n\t\tcurrentStateHelper: 'Indeterminate',\n\t};\n\n\thandleChange = (checked, event, data) => {\n\t\tconst checkedLabel = data.checked ? 'Checked' : 'Unchecked';\n\t\tthis.setState({\n\t\t\tchecked: data.checked,\n\t\t\tcurrentStateHelper: data.indeterminate ? 'Indeterminate' : checkedLabel,\n\t\t\tindeterminate: data.indeterminate,\n\t\t});\n\n\t\taction('handleChange')(\n\t\t\tchecked,\n\t\t\tevent,\n\t\t\t`checked: ${data.checked},\n\t\t\tindeterminate: ${data.indeterminate}`\n\t\t);\n\t};\n\n\tchangeToIndeterminate = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Indeterminate',\n\t\t\tchecked: true,\n\t\t\tindeterminate: true,\n\t\t});\n\t\taction('changeToIndeterminate')(\n\t\t\tevent,\n\t\t\t'checked: true, indeterminate: true'\n\t\t);\n\t};\n\n\tchangeToCheck = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Checked',\n\t\t\tchecked: true,\n\t\t\tindeterminate: false,\n\t\t});\n\t\taction('changeToCheck')(event, 'checked: true, indeterminate: false');\n\t};\n\n\tchangeToUnChecked = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Unchecked',\n\t\t\tchecked: false,\n\t\t\tindeterminate: false,\n\t\t});\n\t\taction('changeToUnChecked')(event, 'checked: false, indeterminate: false');\n\t};\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button onClick={this.changeToIndeterminate} label=\"Indeterminate\" />\n\t\t\t\t<Button onClick={this.changeToCheck} label=\"Check\" />\n\t\t\t\t<Button onClick={this.changeToUnChecked} label=\"Uncheck\" />\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Current State:</strong> {this.state.currentStateHelper}\n\t\t\t\t</p>\n\t\t\t\t<Checkbox\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\tlabel: 'Checkbox (indeterminate)',\n\t\t\t\t\t}}\n\t\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\t\tname=\"checkbox-example-standard-indeterminate\"\n\t\t\t\t\tchecked={this.state.checked}\n\t\t\t\t\tindeterminate={this.state.indeterminate}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<div className=\"slds-box slds-text-longform slds-m-top--large\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis example has an <em>indeterminate</em> checkbox.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIt is set by providing the <code>indeterminate</code> prop as{' '}\n\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t<strong>true</strong>\n\t\t\t\t\t\t</code>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOnce it is clicked, there is no way to make it go <em>back</em> to\n\t\t\t\t\t\tthe indeterminate state,{' '}\n\t\t\t\t\t\t<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate#Checkbox_radio_button\">\n\t\t\t\t\t\t\tit must be done programatically, through JavaScript\n\t\t\t\t\t\t</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nstoriesOf(FORMS_CHECKBOX, module)\n\t.addDecorator((getStory) => (\n\t\t<div className=\"slds-p-around--medium\">\n\t\t\t<IconSettings iconPath=\"/assets/icons\">{getStory()}</IconSettings>\n\t\t</div>\n\t))\n\t.add('Checkbox (default, indeterminate, required, disabled', () => (\n\t\t<DefaultCheckbox />\n\t))\n\t.add('Checkbox (assistive text)', () => (\n\t\t<div>\n\t\t\t<Checkbox\n\t\t\t\tassistiveText={{\n\t\t\t\t\tlabel: `This is my checkbox.\n\t\t\t\t\t\t\tThere are many like it, but this one is mine.\n\t\t\t\t\t\t\tMy checkbox is my best friend.\n\t\t\t\t\t\t\tIt is my life.\n\t\t\t\t\t\t\tI must master it as I must master my life.\n\t\t\t\t\t\t\tWithout me, my checkbox is useless. Without my checkbox, I am useless.\n\t\t\t\t\t\t\tI must make my checkbox true.\n\t\t\t\t\t\t\tI must make it truer than my radio button who is trying to... `,\n\t\t\t\t}}\n\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\tname=\"checkbox-example-base-assistiveText\"\n\t\t\t\tonChange={action('change')}\n\t\t\t/>\n\t\t\t<div className=\"slds-box slds-text-longform slds-m-top--large\">\n\t\t\t\t<p>\n\t\t\t\t\tThis example has assistive text. In Safari on Mac you can turn\n\t\t\t\t\tassistive text on by using the keyboard combination:\n\t\t\t\t\t<strong>Command + F5</strong>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tOnce you have enabled it, use your tab key to focus on the checkbox\n\t\t\t\t\tinput, and the system should read you what is supplied to the checkbox\n\t\t\t\t\tas the <code>assistiveText</code>\n\t\t\t\t\tproperty.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t))\n\t.add('Checkbox (checked)', () => (\n\t\t<Checkbox\n\t\t\tchecked\n\t\t\tlabel=\"Checkbox Label\"\n\t\t\tname=\"checkbox-example-base-checked\"\n\t\t\tonChange={action('change')}\n\t\t/>\n\t))\n\t.add('Checkbox (indeterminate)', () => <CheckboxIndeterminate />)\n\t.add('Checkbox Toggle', () => (\n\t\t<Checkbox\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (with error)', () => (\n\t\t<Checkbox\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-error\"\n\t\t\terrorText=\"This field has an error.\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (required)', () => (\n\t\t<Checkbox\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-required\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t\trequired\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (disabled)', () => (\n\t\t<Checkbox\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-disabled\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t\tdisabled\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (assistive text)', () => (\n\t\t<div>\n\t\t\t<Checkbox\n\t\t\t\tassistiveText={{\n\t\t\t\t\tlabel: `This is my checkbox.\n\t\t\t\t\t\t\tThere are many like it, but this one is mine.\n\t\t\t\t\t\t\tMy checkbox is my best friend.\n\t\t\t\t\t\t\tIt is my life.\n\t\t\t\t\t\t\tI must master it as I must master my life.\n\t\t\t\t\t\t\tWithout me, my checkbox is useless. Without my checkbox, I am useless.\n\t\t\t\t\t\t\tI must make my checkbox true.\n\t\t\t\t\t\t\tI must make it truer than my radio button who is trying to... `,\n\t\t\t\t}}\n\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\tname=\"checkbox-example-base-assistiveText\"\n\t\t\t\tonChange={action('change')}\n\t\t\t\tvariant=\"toggle\"\n\t\t\t/>\n\t\t\t<div className=\"slds-box slds-text-longform slds-m-top--large\">\n\t\t\t\t<p>\n\t\t\t\t\tThis example has assistive text. In Safari on Mac you can turn\n\t\t\t\t\tassistive text on by using the keyboard combination:\n\t\t\t\t\t<strong>Command + F5</strong>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tOnce you have enabled it, use your tab key to focus on the checkbox\n\t\t\t\t\tinput, and the system should read you what is supplied to the checkbox\n\t\t\t\t\tas the <code>assistiveText</code>\n\t\t\t\t\tproperty.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t))\n\t.add('Checkbox Toggle (checked)', () => (\n\t\t<Checkbox\n\t\t\tchecked\n\t\t\tlabel=\"Checkbox Label\"\n\t\t\tname=\"checkbox-example-toggle-checked\"\n\t\t\tonChange={action('change')}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t));\n"],"file":"storybook-stories.js"}