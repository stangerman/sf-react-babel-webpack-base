{"version":3,"sources":["../../../.tmp-es/components/filter/index.jsx"],"names":["React","createReactClass","PropTypes","assign","classNames","shortid","checkProps","Button","Popover","FILTER","Filter","displayName","propTypes","align","oneOf","assistiveText","shape","editFilter","string","editFilterHeading","removeFilter","children","node","className","oneOfType","array","object","isError","bool","id","isLocked","isNew","isPermanent","onChange","func","onRemove","onClick","popover","predicate","property","getDefaultProps","getInitialState","popoverIsOpen","props","isOpen","componentWillMount","generatedId","generate","getId","getCustomPopoverProps","popoverBody","handleChange","defaultPopoverProps","ariaLabelledby","body","heading","state","offset","undefined","onClose","handleClose","onRequestClose","position","triggerClassName","popoverProps","handleFilterClick","setState","event","handleRemove","render","assistiveTextEditFilter","assistiveTextEditFilterHeading","assistiveTextRemoveFilter","icon"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable no-script-url */\n\n// # Filter\n\n// Implements part of the [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### assign\nimport assign from 'lodash.assign';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\nimport Button from '../button';\nimport Popover from '../popover';\n\n// ## Constants\nimport { FILTER } from '../../utilities/constants';\n\n/**\n * A Filter is a popover with custom trigger. It can be used by [Panel Filtering](/components/panels/). Menus within a Filter Popover will need to not have \"portal mounts\" and be inline.\n */\nconst Filter = createReactClass({\n\tdisplayName: FILTER,\n\n\tpropTypes: {\n\t\t/**\n\t\t * Aligns the popover with the respective side of the trigger. That is `left` will place the `Popover` to the left of the Filter.\n\t\t */\n\t\talign: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * **Assistive text for accessibility**\n\t\t * * `removeFilter`: Assistive text for removing a filter. The default is `Remove Filter: this.props.property this.props.predicate`.\n\t\t * * `editFilter`: Assistive text for changing a filter.\n\t\t * * `editFilterHeading`: Assistive text for Popover heading.\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\teditFilter: PropTypes.string,\n\t\t\teditFilterHeading: PropTypes.string,\n\t\t\tremoveFilter: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Contents of popover. That is the dropdowns and inputs that set the filter criteria.\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * Custom CSS classes for `slds-filters__item` node. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Applies error state styling. Per filter error messages are outside this components.\n\t\t */\n\t\tisError: PropTypes.bool,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button. An `id` will be generated if none is supplied.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * If true, the filter will not display an editing popover when clicked.\n\t\t */\n\t\tisLocked: PropTypes.bool,\n\t\t/**\n\t\t * Applies new filter styling.\n\t\t */\n\t\tisNew: PropTypes.bool,\n\t\t/**\n\t\t * If true, the filter will not include a remove button.\n\t\t */\n\t\tisPermanent: PropTypes.bool,\n\t\t/**\n\t\t * Will be triggered when Done within the Popover is clicked. This is the place to update the filter props displayed. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t\t/**\n\t\t * Will be triggered when \"Remove Filter\" button is clicked. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n\t\t */\n\t\tonRemove: PropTypes.func,\n\t\t/**\n\t\t * Will be triggered when Filter is clicked. This is the place to close/open popover if a custom popover is passed in\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * A `Popover` component. The props from this popover will be merged and override any default props. This also allows a Filter's Popover dialog to be a controlled component. _Tested with Mocha framework._\n\t\t */\n\t\tpopover: PropTypes.node,\n\t\t/**\n\t\t * The criteria you are filtering for. For instance, if \"Hair Color is PURPLE\" is your filter, \"is PURPLE\" is your filter predicate.\n\t\t */\n\t\tpredicate: PropTypes.node,\n\t\t/**\n\t\t * The property you are filtering. For instance, if \"Hair Color is PURPLE\" is your filter, \"Hair Color\" is your filter property.\n\t\t */\n\t\tproperty: PropTypes.node,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\talign: 'left',\n\t\t\tassistiveText: {\n\t\t\t\teditFilter: 'Edit filter:',\n\t\t\t\teditFilterHeading: 'Choose filter criteria',\n\t\t\t},\n\t\t\tpredicate: 'New Filter',\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tpopoverIsOpen: this.props.popover\n\t\t\t\t? this.props.popover.props.isOpen\n\t\t\t\t: false,\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\tthis.generatedId = shortid.generate();\n\t\tcheckProps(FILTER);\n\t},\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t},\n\n\tgetCustomPopoverProps ({ assistiveText }) {\n\t\t/*\n\t\t * Generate the popover props based on passed in popover props. Using the default behavior if not provided by passed in popover\n\t\t */\n\t\tconst popoverBody = (\n\t\t\t<div>\n\t\t\t\t<h4\n\t\t\t\t\tclassName=\"slds-assistive-text\"\n\t\t\t\t\tid={`${this.getId()}-popover-heading`}\n\t\t\t\t>\n\t\t\t\t\t{assistiveText.editFilterHeading}\n\t\t\t\t</h4>\n\t\t\t\t{this.props.children}\n\t\t\t\t<div className=\"slds-m-top--small slds-text-align--right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"slds-col--bump-left\"\n\t\t\t\t\t\tlabel=\"Done\"\n\t\t\t\t\t\tonClick={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\tconst defaultPopoverProps = {\n\t\t\tariaLabelledby: `${this.getId()}-popover-heading`,\n\t\t\talign: this.props.align,\n\t\t\tbody: popoverBody,\n\t\t\theading: '',\n\t\t\tid: this.getId(),\n\t\t\tisOpen: this.state.popoverIsOpen,\n\t\t\t// MAGIC NUMBERS - REMOVE/REDESIGN WHEN DESIGN FOR RIGHT-ALIGNED FILTERS ARE ADDED TO SLDS\n\t\t\toffset: this.props.align === 'right' ? '0px -35px' : undefined,\n\t\t\tonClose: this.handleClose,\n\t\t\tonRequestClose: this.handleClose,\n\t\t\tposition: 'overflowBoundaryElement',\n\t\t\ttriggerClassName: 'slds-grow',\n\t\t};\n\n\t\t/* Mixin passed popover's props if there is any to override the default popover props */\n\t\tconst popoverProps = assign(\n\t\t\tdefaultPopoverProps,\n\t\t\tthis.props.popover ? this.props.popover.props : {}\n\t\t);\n\t\tdelete popoverProps.children;\n\t\treturn popoverProps;\n\t},\n\n\thandleFilterClick () {\n\t\tthis.setState({ popoverIsOpen: true });\n\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick();\n\t\t}\n\t},\n\n\thandleClose () {\n\t\tthis.setState({ popoverIsOpen: false });\n\t},\n\n\thandleChange (event) {\n\t\tthis.setState({ popoverIsOpen: false });\n\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(event, { id: this.getId() });\n\t\t}\n\t},\n\n\thandleRemove (event) {\n\t\tif (this.props.onRemove) {\n\t\t\tthis.props.onRemove(event, { id: this.getId() });\n\t\t}\n\t},\n\n\trender () {\n\t\t/* Remove at next breaking change */\n\t\tconst assistiveText = {\n\t\t\teditFilter:\n\t\t\t\tthis.props.assistiveTextEditFilter || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.editFilter,\n\t\t\teditFilterHeading:\n\t\t\t\tthis.props.assistiveTextEditFilterHeading || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.editFilterHeading,\n\t\t\tremoveFilter:\n\t\t\t\tthis.props.assistiveTextRemoveFilter || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.removeFilter ||\n\t\t\t\t`Remove Filter: ${this.props.property} ${this.props.predicate}`,\n\t\t};\n\n\t\t/* TODO: Button wrapper for property and predictate should be transitioned to `Button` component. `Button` needs to take custom children first though. */\n\t\tconst popoverProps = this.getCustomPopoverProps({ assistiveText });\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-filters__item',\n\t\t\t\t\t'slds-grid',\n\t\t\t\t\t'slds-grid--vertical-align-center',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-locked': this.props.isLocked,\n\t\t\t\t\t\t'slds-is-new': this.props.isNew,\n\t\t\t\t\t\t'slds-has-error': this.props.isError,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{!this.props.isLocked && (this.props.children || this.props.popover) ? (\n\t\t\t\t\t<Popover {...popoverProps}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"slds-button--reset slds-grow slds-has-blur-focus\"\n\t\t\t\t\t\t\tonClick={this.handleFilterClick}\n\t\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\t\tthis.props.isError ? `${this.getId()}-error` : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{assistiveText.editFilter}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{this.props.property ? (\n\t\t\t\t\t\t\t\t<p className=\"slds-text-body--small\">{this.props.property}</p>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<p>{this.props.predicate}</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Popover>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\tthis.props.isError ? `${this.getId()}-error` : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName=\"slds-button--reset slds-grow slds-has-blur-focus\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className=\"slds-text-body--small\">{this.props.property}</p>\n\t\t\t\t\t\t<p>{this.props.predicate}</p>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{// Remove button\n\t\t\t\t\t!this.props.isPermanent && !this.props.isLocked ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: assistiveText.removeFilter }}\n\t\t\t\t\t\t\thint\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\t\ticonVariant=\"bare\"\n\t\t\t\t\t\t\tonClick={this.handleRemove}\n\t\t\t\t\t\t\ttitle={assistiveText.removeFilter}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default Filter;\n"],"file":"index.js"}