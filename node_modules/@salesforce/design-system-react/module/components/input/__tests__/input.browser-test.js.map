{"version":3,"sources":["../../../../.tmp-es/components/input/__tests__/input.browser-test.jsx"],"names":["React","ReactDOM","expect","assign","TestUtils","Input","Icon","InputIcon","IconSettings","findRenderedDOMComponentWithTag","scryRenderedDOMComponentsWithTag","findRenderedDOMComponentWithClass","describe","defaultProps","placeholder","body","renderInput","instance","document","createElement","appendChild","render","removeInput","unmountComponentAtNode","removeChild","createInput","props","getInput","component","wrapper","input","label","beforeEach","id","afterEach","it","className","to","include","textContent","equal","getAttribute","be","ok","labelForTag","inputId","assistiveText","readOnly","isStatic","disabled","component1","component2","input1","input2","not","error","required","errorText","inputDescribedby","errorId","elementControl","leftButton","iconAssistiveText","clickCallback","sinon","spy","iconLeft","innerHTML","indexOf","below","Simulate","click","calledOnce","true","iconRight","above","getElementsByTagName","spinner","hasSpinner","spinnerId","fixedTextLeft"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-render-return-value */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { expect } from 'chai';\nimport assign from 'lodash.assign';\nimport TestUtils from 'react-addons-test-utils';\n\nimport Input from '../../input';\nimport Icon from '../../icon';\nimport InputIcon from '../../icon/input-icon';\nimport IconSettings from '../../icon-settings';\n\nconst {\n\tfindRenderedDOMComponentWithTag,\n\tscryRenderedDOMComponentsWithTag,\n\tfindRenderedDOMComponentWithClass,\n} = TestUtils;\n\ndescribe('SLDSInput', () => {\n\tconst defaultProps = {\n\t\tplaceholder: 'Placeholder Text',\n\t};\n\n\tlet body;\n\n\tconst renderInput = (instance) => {\n\t\tbody = document.createElement('div');\n\t\tdocument.body.appendChild(body);\n\t\treturn ReactDOM.render(\n\t\t\t<IconSettings iconPath=\"/assets/icons\">{instance}</IconSettings>,\n\t\t\tbody\n\t\t);\n\t};\n\n\tfunction removeInput () {\n\t\tReactDOM.unmountComponentAtNode(body);\n\t\tdocument.body.removeChild(body);\n\t}\n\n\tconst createInput = (props) =>\n\t\tReact.createElement(Input, assign({}, defaultProps, props));\n\tconst getInput = (props) => renderInput(createInput(props));\n\n\tdescribe('Standard Input with Label', () => {\n\t\tlet component;\n\t\tlet wrapper;\n\t\tlet input;\n\t\tlet label;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({ label: 'Input Label', id: 'custom-id' });\n\t\t\twrapper = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element'\n\t\t\t);\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t\tlabel = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__label'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('is wrapped in div with class \"slds-form-element\"', () => {\n\t\t\texpect(wrapper.className).to.include('slds-form-element');\n\t\t});\n\n\t\tit('renders label', () => {\n\t\t\texpect(label.textContent).to.equal('Input Label');\n\t\t});\n\n\t\tit('renders input element with class \"slds-input\"', () => {\n\t\t\texpect(input.className).to.include('slds-input');\n\t\t});\n\n\t\tit('has an id', () => {\n\t\t\texpect(input.getAttribute('id')).to.be.ok;\n\t\t});\n\n\t\tit('can pass custom id', () => {\n\t\t\texpect(input.getAttribute('id')).to.equal('custom-id');\n\t\t});\n\n\t\tit('renders placeholder text', () => {\n\t\t\texpect(input.getAttribute('placeholder')).to.equal('Placeholder Text');\n\t\t});\n\n\t\tit('has associated label for tag pointing to id of input', () => {\n\t\t\tconst labelForTag = label.getAttribute('for');\n\t\t\tconst inputId = input.getAttribute('id');\n\t\t\texpect(labelForTag).to.equal(inputId);\n\t\t});\n\t});\n\n\tdescribe('Input without Assistive Text Label', () => {\n\t\tlet component;\n\t\tlet label;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({ assistiveText: { label: 'Assistive Label' } });\n\t\t\tlabel = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__label'\n\t\t\t);\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('renders label (assitive)', () => {\n\t\t\texpect(label.textContent).to.equal('Assistive Label');\n\t\t});\n\n\t\tit('label has class \"slds-assistive-text\"', () => {\n\t\t\texpect(label.className).to.include('slds-assistive-text');\n\t\t});\n\n\t\tit('has associated label for tag pointing to id of input', () => {\n\t\t\tconst labelForTag = label.getAttribute('for');\n\t\t\tconst inputId = input.getAttribute('id');\n\t\t\texpect(labelForTag).to.equal(inputId);\n\t\t});\n\t});\n\n\tdescribe('Read Only Input', () => {\n\t\tlet component;\n\t\tlet label;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({ label: 'Input Label', readOnly: true });\n\t\t\tlabel = findRenderedDOMComponentWithTag(component, 'label');\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('label has class \"slds-form-element__label\"', () => {\n\t\t\texpect(label.className).to.include('slds-form-element__label');\n\t\t});\n\n\t\tit('input has attribute \"readonly\"', () => {\n\t\t\texpect(input.getAttribute('readonly')).to.equal('');\n\t\t});\n\t});\n\n\tdescribe('Static Input', () => {\n\t\tlet component;\n\t\tlet label;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({ label: 'Input Label', isStatic: true });\n\t\t\tlabel = scryRenderedDOMComponentsWithTag(component, 'span')[0];\n\t\t\tinput = scryRenderedDOMComponentsWithTag(component, 'span')[1];\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('label is a span and has class \"slds-form-element__label\"', () => {\n\t\t\texpect(label.className).to.include('slds-form-element__label');\n\t\t});\n\n\t\tit('input is a span and has class \"slds-form-element__static\"', () => {\n\t\t\texpect(input.className).to.include('slds-form-element__static');\n\t\t});\n\t});\n\n\tdescribe('Disabled Input', () => {\n\t\tlet component;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({ label: 'Input Label', disabled: true });\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('input has attribute \"disabled\"', () => {\n\t\t\texpect(input.getAttribute('disabled')).to.equal('');\n\t\t});\n\t});\n\n\tdescribe('Multiple Inputs', () => {\n\t\tlet component1;\n\t\tlet component2;\n\t\tlet input1;\n\t\tlet input2;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent1 = getInput({ label: 'Input One' });\n\t\t\tcomponent2 = getInput({ label: 'Input Two' });\n\t\t\tinput1 = findRenderedDOMComponentWithTag(component1, 'input');\n\t\t\tinput2 = findRenderedDOMComponentWithTag(component2, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('each input has unique generated id', () => {\n\t\t\texpect(input1.getAttribute('id')).to.not.equal(input2.getAttribute('id'));\n\t\t});\n\t});\n\n\tdescribe('Required Input in Error State', () => {\n\t\tlet component;\n\t\tlet wrapper;\n\t\tlet error;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\tlabel: 'Input Label',\n\t\t\t\trequired: true,\n\t\t\t\terrorText: 'Error Message',\n\t\t\t});\n\t\t\twrapper = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element'\n\t\t\t);\n\t\t\terror = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__help'\n\t\t\t);\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('input wrapper contains an <abbr> that has class \"slds-required\"', () => {\n\t\t\texpect(\n\t\t\t\tfindRenderedDOMComponentWithTag(component, 'abbr').className\n\t\t\t).to.include('slds-required');\n\t\t});\n\n\t\tit('input wrapper has class \"slds-has-error\"', () => {\n\t\t\texpect(wrapper.className).to.include('slds-has-error');\n\t\t});\n\n\t\tit('renders error message', () => {\n\t\t\texpect(error.textContent).to.equal('Error Message');\n\t\t});\n\n\t\tit('has associated aria-describedby pointing to id of error message', () => {\n\t\t\tconst inputDescribedby = input.getAttribute('aria-describedby');\n\t\t\tconst errorId = error.getAttribute('id');\n\t\t\texpect(inputDescribedby).to.equal(errorId);\n\t\t});\n\t});\n\n\tdescribe('Input with Left Clickable Icon', () => {\n\t\tlet component;\n\t\tlet elementControl;\n\t\tlet leftButton;\n\t\tlet iconAssistiveText;\n\n\t\tconst clickCallback = sinon.spy();\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\ticonLeft: (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText=\"Passed assistive text to icon\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tonClick={clickCallback}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t});\n\t\t\tleftButton = findRenderedDOMComponentWithTag(component, 'button');\n\t\t\ticonAssistiveText = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-assistive-text'\n\t\t\t);\n\t\t\telementControl = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__control'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('element control has class \"slds-input-has-icon\"', () => {\n\t\t\texpect(elementControl.className).to.include('slds-input-has-icon');\n\t\t});\n\n\t\tit('passes \"assitiveText\" down to icon', () => {\n\t\t\texpect(iconAssistiveText.textContent).to.equal(\n\t\t\t\t'Passed assistive text to icon'\n\t\t\t);\n\t\t});\n\n\t\tit('icon renders button BEFORE input in DOM', () => {\n\t\t\tconst render = elementControl.innerHTML;\n\t\t\texpect(render.indexOf('<button')).to.be.below(render.indexOf('<input'));\n\t\t});\n\n\t\tit('icon can be clicked', () => {\n\t\t\tTestUtils.Simulate.click(leftButton);\n\t\t\texpect(clickCallback.calledOnce).to.be.true;\n\t\t});\n\t});\n\n\tdescribe('Input with Right Clickable Icon', () => {\n\t\tlet component;\n\t\tlet elementControl;\n\t\tlet leftButton;\n\n\t\tconst clickCallback = sinon.spy();\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\ticonRight: (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText=\"Passed assistive text to icon\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tonClick={clickCallback}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t});\n\t\t\tleftButton = findRenderedDOMComponentWithTag(component, 'button');\n\t\t\telementControl = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__control'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('element control has class \"slds-input-has-icon\"', () => {\n\t\t\texpect(elementControl.className).to.include('slds-input-has-icon');\n\t\t});\n\n\t\tit('icon renders button AFTER input in DOM', () => {\n\t\t\tconst render = elementControl.innerHTML;\n\t\t\texpect(render.indexOf('<button')).to.be.above(render.indexOf('<input'));\n\t\t});\n\n\t\tit('icon can be clicked', () => {\n\t\t\tTestUtils.Simulate.click(leftButton);\n\n\t\t\texpect(clickCallback.calledOnce).to.be.true;\n\t\t});\n\t});\n\n\tdescribe('Input with Non-Clickable Icon', () => {\n\t\tlet component;\n\t\tlet elementControl;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\ticonRight: <Icon name=\"search\" category=\"utility\" />,\n\t\t\t});\n\t\t\telementControl = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__control'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('button tag does not exist', () => {\n\t\t\texpect(elementControl.getElementsByTagName('button')[0]).to.not.be.ok;\n\t\t});\n\t});\n\n\tdescribe('Input with Loading Spinner Icon', () => {\n\t\tlet component;\n\t\tlet spinner;\n\t\tlet input;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\tassistiveText: { label: 'Passed assistive text to icon' },\n\t\t\t\thasSpinner: true,\n\t\t\t\ticonRight: (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText=\"Passed assistive text to icon\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tid: 'unique-id-4',\n\t\t\t\tlabel: 'Input Label',\n\t\t\t});\n\t\t\tspinner = findRenderedDOMComponentWithClass(component, 'slds-spinner');\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('renders loading spinner icon', () => {\n\t\t\texpect(spinner).to.be.ok;\n\t\t});\n\n\t\tit('input aria-describedby points to id of spinner)', () => {\n\t\t\tconst spinnerId = spinner.getAttribute('id');\n\t\t\tconst inputDescribedby = input.getAttribute('aria-describedby');\n\t\t\texpect(inputDescribedby).to.include(spinnerId);\n\t\t});\n\n\t\tit('input aria-describedby points to id of spinner AND id of error message)', () => {\n\t\t\tconst spinnerId = spinner.getAttribute('id');\n\t\t\tconst inputDescribedby = input.getAttribute('aria-describedby');\n\t\t\texpect(inputDescribedby).to.include(spinnerId);\n\t\t});\n\t});\n\n\tdescribe('Input with Loading Spinner Icon & Error', () => {\n\t\tlet component;\n\t\tlet spinner;\n\t\tlet input;\n\t\tlet error;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\tassistiveText: { label: 'Passed assistive text to icon' },\n\t\t\t\trequired: true,\n\t\t\t\terrorText: 'Error Message',\n\t\t\t\thasSpinner: true,\n\t\t\t\ticonRight: (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText=\"Passed assistive text to icon\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tid: 'unique-id-4',\n\t\t\t\tlabel: 'Input Label',\n\t\t\t});\n\t\t\tspinner = findRenderedDOMComponentWithClass(component, 'slds-spinner');\n\t\t\tinput = findRenderedDOMComponentWithTag(component, 'input');\n\t\t\terror = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__help'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('input aria-describedby points to id of spinner AND id of error message)', () => {\n\t\t\tconst errorId = error.getAttribute('id');\n\t\t\tconst spinnerId = spinner.getAttribute('id');\n\t\t\tconst inputDescribedby = input.getAttribute('aria-describedby');\n\t\t\texpect(inputDescribedby).to.equal(`${spinnerId} ${errorId}`);\n\t\t});\n\t});\n\n\tdescribe('Input with Fixed Left Text', () => {\n\t\tlet component;\n\t\tlet fixedTextLeft;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getInput({\n\t\t\t\tfixedTextLeft: '$',\n\t\t\t\tid: 'unique-id-5',\n\t\t\t\tlabel: 'Input Label',\n\t\t\t});\n\t\t\tfixedTextLeft = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__addon'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveInput();\n\t\t});\n\n\t\tit('renders fixed text node', () => {\n\t\t\texpect(fixedTextLeft).to.be.ok;\n\t\t});\n\n\t\tit('renders fixed text node content', () => {\n\t\t\texpect(fixedTextLeft.textContent).to.equal('$');\n\t\t});\n\t});\n});\n"],"file":"input.browser-test.js"}