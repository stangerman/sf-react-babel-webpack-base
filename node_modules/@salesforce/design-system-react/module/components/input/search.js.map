{"version":3,"sources":["../../../.tmp-es/components/input/search.jsx"],"names":["React","PropTypes","Input","InputIcon","checkProps","KEYS","EventUtil","FORMS_SEARCH","handleKeyDown","event","onSearch","keyCode","ENTER","trapImmediate","defaultProps","assistiveText","Search","clearable","onClear","placeholder","props","label","icon","displayName","propTypes","shape","string","bool","func"],"mappings":";;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC1C,MAAID,MAAME,OAAN,KAAkBN,KAAKO,KAA3B,EAAkC;AACjCN,cAAUO,aAAV,CAAwBJ,KAAxB;AACAC,aAASD,KAAT;AACA;AACD,CALD;;AAOA,IAAMK,eAAe;AACpBC,iBAAe;AADK,CAArB;AAIA;;;;AAGA,IAAMC,SAAS,SAATA,MAAS,OAA6D;AAAA,MAA1DC,SAA0D,QAA1DA,SAA0D;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCR,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BS,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAC3EhB,aAAWG,YAAX,EAAyBa,KAAzB;AACA,MAAML,gBACL,OAAOK,MAAML,aAAb,KAA+B,QAA/B,GACGK,MAAML,aADT,GAEG,kBACED,aAAaC,aADf,EAEEK,MAAML,aAFR,EAGAM,KANJ;AAOA,SACC,oBAAC,KAAD;AACC,mBAAe;AAAEA,aAAON;AAAT,KADhB;AAEC,cACC,oBAAC,SAAD;AACC,qBAAe;AAAEO,cAAM;AAAR,OADhB;AAEC,gBAAS,SAFV;AAGC,YAAK,QAHN;AAIC,eAASZ;AAJV,MAHF;AAUC,eACCO,YACC,oBAAC,SAAD;AACC,qBAAe;AAAEK,cAAM;AAAR,OADhB;AAEC,gBAAS,SAFV;AAGC,YAAK,OAHN;AAIC,eAASJ;AAJV,MADD,GAOI,IAlBN;AAoBC,eAAWR,WAAW,UAACD,KAAD;AAAA,aAAWD,cAAcC,KAAd,EAAqBC,QAArB,CAAX;AAAA,KAAX,GAAuD,IApBnE;AAqBC,iBAAaS;AArBd,KAsBKC,KAtBL,EADD;AA0BA,CAnCD;;AAqCAJ,OAAOO,WAAP,GAAqBhB,YAArB;AAEAS,OAAOQ,SAAP,GAAmB;AAClB;;;;;AAKAT,iBAAed,UAAUwB,KAAV,CAAgB;AAC9BJ,WAAOpB,UAAUyB;AADa,GAAhB,CANG;;AASlB;;;AAGAT,aAAWhB,UAAU0B,IAZH;;AAalB;;;AAGAT,WAASjB,UAAU2B,IAhBD;;AAiBlB;;;AAGAlB,YAAUT,UAAU2B,IApBF;;AAqBlB;;;AAGAT,eAAalB,UAAUyB;AAxBL,CAAnB;AA2BAV,OAAOF,YAAP,GAAsBA,YAAtB;AAEA,eAAeE,MAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Search Component\n\n// Wraps the input to default to a search style.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ## Children\nimport Input from './index';\nimport InputIcon from '../icon/input-icon';\n\nimport checkProps from './check-props';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// ## Constants\nimport { FORMS_SEARCH } from '../../utilities/constants';\n\nconst handleKeyDown = (event, onSearch) => {\n\tif (event.keyCode === KEYS.ENTER) {\n\t\tEventUtil.trapImmediate(event);\n\t\tonSearch(event);\n\t}\n};\n\nconst defaultProps = {\n\tassistiveText: {},\n};\n\n/**\n * A `Search` is an `Input` which renders the search icon by default. It can be cleared, too. All `Input` props not specified as props already may be used with this component and will override defaults.\n */\nconst Search = ({ clearable, onClear, onSearch, placeholder, ...props }) => {\n\tcheckProps(FORMS_SEARCH, props);\n\tconst assistiveText =\n\t\ttypeof props.assistiveText === 'string'\n\t\t\t? props.assistiveText\n\t\t\t: {\n\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t...props.assistiveText,\n\t\t\t}.label;\n\treturn (\n\t\t<Input\n\t\t\tassistiveText={{ label: assistiveText }}\n\t\t\ticonLeft={\n\t\t\t\t<InputIcon\n\t\t\t\t\tassistiveText={{ icon: 'Search' }}\n\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tonClick={onSearch}\n\t\t\t\t/>\n\t\t\t}\n\t\t\ticonRight={\n\t\t\t\tclearable ? (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText={{ icon: 'Clear' }}\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname=\"clear\"\n\t\t\t\t\t\tonClick={onClear}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t}\n\t\t\tonKeyDown={onSearch ? (event) => handleKeyDown(event, onSearch) : null}\n\t\t\tplaceholder={placeholder}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\nSearch.displayName = FORMS_SEARCH;\n\nSearch.propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Assistive text to search input\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Adds a clear button to right side of the input\n\t */\n\tclearable: PropTypes.bool,\n\t/**\n\t * Triggers when the clear button is clicked\n\t */\n\tonClear: PropTypes.func,\n\t/**\n\t * This event fires when enter is pressed in the `input` or the search button is clicked.\n\t */\n\tonSearch: PropTypes.func,\n\t/**\n\t * Placeholder for the input\n\t */\n\tplaceholder: PropTypes.string,\n};\n\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n"],"file":"search.js"}