{"version":3,"sources":["../../../../.tmp-es/components/page-header/private/detail-block.jsx"],"names":["React","Component","PropTypes","classnames","PopoverTooltip","displayName","propTypes","className","string","label","oneOfType","element","content","truncate","bool","flavor","defaultProps","DetailBlock","props","state","showTooltip","_renderFieldTruncation","prevProps","fieldContent","fieldContentRef","isTruncated","scrollWidth","offsetWidth","setState","classes","_getClassNames","renderLabel","type","labelClasses","renderContent","field","renderContentWithTooltip"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport PopoverTooltip from '../../popover-tooltip';\n\nconst displayName = 'PageHeaderDetailRow';\nconst propTypes = {\n\t/**\n\t * Optional class name\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * label\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * The content property can be a string or a React element\n\t */\n\tcontent: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * Sets whether the fields truncate\n\t */\n\ttruncate: PropTypes.bool,\n\tflavor: PropTypes.string,\n};\n\nconst defaultProps = {\n\tlabel: '',\n\tcontent: '',\n};\n\nclass DetailBlock extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = { showTooltip: false };\n\t}\n\n\tcomponentDidMount () {\n\t\tthis._renderFieldTruncation();\n\t}\n\n\tcomponentDidUpdate (prevProps) {\n\t\tif (this.props.content !== prevProps.content) {\n\t\t\tthis._renderFieldTruncation();\n\t\t}\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\t_getClassNames (className, flavor) {\n\t\treturn classnames('slds-page-header__detail-block', className, {\n\t\t\t[`slds-size--${flavor}`]: flavor,\n\t\t});\n\t}\n\n\t_renderFieldTruncation () {\n\t\tconst fieldContent = this.fieldContentRef;\n\t\tconst isTruncated =\n\t\t\tfieldContent && fieldContent.scrollWidth > fieldContent.offsetWidth;\n\t\tif (isTruncated) {\n\t\t\tthis.setState({ showTooltip: true });\n\t\t} else {\n\t\t\tthis.setState({ showTooltip: false });\n\t\t}\n\t}\n\n\trender () {\n\t\tconst { className, content, flavor, label, truncate } = this.props;\n\n\t\tconst classes = this._getClassNames(className, flavor);\n\n\t\t/**\n\t\t * Render the label\n\t\t */\n\t\tconst renderLabel = () => {\n\t\t\tconst type = typeof label;\n\n\t\t\tif (type === 'string') {\n\t\t\t\tconst labelClasses = classnames('slds-text-title', {\n\t\t\t\t\t'slds-truncate': truncate,\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<p className={labelClasses} title={label}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</p>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t/**\n\t\t * Render the content\n\t\t */\n\t\tconst renderContent = () => {\n\t\t\tconst type = typeof content;\n\t\t\tif (type === 'string') {\n\t\t\t\tconst labelClasses = classnames('slds-text-body--regular', {\n\t\t\t\t\t'slds-truncate': truncate,\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<p\n\t\t\t\t\t\tref={(field) => {\n\t\t\t\t\t\t\tthis.fieldContentRef = field;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={labelClasses}\n\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</p>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t/**\n\t\t * Render the content with a tooltip (for content that truncates)\n\t\t */\n\t\tconst renderContentWithTooltip = () => {\n\t\t\tconst labelClasses = classnames('slds-text-body--regular', {\n\t\t\t\t'slds-truncate': truncate,\n\t\t\t});\n\t\t\treturn (\n\t\t\t\t<PopoverTooltip align=\"top\" content={content}>\n\t\t\t\t\t<p tabIndex=\"0\" className={labelClasses}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</p>\n\t\t\t\t</PopoverTooltip>\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<li className={classes}>\n\t\t\t\t{renderLabel()}\n\t\t\t\t{this.state.showTooltip ? renderContentWithTooltip() : renderContent()}\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nDetailBlock.displayName = displayName;\nDetailBlock.propTypes = propTypes;\nDetailBlock.defaultProps = defaultProps;\n\nexport default DetailBlock;\n"],"file":"detail-block.js"}