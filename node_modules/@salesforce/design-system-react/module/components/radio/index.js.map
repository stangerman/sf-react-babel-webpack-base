{"version":3,"sources":["../../../.tmp-es/components/radio/index.jsx"],"names":["React","PropTypes","shortid","classNames","RADIO","propTypes","string","checked","bool","defaultChecked","disabled","id","label","oneOfType","element","isRequired","name","onChange","func","value","variant","oneOf","defaultProps","Radio","props","generatedId","generate","getId","Component","displayName"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,IAAMC,YAAY;AACjB;;;AAGA,sBAAoBJ,UAAUK,MAJb;;AAKjB;;;AAGAC,WAASN,UAAUO,IARF;;AASjB;;;;;;AAMAC,kBAAgBR,UAAUO,IAfT;;AAgBjB;;;AAGAE,YAAUT,UAAUO,IAnBH;;AAoBjB;;;AAGAG,MAAIV,UAAUK,MAvBG;;AAwBjB;;;AAGAM,SAAOX,UAAUY,SAAV,CAAoB,CAACZ,UAAUK,MAAX,EAAmBL,UAAUa,OAA7B,CAApB,EAA2DC,UA3BjD;;AA4BjB;;;AAGAC,QAAMf,UAAUK,MA/BC;;AAgCjB;;;AAGAW,YAAUhB,UAAUiB,IAnCH;;AAoCjB;;;AAGAC,SAAOlB,UAAUK,MAvCA;;AAwCjB;;;AAGAc,WAASnB,UAAUoB,KAAV,CAAgB,CAAC,MAAD,EAAS,cAAT,CAAhB;AA3CQ,CAAlB;AA8CA,IAAMC,eAAe;AACpBF,WAAS;AADW,CAArB;AAIA;;;;;IAIMG,K;;;;;AACL,iBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AACnB,0GAAMA,KAAN;AACA,UAAKC,WAAL,GAAmBvB,QAAQwB,QAAR,EAAnB;AAFmB;AAGnB;;;;4BAEQ;AACR,aAAO,KAAKF,KAAL,CAAWb,EAAX,IAAiB,KAAKc,WAA7B;AACA;;;6BAES;AACT,aACC;AACC,mBAAWtB,WAAW;AACrB,wBAAc,KAAKqB,KAAL,CAAWJ,OAAX,KAAuB,MADhB;AAErB,2CACC,KAAKI,KAAL,CAAWJ,OAAX,KAAuB;AAHH,SAAX;AADZ,SAOC;AACC,cAAK,OADN;AAEC,YAAI,KAAKO,KAAL,EAFL;AAGC,cAAM,KAAKH,KAAL,CAAWR,IAHlB;AAIC,eAAO,KAAKQ,KAAL,CAAWL,KAJnB;AAKC,iBAAS,KAAKK,KAAL,CAAWjB,OALrB;AAMC,wBAAgB,KAAKiB,KAAL,CAAWf,cAN5B;AAOC,kBAAU,KAAKe,KAAL,CAAWP,QAPtB;AAQC,4BAAkB,KAAKO,KAAL,CAAW,kBAAX,CARnB;AASC,kBAAU,KAAKA,KAAL,CAAWd;AATtB,QAPD,EAkBE,KAAKc,KAAL,CAAWJ,OAAX,KAAuB,cAAvB,GACA;AAAO,mBAAU,0BAAjB;AAA4C,iBAAS,KAAKO,KAAL;AAArD,SACC;AAAM,mBAAU;AAAhB,SAAmC,KAAKH,KAAL,CAAWZ,KAA9C,CADD,CADA,GAKA;AAAO,mBAAU,mBAAjB;AAAqC,iBAAS,KAAKe,KAAL;AAA9C,SACC;AAAM,mBAAU;AAAhB,QADD,EAEC;AAAM,mBAAU;AAAhB,SAA4C,KAAKH,KAAL,CAAWZ,KAAvD,CAFD,CAvBF,CADD;AA+BA;;;;EA1CkBZ,MAAM4B,S;;AA6C1BL,MAAMM,WAAN,GAAoBzB,KAApB;AACAmB,MAAMlB,SAAN,GAAkBA,SAAlB;AACAkB,MAAMD,YAAN,GAAqBA,YAArB;AAEA,eAAeC,KAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport classNames from 'classnames';\n\nimport { RADIO } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * The ID of an element that describes this radio input. Often used for error messages.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * This is a controlled component. This radio is checked according to this value.\n\t */\n\tchecked: PropTypes.bool,\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present only to provide compatibility\n\t * with hybrid framework applications that are not entirely React. It should only be used in an application\n\t * without centralized state (Redux, Flux). \"Controlled components\" with centralized state is highly recommended.\n\t * See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultChecked: PropTypes.bool,\n\t/**\n\t * Disable this radio input.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * A unique ID that is used to associating a label to the `input` element. This ID is added to the `input` element.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * The string or element that is shown as both the title and the label for this radio input.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\t/**\n\t * The name of the radio input group.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires when the radio selection changes.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * The value of this radio input.\n\t */\n\tvalue: PropTypes.string,\n\t/**\n\t * Variant of the Radio button. Base is the default and button-group makes the radio button look like a normal button (should be a child of <RadioButtonGroup>).\n\t */\n\tvariant: PropTypes.oneOf(['base', 'button-group']),\n};\n\nconst defaultProps = {\n\tvariant: 'base',\n};\n\n/**\n * A radio input that can have a single input checked at any one time. Radios should be wrapped with\n * a [RadioGroup](/components/radio-group) or [RadioButtonGroup](/components/radio-button-group)\n */\nclass Radio extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'slds-radio': this.props.variant === 'base',\n\t\t\t\t\t'slds-button slds-radio_button':\n\t\t\t\t\t\tthis.props.variant === 'button-group',\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tname={this.props.name}\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tchecked={this.props.checked}\n\t\t\t\t\tdefaultChecked={this.props.defaultChecked}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\taria-describedby={this.props['aria-describedby']}\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t/>\n\t\t\t\t{this.props.variant === 'button-group' ? (\n\t\t\t\t\t<label className=\"slds-radio_button__label\" htmlFor={this.getId()}>\n\t\t\t\t\t\t<span className=\"slds-radio_faux\">{this.props.label}</span>\n\t\t\t\t\t</label>\n\t\t\t\t) : (\n\t\t\t\t\t<label className=\"slds-radio__label\" htmlFor={this.getId()}>\n\t\t\t\t\t\t<span className=\"slds-radio_faux\" />\n\t\t\t\t\t\t<span className=\"slds-form-element__label\">{this.props.label}</span>\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nRadio.displayName = RADIO;\nRadio.propTypes = propTypes;\nRadio.defaultProps = defaultProps;\n\nexport default Radio;\n"],"file":"index.js"}