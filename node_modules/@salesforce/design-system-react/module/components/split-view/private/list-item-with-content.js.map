{"version":3,"sources":["../../../../.tmp-es/components/split-view/private/list-item-with-content.jsx"],"names":["React","PropTypes","classNames","DISPLAY_NAME","propsTypes","assistiveText","shape","unreadItem","string","item","object","isRequired","multiple","bool","isFocused","isSelected","isUnread","events","onClick","func","listItemRef","defaultProps","listItemWithContent","ListItemContent","ListItemWithContent","event","props","e","unread","Component","displayName","name"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,IAAMC,eAAe,kCAArB;AAEP,IAAMC,aAAa;AAClB;;;;AAIAC,iBAAeJ,UAAUK,KAAV,CAAgB;AAC9BC,gBAAYN,UAAUO;AADQ,GAAhB,CALG;;AAQlB;;;AAGAC,QAAMR,UAAUS,MAAV,CAAiBC,UAXL;;AAYlB;;;AAGAC,YAAUX,UAAUY,IAfF;;AAgBlB;;;AAGAC,aAAWb,UAAUY,IAAV,CAAeF,UAnBR;;AAoBlB;;;AAGAI,cAAYd,UAAUY,IAAV,CAAeF,UAvBT;;AAwBlB;;;AAGAK,YAAUf,UAAUY,IA3BF;;AA4BlB;;;;;;;;;AASAI,UAAQhB,UAAUK,KAAV,CAAgB;AACvBY,aAASjB,UAAUkB,IAAV,CAAeR;AADD,GAAhB,CArCU;;AAwClB;;;AAGAS,eAAanB,UAAUkB;AA3CL,CAAnB;AA8CA,IAAME,eAAe;AACpBhB,iBAAe;AACdE,gBAAY;AADE,GADK;AAIpBU,UAAQ;AAJY,CAArB;AAOA;;;;;;AAKA,IAAMK,sBAAsB,SAAtBA,mBAAsB,CAACC,eAAD,EAAqB;AAAA,MAC1CC,mBAD0C;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,8BAQtCC,KARsC,EAQ/B;AACf,aAAKC,KAAL,CAAWT,MAAX,CAAkBC,OAAlB,CAA0BO,KAA1B,EAAiC;AAChChB,gBAAM,KAAKiB,KAAL,CAAWjB,IADe;AAEhCM,sBAAY,KAAKW,KAAL,CAAWX,UAFS;AAGhCC,oBAAU,KAAKU,KAAL,CAAWV;AAHW,SAAjC;AAKA;AAd8C;AAAA;AAAA,+BAgBrC;AACT,eAAO,KAAKU,KAAL,CAAWV,QAAX,GACN;AACC,qBAAU,uBADX;AAEC,iBAAO,KAAKU,KAAL,CAAWrB,aAAX,CAAyBE,UAFjC;AAGC,wBAAY,KAAKmB,KAAL,CAAWrB,aAAX,CAAyBE;AAHtC,WAKC;AAAM,qBAAU;AAAhB,oBALD,CADM,GAQH,IARJ;AASA;AA1B8C;AAAA;AAAA,+BA4BrC;AAAA;;AACT,eACC;AACC,qBAAWL,WAAW,4BAAX,EAAyC;AACnD,8BAAkB,KAAKwB,KAAL,CAAWV;AADsB,WAAzC,CADZ;AAIC,gBAAK;AAJN,WAMC;AACC,qBAAU,qEADX;AAEC,gBAAK,QAFN;AAGC,eAAK,KAAKU,KAAL,CAAWN,WAHjB;AAIC,2BACC,KAAKM,KAAL,CAAWd,QAAX,GACG,CAAC,CAAC,KAAKc,KAAL,CAAWX,UADhB,GAEG,KAAKW,KAAL,CAAWX,UAPhB;AASC,oBAAU,KAAKW,KAAL,CAAWZ,SAAX,GAAuB,CAAvB,GAA2B,CAAC,CATvC;AAUC,gBAAK,qBAVN,CAU4B;AAV5B;AAWC,mBAAS,iBAACa,CAAD;AAAA,mBAAO,MAAKT,OAAL,CAAaS,CAAb,CAAP;AAAA;AAXV,WAaE,KAAKC,MAAL,EAbF,EAcC,oBAAC,eAAD,EAAqB,KAAKF,KAA1B,CAdD,CAND,CADD;AAyBA;AAtD8C;;AAAA;AAAA,IACd1B,MAAM6B,SADQ;;AAAA,wBAC1CL,mBAD0C;AAAA;AAAA;AAAA;AAAA,qBAEvBrB,YAFuB,cAEPoB,gBAAgBO,WAAhB,IACvCP,gBAAgBQ,IADuB,IAEvC,WAJ8C;AAAA;AAAA,wBAC1CP,mBAD0C;AAAA;AAAA;AAAA;AAAA,WAK5BpB;AAL4B;AAAA,wBAC1CoB,mBAD0C;AAAA;AAAA;AAAA;AAAA,WAMzBH;AANyB;AAyDhD,SAAOG,mBAAP;AACA,CA1DD;;AA4DA,eAAeF,mBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const DISPLAY_NAME = 'SLDSSplitViewListItemWithContent';\n\nconst propsTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `unreadItem`: The unread indicator.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tunreadItem: PropTypes.string,\n\t}),\n\t/**\n\t * Item to be displayed\n\t */\n\titem: PropTypes.object.isRequired,\n\t/**\n\t * Allows multiple item to be selection\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * Shows the item as `focused`.\n\t */\n\tisFocused: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `selected`.\n\t */\n\tisSelected: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `unread`.\n\t */\n\tisUnread: PropTypes.bool,\n\t/**\n\t * **Event Callbacks**\n\t * * `onClick`: Called when the item is clicked.\n\t * * * Event\n\t * * * Meta data\n\t * * * * `item`: The original item.\n\t * * * * `isSelected`: Is the item selected.\n\t * * * * `isUnread`: Is the item unread.\n\t */\n\tevents: PropTypes.shape({\n\t\tonClick: PropTypes.func.isRequired,\n\t}),\n\t/**\n\t * Reference to the list item component\n\t */\n\tlistItemRef: PropTypes.func,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tunreadItem: 'Unread Item',\n\t},\n\tevents: {},\n};\n\n/**\n * HOC that wraps the list item content with selection and unread functionality.\n * @param ListItemContent {node} A React component\n * @returns {ListItemWithContent} A React component\n */\nconst listItemWithContent = (ListItemContent) => {\n\tclass ListItemWithContent extends React.Component {\n\t\tstatic displayName = `${DISPLAY_NAME}(${ListItemContent.displayName ||\n\t\t\tListItemContent.name ||\n\t\t\t'Component'})`;\n\t\tstatic propTypes = propsTypes;\n\t\tstatic defaultProps = defaultProps;\n\n\t\tonClick (event) {\n\t\t\tthis.props.events.onClick(event, {\n\t\t\t\titem: this.props.item,\n\t\t\t\tisSelected: this.props.isSelected,\n\t\t\t\tisUnread: this.props.isUnread,\n\t\t\t});\n\t\t}\n\n\t\tunread () {\n\t\t\treturn this.props.isUnread ? (\n\t\t\t\t<abbr\n\t\t\t\t\tclassName=\"slds-indicator_unread\"\n\t\t\t\t\ttitle={this.props.assistiveText.unreadItem}\n\t\t\t\t\taria-label={this.props.assistiveText.unreadItem}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-assistive-text\">‚óè</span>\n\t\t\t\t</abbr>\n\t\t\t) : null;\n\t\t}\n\n\t\trender () {\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName={classNames('slds-split-view__list-item', {\n\t\t\t\t\t\t'slds-is-unread': this.props.isUnread,\n\t\t\t\t\t})}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"slds-split-view__list-item-action slds-grow slds-has-flexi-truncate\"\n\t\t\t\t\t\trole=\"option\"\n\t\t\t\t\t\tref={this.props.listItemRef}\n\t\t\t\t\t\taria-selected={\n\t\t\t\t\t\t\tthis.props.multiple\n\t\t\t\t\t\t\t\t? !!this.props.isSelected\n\t\t\t\t\t\t\t\t: this.props.isSelected\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttabIndex={this.props.isFocused ? 0 : -1}\n\t\t\t\t\t\thref=\"javascript:void(0);\" // eslint-disable-line no-script-url\n\t\t\t\t\t\tonClick={(e) => this.onClick(e)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.unread()}\n\t\t\t\t\t\t<ListItemContent {...this.props} />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn ListItemWithContent;\n};\n\nexport default listItemWithContent;\n"],"file":"list-item-with-content.js"}