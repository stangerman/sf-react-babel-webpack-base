{"version":3,"sources":["../../../../.tmp-es/components/split-view/private/toggle-button.jsx"],"names":["React","PropTypes","classNames","Button","DISPLAY_NAME","TOGGLE_BUTTON_WIDTH","propsTypes","assistiveText","shape","toggleButtonOpen","string","isRequired","toggleButtonClose","ariaControls","isOpen","bool","events","onClick","func","defaultProps","SplitViewToggleButton","toggleAssistiveText","icon","displayName","propTypes"],"mappings":"AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,IAAMC,eAAe,2BAArB;AACP,OAAO,IAAMC,sBAAsB,SAA5B;AAEP,IAAMC,aAAa;AAClB;;;;;AAKAC,iBAAeN,UAAUO,KAAV,CAAgB;AAC9BC,sBAAkBR,UAAUS,MAAV,CAAiBC,UADL;AAE9BC,uBAAmBX,UAAUS,MAAV,CAAiBC;AAFN,GAAhB,CANG;;AAUlB;;;AAGAE,gBAAcZ,UAAUS,MAAV,CAAiBC,UAbb;;AAclB;;;AAGAG,UAAQb,UAAUc,IAAV,CAAeJ,UAjBL;;AAkBlB;;;;AAIAK,UAAQf,UAAUO,KAAV,CAAgB;AACvBS,aAAShB,UAAUiB,IAAV,CAAeP;AADD,GAAhB;AAtBU,CAAnB;AA2BA,IAAMQ,eAAe,EAArB;;AAEA,IAAMC,wBAAwB,SAAxBA,qBAAwB,OAKxB;AAAA,MAJLN,MAIK,QAJLA,MAIK;AAAA,MAHLP,aAGK,QAHLA,aAGK;AAAA,MAFLM,YAEK,QAFLA,YAEK;AAAA,MADLG,MACK,QADLA,MACK;AACL,MAAMK,sBAAsBP,SACzBP,cAAcE,gBADW,GAEzBF,cAAcK,iBAFjB;AAIA,SACC,oBAAC,MAAD;AACC,eAAWV,WACV,6DADU,EAEV;AAAE,sBAAgBY;AAAlB,KAFU,CADZ;AAKC,qBAAeA,MALhB;AAMC,qBAAeD,YANhB;AAOC,WAAOQ,mBAPR;AAQC,aAAQ,MART;AASC,cAAS,MATV;AAUC,kBAAa,SAVd;AAWC,cAAS,SAXV;AAYC,aAASL,OAAOC,OAZjB;AAaC,mBAAe;AAAEK,YAAMD;AAAR;AAbhB,IADD;AAiBA,CA3BD;;AA6BAD,sBAAsBG,WAAtB,GAAoCnB,YAApC;AACAgB,sBAAsBI,SAAtB,GAAkClB,UAAlC;AACAc,sBAAsBD,YAAtB,GAAqCA,YAArC;AAEA,eAAeC,qBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '../../button';\n\nexport const DISPLAY_NAME = 'SLDSSplitViewToggleButton';\nexport const TOGGLE_BUTTON_WIDTH = '0.75rem';\n\nconst propsTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `toggleButtonOpen`: The button used to open the split view.\n\t * * `toggleButtonClose`: The button used to close the split view.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttoggleButtonOpen: PropTypes.string.isRequired,\n\t\ttoggleButtonClose: PropTypes.string.isRequired,\n\t}),\n\t/**\n\t * Unique html id placed on the button for aria-controls\n\t */\n\tariaControls: PropTypes.string.isRequired,\n\t/**\n\t * Determines if the panel is open\n\t */\n\tisOpen: PropTypes.bool.isRequired,\n\t/**\n\t * **Event Callbacks**\n\t * * `onClick`: Called when the button is clicked.\n\t */\n\tevents: PropTypes.shape({\n\t\tonClick: PropTypes.func.isRequired,\n\t}),\n};\n\nconst defaultProps = {};\n\nconst SplitViewToggleButton = ({\n\tisOpen,\n\tassistiveText,\n\tariaControls,\n\tevents,\n}) => {\n\tconst toggleAssistiveText = isOpen\n\t\t? assistiveText.toggleButtonOpen\n\t\t: assistiveText.toggleButtonClose;\n\n\treturn (\n\t\t<Button\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-button slds-button_icon slds-split-view__toggle-button',\n\t\t\t\t{ 'slds-is-open': isOpen }\n\t\t\t)}\n\t\t\taria-expanded={isOpen}\n\t\t\taria-controls={ariaControls}\n\t\t\ttitle={toggleAssistiveText}\n\t\t\tvariant=\"base\"\n\t\t\ticonName=\"left\"\n\t\t\ticonCategory=\"utility\"\n\t\t\ticonSize=\"x-small\"\n\t\t\tonClick={events.onClick}\n\t\t\tassistiveText={{ icon: toggleAssistiveText }}\n\t\t/>\n\t);\n};\n\nSplitViewToggleButton.displayName = DISPLAY_NAME;\nSplitViewToggleButton.propTypes = propsTypes;\nSplitViewToggleButton.defaultProps = defaultProps;\n\nexport default SplitViewToggleButton;\n"],"file":"toggle-button.js"}