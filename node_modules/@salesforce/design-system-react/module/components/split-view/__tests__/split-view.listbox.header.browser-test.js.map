{"version":3,"sources":["../../../../.tmp-es/components/split-view/__tests__/split-view.listbox.header.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","render","sinon","IconSettings","SplitViewListbox","SORT_OPTIONS","use","listOptions","id","label","topRightText","bottomLeftText","bottomRightText","describe","component","WrappedComponent","props","mountComponent","options","labels","header","assistiveText","sort","sortedBy","descending","ascending","sortDirection","DOWN","events","onSort","spy","onSelect","event","selectedItems","setProps","selection","beforeEach","it","find","to","have","length","at","text","equal","prop","string","UP","undefined","simulate","called","be","true"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount, render } from 'enzyme';\nimport sinon from 'sinon';\n\nimport IconSettings from '../../../components/icon-settings';\nimport SplitViewListbox, {\n\tSORT_OPTIONS,\n} from '../../../components/split-view/listbox';\n\nchai.use(chaiEnzyme());\n\nconst listOptions = [\n\t{\n\t\tid: 'option1',\n\t\tlabel: 'Riley Shultz',\n\t\ttopRightText: '99',\n\t\tbottomLeftText: 'Biotech, Inc.',\n\t\tbottomRightText: 'Nurturing',\n\t},\n\t{\n\t\tid: 'option2',\n\t\tlabel: 'Jason A. - VP of Sales',\n\t\ttopRightText: '92',\n\t\tbottomLeftText: 'Case Management Solutions',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option3',\n\t\tlabel: 'Josh Smith',\n\t\ttopRightText: '90',\n\t\tbottomLeftText: 'Acme, Inc.',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option4',\n\t\tlabel: 'Bobby Tree',\n\t\ttopRightText: '89',\n\t\tbottomLeftText: 'Salesforce, Inc.',\n\t\tbottomRightText: 'Closing',\n\t},\n];\n\ndescribe('SLDSSplitView - Listbox header', () => {\n\tlet component;\n\n\tconst WrappedComponent = (props) => (\n\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t<SplitViewListbox {...props} />\n\t\t</IconSettings>\n\t);\n\n\tconst mountComponent = (props) => mount(<WrappedComponent {...props} />);\n\n\tconst props = {\n\t\toptions: listOptions,\n\t\tlabels: {\n\t\t\theader: 'test header',\n\t\t},\n\t\tassistiveText: {\n\t\t\tsort: {\n\t\t\t\tsortedBy: 'test sort by',\n\t\t\t\tdescending: 'test descending',\n\t\t\t\tascending: 'test ascending',\n\t\t\t},\n\t\t},\n\t\tsortDirection: SORT_OPTIONS.DOWN,\n\t\tevents: {\n\t\t\tonSort: sinon.spy(),\n\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t},\n\t\t},\n\t};\n\n\tbeforeEach(() => {\n\t\tcomponent = mountComponent(props);\n\t});\n\n\tit('should have a header', () => {\n\t\texpect(component.find('.slds-split-view__list-header')).to.have.length(1);\n\t});\n\n\tit('should not have a header when no label specified', () => {\n\t\tcomponent.setProps({ labels: {} });\n\t\texpect(component.find('.slds-split-view__list-header')).to.have.length(0);\n\t});\n\n\tit('should have test label', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t.at(1)\n\t\t\t\t.text()\n\t\t).to.equal('test header');\n\t});\n\n\tit('should have sort by assistive text', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t.at(0)\n\t\t\t\t.text()\n\t\t).to.equal('test sort by:');\n\t});\n\n\tdescribe('sort', () => {\n\t\tdescribe('direction', () => {\n\t\t\tit('should have a sort direction down icon', () => {\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header svg > use')\n\t\t\t\t\t\t.prop('xlinkHref')\n\t\t\t\t).to.have.string('arrowdown');\n\t\t\t});\n\n\t\t\tit('should have sort descending assistive text', () => {\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t\t\t.at(2)\n\t\t\t\t\t\t.text()\n\t\t\t\t).to.equal('- test descending');\n\t\t\t});\n\n\t\t\tit('should have a sort direction up icon', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: SORT_OPTIONS.UP });\n\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header svg > use')\n\t\t\t\t\t\t.prop('xlinkHref')\n\t\t\t\t).to.have.string('arrowup');\n\t\t\t});\n\n\t\t\tit('should have sort ascending assistive text', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: SORT_OPTIONS.UP });\n\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t\t\t.at(2)\n\t\t\t\t\t\t.text()\n\t\t\t\t).to.equal('- test ascending');\n\t\t\t});\n\n\t\t\tit('should not have a sort direction when no direction specified', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: undefined });\n\t\t\t\texpect(\n\t\t\t\t\tcomponent.find('.slds-split-view__list-header svg')\n\t\t\t\t).to.have.length(0);\n\t\t\t});\n\n\t\t\tit('should call onSort when the header is clicked', () => {\n\t\t\t\tcomponent.find('.slds-split-view__list-header a').simulate('click');\n\t\t\t\texpect(props.events.onSort.called).to.be.true;\n\t\t\t});\n\n\t\t\tit('should not be clickable when onSort not specified', () => {\n\t\t\t\tcomponent.setProps({ events: { onSelect: sinon.spy() } });\n\t\t\t\texpect(component.find('.slds-split-view__list-header a')).to.be.length(\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n});\n"],"file":"split-view.listbox.header.browser-test.js"}