{"version":3,"sources":["../../../../.tmp-es/components/split-view/__tests__/split-view.listbox.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","render","sinon","IconSettings","SplitViewListbox","use","listOptions","id","label","topRightText","bottomLeftText","bottomRightText","describe","component","WrappedComponent","props","mountComponent","expectItemFocused","value","anchors","find","forEach","item","index","get","tabIndex","to","equal","expectItemSelected","itemIndex","Array","isArray","includes","at","prop","be","true","false","it","options","selection","events","onSelect","spy","simulate","event","selectedItems","setProps","beforeEach","key","ctrlKey","multiple","metaKey","shiftKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount, render } from 'enzyme';\nimport sinon from 'sinon';\n\nimport IconSettings from '../../../components/icon-settings';\nimport SplitViewListbox from '../../../components/split-view/listbox';\n\nchai.use(chaiEnzyme());\n\nconst listOptions = [\n\t{\n\t\tid: 'option1',\n\t\tlabel: 'Riley Shultz',\n\t\ttopRightText: '99',\n\t\tbottomLeftText: 'Biotech, Inc.',\n\t\tbottomRightText: 'Nurturing',\n\t},\n\t{\n\t\tid: 'option2',\n\t\tlabel: 'Jason A. - VP of Sales',\n\t\ttopRightText: '92',\n\t\tbottomLeftText: 'Case Management Solutions',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option3',\n\t\tlabel: 'Josh Smith',\n\t\ttopRightText: '90',\n\t\tbottomLeftText: 'Acme, Inc.',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option4',\n\t\tlabel: 'Bobby Tree',\n\t\ttopRightText: '89',\n\t\tbottomLeftText: 'Salesforce, Inc.',\n\t\tbottomRightText: 'Closing',\n\t},\n];\n\ndescribe('SLDSSplitView - Listbox', () => {\n\tlet component;\n\n\tconst WrappedComponent = (props) => (\n\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t<SplitViewListbox {...props} />\n\t\t</IconSettings>\n\t);\n\n\tconst mountComponent = (props) => mount(<WrappedComponent {...props} />);\n\n\tconst expectItemFocused = (value) => {\n\t\tconst anchors = component.find('li > a');\n\n\t\tlistOptions.forEach((item, index) => {\n\t\t\texpect(anchors.get(index).tabIndex).to.equal(index === value ? 0 : -1);\n\t\t});\n\t};\n\n\tconst expectItemSelected = (value) => {\n\t\tconst itemIndex = Array.isArray(value) ? value : [value];\n\n\t\tconst anchors = component.find('li > a');\n\n\t\tlistOptions.forEach((item, index) => {\n\t\t\titemIndex.includes(index)\n\t\t\t\t? expect(anchors.at(index).prop('aria-selected')).to.be.true\n\t\t\t\t: expect(anchors.at(index).prop('aria-selected')).to.be.false;\n\t\t});\n\t};\n\n\tdescribe('When the component is mounted', () => {\n\t\tit('should focus the first selected item', () => {\n\t\t\tcomponent = mountComponent({\n\t\t\t\toptions: listOptions,\n\t\t\t\tselection: [listOptions[1]],\n\t\t\t\tevents: {\n\t\t\t\t\tonSelect: sinon.spy(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\texpectItemFocused(1);\n\t\t});\n\n\t\tit('should focus the first item when there is no selection', () => {\n\t\t\tcomponent = mountComponent({\n\t\t\t\toptions: listOptions,\n\t\t\t\tevents: {\n\t\t\t\t\tonSelect: sinon.spy(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\texpectItemFocused(0);\n\t\t});\n\t});\n\n\tdescribe('When a list item is selected', () => {\n\t\tdescribe('and single select only', () => {\n\t\t\tit('should focus the item that is clicked', () => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: () => {},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tcomponent\n\t\t\t\t\t.find('li > a')\n\t\t\t\t\t.at(2)\n\t\t\t\t\t.simulate('click');\n\n\t\t\t\texpectItemFocused(2);\n\t\t\t});\n\n\t\t\tit('should select the item that is clicked', () => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tcomponent\n\t\t\t\t\t.find('li > a')\n\t\t\t\t\t.at(2)\n\t\t\t\t\t.simulate('click');\n\n\t\t\t\texpectItemSelected(2);\n\t\t\t});\n\n\t\t\tdescribe('and using the keyboard', () => {\n\t\t\t\tbeforeEach(() => {\n\t\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\t\toptions: listOptions,\n\t\t\t\t\t\tselection: [listOptions[1]],\n\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdescribe('and \"ctrl a\" keyed', () => {\n\t\t\t\t\tit('should not select all list items', () => {\n\t\t\t\t\t\tcomponent\n\t\t\t\t\t\t\t.find('ul')\n\t\t\t\t\t\t\t.simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\t\texpectItemSelected([1]);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key up it should focus the previous item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowUp' });\n\t\t\t\t\texpectItemFocused(0);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key down it should focus the next item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowDown' });\n\t\t\t\t\texpectItemFocused(2);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key up it should select the previous item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowUp' });\n\t\t\t\t\texpectItemSelected(0);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key down it should select the next item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowDown' });\n\t\t\t\t\texpectItemSelected(2);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdescribe('and multiple select enabled', () => {\n\t\t\tbeforeEach(() => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\tmultiple: true,\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('should select multiple items when clicked and the metaKey is pressed', () => {\n\t\t\t\tconst anchors = component.find('li > a');\n\n\t\t\t\tanchors.at(2).simulate('click');\n\t\t\t\tanchors.at(3).simulate('click', { metaKey: true });\n\n\t\t\t\texpectItemSelected([2, 3]);\n\t\t\t});\n\n\t\t\tit('should select multiple items when clicked and the shiftKey is pressed', () => {\n\t\t\t\tconst anchors = component.find('li > a');\n\n\t\t\t\tanchors.at(1).simulate('click');\n\t\t\t\tanchors.at(3).simulate('click', { shiftKey: true });\n\n\t\t\t\texpectItemSelected([1, 2, 3]);\n\t\t\t});\n\n\t\t\tdescribe('and \"ctrl a\" keyed', () => {\n\t\t\t\tit('should select all list items', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\texpectItemSelected([0, 1, 2, 3]);\n\t\t\t\t});\n\n\t\t\t\tit('should de-select all list items when all the list items are already selected', () => {\n\t\t\t\t\tcomponent.setProps({ selection: listOptions });\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\texpectItemSelected([]);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n});\n"],"file":"split-view.listbox.browser-test.js"}