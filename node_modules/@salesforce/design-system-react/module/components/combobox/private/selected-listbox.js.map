{"version":3,"sources":["../../../../.tmp-es/components/combobox/private/selected-listbox.jsx"],"names":["React","PropTypes","classNames","isEqual","Pill","propTypes","activeOption","object","activeOptionIndex","number","assistiveText","shape","label","string","removePill","events","onClickPill","func","isRequired","onRequestFocus","onRequestFocusOnNextPill","onRequestFocusOnPreviousPill","onRequestRemove","id","isInline","bool","labels","remove","title","renderAtSelectionLength","selection","array","listboxHasFocus","variant","oneOf","defaultProps","SelectedListBox","props","length","selectedListboxLabel","map","option","renderIndex","setActiveBasedOnstateFromParent","listboxRenderedForFirstTime","active","icon","cloneElement","containerClassName","onBlur","onBlurPill","onClick","event","data","index","removeTitle","removePillTitle","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport isEqual from 'lodash.isequal';\n\nimport Pill from '../../utilities/pill';\n\nconst propTypes = {\n\t/*\n\t * The option object within the selection prop that should have focus.\n\t */\n\tactiveOption: PropTypes.object,\n\t/*\n\t * The index of the option object within the selection prop that should have focus.\n\t */\n\tactiveOptionIndex: PropTypes.number,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n\t * * `removePill`: Aids in keyboard interaction with Pills.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\tremovePill: PropTypes.string,\n\t}),\n\t/*\n\t * Callback called when pill is clicked, delete is pressed, or backspace is pressed.\n\t */\n\tevents: PropTypes.shape({\n\t\tonClickPill: PropTypes.func.isRequired,\n\t\tonRequestFocus: PropTypes.func.isRequired,\n\t\tonRequestFocusOnNextPill: PropTypes.func.isRequired,\n\t\tonRequestFocusOnPreviousPill: PropTypes.func.isRequired,\n\t\tonRequestRemove: PropTypes.func.isRequired,\n\t}),\n\t/**\n\t * HTML id for Combobox\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Adds inline (inside of input) styling\n\t */\n\tisInline: PropTypes.bool,\n\t/*\n\t * Pill Label\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\tremove: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t}),\n\t/**\n\t * Changes styles of the input. Currently `entity` is not supported.\n\t */\n\trenderAtSelectionLength: PropTypes.number,\n\t/**\n\t * Accepts an array of item objects.\n\t */\n\tselection: PropTypes.array,\n\t/**\n\t * Requests that the active option set focus on render\n\t */\n\tlistboxHasFocus: PropTypes.bool,\n\t/**\n\t * Changes styles of the input. Currently `entity` is not supported.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'inline-listbox', 'readonly']),\n};\n\nconst defaultProps = {\n\trenderAtSelectionLength: 1,\n};\n\nconst SelectedListBox = (props) =>\n\t(props.selection.length >= props.renderAtSelectionLength ? (\n\t\t<div // eslint-disable-line jsx-a11y/role-supports-aria-props\n\t\t\tid={`${props.id}-selected-listbox`}\n\t\t\trole=\"listbox\"\n\t\t\taria-orientation=\"horizontal\"\n\t\t>\n\t\t\t<ul\n\t\t\t\tclassName={classNames('slds-listbox', {\n\t\t\t\t\t'slds-listbox--inline': props.isInline,\n\t\t\t\t\t'slds-listbox_horizontal': !props.isInline,\n\t\t\t\t\t'slds-p-top_xxx-small': !props.isInline,\n\t\t\t\t})}\n\t\t\t\trole=\"group\"\n\t\t\t\taria-label={props.assistiveText.selectedListboxLabel}\n\t\t\t>\n\t\t\t\t{props.selection.map((option, renderIndex) => {\n\t\t\t\t\tconst setActiveBasedOnstateFromParent =\n\t\t\t\t\t\trenderIndex === props.activeOptionIndex &&\n\t\t\t\t\t\tisEqual(option, props.activeOption);\n\t\t\t\t\tconst listboxRenderedForFirstTime =\n\t\t\t\t\t\t(props.activeOptionIndex === -1 && renderIndex === 0) ||\n\t\t\t\t\t\t(props.variant === 'readonly' &&\n\t\t\t\t\t\t\tprops.selection.length !== 1 &&\n\t\t\t\t\t\t\trenderIndex === 0);\n\t\t\t\t\tconst active =\n\t\t\t\t\t\tsetActiveBasedOnstateFromParent || listboxRenderedForFirstTime;\n\t\t\t\t\tconst icon = option.icon\n\t\t\t\t\t\t? React.cloneElement(option.icon, {\n\t\t\t\t\t\t\tcontainerClassName: 'slds-pill__icon_container',\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\t\tclassName=\"slds-listbox__item\"\n\t\t\t\t\t\t\tkey={`${props.id}-list-item-${option.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Pill\n\t\t\t\t\t\t\t\tactive={active}\n\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\tremove: props.assistiveText.removePill,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonBlur: props.events.onBlurPill,\n\t\t\t\t\t\t\t\t\tonClick: (event, data) => {\n\t\t\t\t\t\t\t\t\t\tprops.events.onClickPill(event, {\n\t\t\t\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\t\t\t\tindex: renderIndex,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonRequestFocusOnNextPill:\n\t\t\t\t\t\t\t\t\t\tprops.events.onRequestFocusOnNextPill,\n\t\t\t\t\t\t\t\t\tonRequestFocusOnPreviousPill:\n\t\t\t\t\t\t\t\t\t\tprops.events.onRequestFocusOnPreviousPill,\n\t\t\t\t\t\t\t\t\tonRequestRemove: (event, data) => {\n\t\t\t\t\t\t\t\t\t\tprops.events.onRequestRemove(event, {\n\t\t\t\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\t\t\t\tindex: renderIndex,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonRequestFocus: props.events.onRequestFocus,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\teventData={{ option }}\n\t\t\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\t\t\tlabel: option.label,\n\t\t\t\t\t\t\t\t\tremoveTitle: props.labels.removePillTitle,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequestFocus={props.listboxHasFocus}\n\t\t\t\t\t\t\t\ttabIndex={active ? 0 : -1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t) : null);\n\nSelectedListBox.displayName = 'SelectedListBox';\nSelectedListBox.propTypes = propTypes;\nSelectedListBox.defaultProps = defaultProps;\n\nexport default SelectedListBox;\n"],"file":"selected-listbox.js"}