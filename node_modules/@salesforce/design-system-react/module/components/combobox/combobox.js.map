{"version":3,"sources":["../../../.tmp-es/components/combobox/combobox.jsx"],"names":["React","PropTypes","assign","find","reject","isEqual","findIndex","isBoolean","isFunction","classNames","shortid","Dialog","InnerInput","InputIcon","Menu","Label","SelectedListBox","KEYS","mapKeyEventCallbacks","checkProps","COMBOBOX","currentOpenDropdown","propTypes","assistiveText","shape","label","string","optionSelectedInMenu","removeSingleSelectedOption","removePill","selectedListboxLabel","className","oneOfType","array","object","classNameContainer","classNameMenu","classNameMenuSubHeader","events","onBlur","func","onChange","onClose","onFocus","onOpen","onRequestClose","onRequestOpen","onRequestRemoveSelectedOption","onSelect","onSubmit","errorText","hasStaticAlignment","bool","id","labels","node","multipleOptionsSelected","noOptionsFound","placeholder","placeholderReadOnly","removePillTitle","isOpen","inheritWidthOf","oneOf","menuItem","menuPosition","menuMaxWidth","multiple","options","isRequired","readOnlyMenuItemVisibleLength","predefinedOptionsOnly","required","selection","value","variant","defaultProps","Combobox","props","state","activeOption","undefined","activeOptionIndex","activeSelectedOption","activeSelectedOptionIndex","generatedId","generate","generatedErrorId","nextProps","index","item","setState","selectedOptionsRenderIsInitialRender","length","menuRenderer","isInline","disabled","getIsOpen","context","handleClose","handleOpen","getTargetElement","getId","role","subRenderParameters","multipleOrSingle","subRenders","base","renderBase","single","renderInlineMultiple","renderInlineSingle","readonly","renderReadOnlyMultiple","renderReadOnlySingle","variantExists","Component","offset","nextIndex","skipIndex","type","newIndex","hasNewIndex","inputRef","component","inputRendered","listboxHasFocus","event","handleRequestClose","setTimeout","requestOpenMenu","target","getIsActiveOption","handleSelect","option","callbacks","DOWN","callback","handleKeyDownDown","ENTER","handleInputSubmit","ESCAPE","UP","handleKeyDownUp","shiftKey","openDialog","handleNavigateListboxMenu","direction","offsets","next","previous","prevState","getNewActiveOptionIndex","isLastOptionAndRightIsPressed","isFirstOptionAndLeftIsPressed","newState","data","preventDefault","onlyOnePillAndInputExists","isReadOnlyAndTwoPillsExists","lastPillWasRemoved","focus","ref","activeSelectedOptionRef","newSelection","isSelected","singleSelectAndSelectedWasNotClicked","multiSelectAndSelectedWasNotClicked","isInlineSingleSelectionAndIsNotSelected","getErrorId","inputIconTitle","handleInputFocus","handleInputBlur","handleKeyDown","setInputRef","handleInputChange","getDialog","renderMenu","onBlurPill","handleBlurPill","onClickPill","handlePillClickListboxOfPills","onRequestFocus","handleRequestFocusListboxOfPills","onRequestFocusOnNextPill","handleNavigateListboxOfPills","onRequestFocusOnPreviousPill","onRequestRemove","handleRemoveSelectedOption","iconLeft","icon","cloneElement","containerClassName","buttonRef","menuVariant","clearActiveOption","contextTypes","iconPath","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/role-has-required-aria-props */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\nimport find from 'lodash.find';\nimport reject from 'lodash.reject';\nimport isEqual from 'lodash.isequal';\nimport findIndex from 'lodash.findindex';\n\nimport isBoolean from 'lodash.isboolean';\nimport isFunction from 'lodash.isfunction';\n\nimport classNames from 'classnames';\n\nimport shortid from 'shortid';\n\nimport Dialog from '../utilities/dialog';\nimport InnerInput from '../../components/input/private/inner-input';\nimport InputIcon from '../icon/input-icon';\nimport Menu from './private/menu';\nimport Label from '../forms/private/label';\nimport SelectedListBox from './private/selected-listbox';\n\nimport KEYS from '../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../utilities/key-callbacks';\n\nimport checkProps from './check-props';\n\nimport { COMBOBOX } from '../../utilities/constants';\n\nlet currentOpenDropdown;\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n\t * * `optionSelectedInMenu`: Added before selected menu items in Read-only variants (Picklists). The default is `Current Selection:`.\n\t * * `removeSingleSelectedOption`: Used by inline-listbox, single-select variant to remove the selected item (pill). This is a button with focus. The default is `Remove selected option`.\n\t * * `removePill`: Used by multiple selection Comboboxes to remove a selected item (pill). Focus is on the pill. This is not a button. The default  is `, Press delete or backspace to remove`.\n\t * * `selectedListboxLabel`: This is a label for the selected listbox. The grouping of pills for multiple selection Comboboxes. The default is `Selected Options:`.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\toptionSelectedInMenu: PropTypes.string,\n\t\tremoveSingleSelectedOption: PropTypes.string,\n\t\tremovePill: PropTypes.string,\n\t\tselectedListboxLabel: PropTypes.string,\n\t}),\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them.\n\t * This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need. _Tested with snapshot testing._\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-combobox`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to top level tag with `.slds-form-element` and not on `.slds-combobox_container`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to tag with `.slds-dropdown`. Uses `classNames` [API](https://github.com/JedWatson/classnames). Autocomplete/bass variant menu height should not scroll and should be determined by number items which should be no more than 10. _Tested with snapshot testing._\n\t */\n\tclassNameMenu: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to tag with `.slds-dropdown__header`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassNameMenuSubHeader: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Event Callbacks\n\t * * `onBlur`: Called when `input` removes focus.\n\t * * `onChange`: Called when keyboard events occur within `input`\n\t * * `onClose`: Triggered when the menu has closed.\n\t * * `onFocus`: Called when `input` receives focus.\n\t * * `onOpen`: Triggered when the menu has opened.\n\t * * `onRequestClose`: Function called when the menu would like to hide. Please use with `isOpen`.\n\t * * `onRequestOpen`:  Function called when the menu would like to show. Please use with `isOpen`.\n\t * * `onRequestRemoveSelectedOption`: Function called when a single selection option is to be removed.\n\t * * `onSelect`: Function called when a menu item is selected\n\t * * `onSubmit`: Function called when user presses enter or submits the `input`\n\t * _Tested with Mocha testing._\n\t */\n\tevents: PropTypes.shape({\n\t\tonBlur: PropTypes.func,\n\t\tonChange: PropTypes.func,\n\t\tonClose: PropTypes.func,\n\t\tonFocus: PropTypes.func,\n\t\tonOpen: PropTypes.func,\n\t\tonRequestClose: PropTypes.func,\n\t\tonRequestOpen: PropTypes.func,\n\t\tonRequestRemoveSelectedOption: PropTypes.func,\n\t\tonSelect: PropTypes.func,\n\t\tonSubmit: PropTypes.func,\n\t}),\n\t/**\n\t * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error. _Tested with snapshot testing._\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * HTML id for component. _Tested with snapshot testing._\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This label appears above the input.\n\t * * `multipleOptionsSelected`: This label is used by the readonly variant when multiple options are selected. The default is `${props.selection.length} options selected`. This will override the entire string.\n\t * * `noOptionsFound`: Custom message that renders when no matches found. The default empty state is just text that says, 'No matches found.'.\n\t * * `placeholder`: Input placeholder\n\t * * `placeholderReadOnly`: Placeholder for Picklist-like Combobox\n\t * * `removePillTitle`: Title on `X` icon\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t\tmultipleOptionsSelected: PropTypes.string,\n\t\tnoOptionsFound: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t\tplaceholder: PropTypes.string,\n\t\tplaceholderReadOnly: PropTypes.string,\n\t\tremovePillTitle: PropTypes.string,\n\t}),\n\t/**\n\t * Forces the dropdown to be open or closed. See controlled/uncontrolled callback/prop pattern for more on suggested use view [Concepts and Best Practices](https://github.com/salesforce-ux/design-system-react/blob/master/CONTRIBUTING.md#concepts-and-best-practices) _Tested with snapshot testing._\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Sets the dialog width to the width of one of the following:\n\t * * `target`: Sets the dialog width to the width of the target. (Menus attached to `input` typically follow this UX pattern),\n\t * * `menu`: Consider setting a `menuMaxWidth` if using this value. If not, width will be set to width of largest menu item.\n\t * * `none`: Does not set a width on the dialog. _Tested with snapshot testing._\n\t */\n\tinheritWidthOf: PropTypes.oneOf(['target', 'menu', 'none']),\n\t/**\n\t * Accepts a custom menu item rendering function that becomes a custom component. The checkmark is still rendered in readonly variants. This function is passed the following props:\n\t * * `assistiveText`: Object, `assistiveText` prop that is passed into Combobox\n\t * * `option`: Object, option data for item being rendered that is passed into Combobox\n\t * * `selected`: Boolean, allows rendering of `assistiveText.optionSelectedInMenu` in Readonly Combobox\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tmenuItem: PropTypes.func,\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tmenuPosition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * Sets a maximum width that the menu will be used if `inheritWidthOf` is set to `menu`. (Example: 500px) _Tested with snapshot testing._\n\t *\n\t */\n\tmenuMaxWidth: PropTypes.string,\n\t/**\n\t * Allows multiple selections _Tested with mocha testing._\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * Item added to the dropdown menu.\n\t * To add an item as a separator, set item `type` as `separator`. Note: At the moment, we don't support two consecutive separators. _Tested with snapshot testing._\n\t */\n\toptions: PropTypes.array.isRequired,\n\t/**\n\t * Determines the height of the menu based on SLDS CSS classes. This only applies to the readonly variant. This is a `number`.\n\t */\n\treadOnlyMenuItemVisibleLength: PropTypes.oneOf([5, 7, 10]),\n\t/**\n\t * Limits auto-complete input submission to one of the provided options. _Tested with mocha testing._\n\t */\n\tpredefinedOptionsOnly: PropTypes.bool,\n\t/**\n\t * Applies label styling for a required form element. _Tested with snapshot testing._\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * Accepts an array of item objects. For single selection, pass in an array of one object. _Tested with snapshot testing._\n\t */\n\tselection: PropTypes.array,\n\t/**\n\t * Value of input. This is a controlled component, so you will need to control the input value. _Tested with snapshot testing._\n\t */\n\tvalue: PropTypes.string,\n\t/**\n\t * Changes styles of the input. Currently `entity` is not supported. _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['base', 'inline-listbox', 'readonly']),\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\toptionSelectedInMenu: 'Current Selection:',\n\t\tremoveSingleSelectedOption: 'Remove selected option',\n\t\tremovePill: ', Press delete or backspace to remove',\n\t\tselectedListboxLabel: 'Selected Options:',\n\t},\n\tevents: {},\n\tlabels: {\n\t\tnoOptionsFound: 'No matches found.',\n\t\tplaceholderReadOnly: 'Select an Option',\n\t\tremovePillTitle: 'Remove',\n\t},\n\tinheritWidthOf: 'target',\n\tmenuPosition: 'absolute',\n\treadOnlyMenuItemVisibleLength: 5,\n\trequired: false,\n\tselection: [],\n\tvariant: 'base',\n};\n\n/**\n * A widget that provides a user with an input field that is either an autocomplete or readonly, accompanied with a listbox of pre-definfined options.\n */\nclass Combobox extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tactiveOption: undefined,\n\t\t\tactiveOptionIndex: -1,\n\t\t\t// seeding initial state with this.props.selection[0]\n\t\t\tactiveSelectedOption:\n\t\t\t\t(this.props.selection && this.props.selection[0]) || undefined,\n\t\t\tactiveSelectedOptionIndex: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle methods\n\t */\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(COMBOBOX, this.props);\n\n\t\tthis.generatedId = shortid.generate();\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps (nextProps) {\n\t\t// This logic will maintain the active highlight even when the\n\t\t// option order changes. One example would be the server pushes\n\t\t// data out as the user has the menu open. This logic clears\n\t\t// `activeOption` if the active option is no longer in the options\n\t\t// list. If it's in the options list, then find the new index and\n\t\t// set `activeOptionIndex`\n\t\tif (!isEqual(this.props.options, nextProps.options)) {\n\t\t\tconst index = findIndex(nextProps.options, (item) =>\n\t\t\t\tisEqual(item, this.state.activeOption)\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.setState({ activeOptionIndex: index });\n\t\t\t} else {\n\t\t\t\tthis.setState({ activeOption: undefined, activeOptionIndex: -1 });\n\t\t\t}\n\t\t} else if (this.props.isOpen !== nextProps.isOpen) {\n\t\t\tthis.setState({ isOpen: nextProps.isOpen });\n\t\t}\n\n\t\t// there may be issues with tabindex/focus if the app removes an item\n\t\t// from selection while the user is using the listbox\n\t\tconst selectedOptionsRenderIsInitialRender =\n\t\t\tthis.props.selection &&\n\t\t\tthis.props.selection.length === 0 &&\n\t\t\tnextProps.selection.length > 0;\n\t\tif (selectedOptionsRenderIsInitialRender) {\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: nextProps.selection[0],\n\t\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount () {\n\t\tif (currentOpenDropdown === this) {\n\t\t\tcurrentOpenDropdown = undefined;\n\t\t}\n\t}\n\n\tgetDialog ({ menuRenderer }) {\n\t\t// FOR BACKWARDS COMPATIBILITY\n\t\tconst menuPosition = this.props.isInline\n\t\t\t? 'relative'\n\t\t\t: this.props.menuPosition; // eslint-disable-line react/prop-types\n\n\t\treturn !this.props.disabled && this.getIsOpen() ? (\n\t\t\t<Dialog\n\t\t\t\talign=\"bottom left\"\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tinheritWidthOf={this.props.inheritWidthOf}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tonOpen={this.handleOpen}\n\t\t\t\tonRequestTargetElement={this.getTargetElement}\n\t\t\t\tposition={menuPosition}\n\t\t\t\tcontainerProps={{\n\t\t\t\t\tid: `${this.getId()}-listbox`,\n\t\t\t\t\trole: 'listbox',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{menuRenderer}\n\t\t\t</Dialog>\n\t\t) : null;\n\t}\n\n\tgetErrorId () {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t}\n\n\t/**\n\t * Shared class property getter methods\n\t */\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetIsActiveOption = () =>\n\t\tthis.state.activeOption && this.state.activeOptionIndex !== -1;\n\n\tgetIsOpen = () =>\n\t\t!!(isBoolean(this.props.isOpen) ? this.props.isOpen : this.state.isOpen);\n\n\tgetNewActiveOptionIndex = ({ activeOptionIndex, offset, options }) => {\n\t\t// used by menu listbox and selected options listbox\n\t\tconst nextIndex = activeOptionIndex + offset;\n\t\tconst skipIndex =\n\t\t\toptions.length > nextIndex &&\n\t\t\tnextIndex >= 0 &&\n\t\t\toptions[nextIndex].type === 'separator';\n\t\tconst newIndex = skipIndex ? nextIndex + offset : nextIndex;\n\t\tconst hasNewIndex = options.length > newIndex && newIndex >= 0;\n\t\treturn hasNewIndex ? newIndex : activeOptionIndex;\n\t};\n\n\tgetTargetElement = () => this.inputRef;\n\n\tsetInputRef = (component) => {\n\t\tthis.inputRef = component;\n\t\t// yes, this is a render triggered by a render.\n\t\t// Dialog/Popper.js cannot place the menu until\n\t\t// the trigger/target DOM node is mounted. This\n\t\t// way `findDOMNode` is not called and parent\n\t\t// DOM nodes are not queried.\n\t\tif (!this.state.inputRendered) {\n\t\t\tthis.setState({ inputRendered: true });\n\t\t}\n\t};\n\n\thandleBlurPill = () => {\n\t\tthis.setState({ listboxHasFocus: false });\n\t};\n\n\t/**\n\t * Menu open/close and sub-render methods\n\t */\n\n\thandleClickOutside = (event) => {\n\t\tthis.handleRequestClose(event, {});\n\t};\n\n\thandleClose = (event) => {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (isOpen) {\n\t\t\tif (currentOpenDropdown === this) {\n\t\t\t\tcurrentOpenDropdown = undefined;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tactiveOption: undefined,\n\t\t\t\tactiveOptionIndex: -1,\n\t\t\t\tisOpen: false,\n\t\t\t});\n\n\t\t\tif (this.props.events.onClose) {\n\t\t\t\tthis.props.events.onClose(event, {});\n\t\t\t}\n\t\t}\n\t};\n\n\thandleInputBlur = (event) => {\n\t\t// If menu is open when the input's onBlur event fires, it will close before the onClick of the menu item can fire.\n\t\tsetTimeout(() => {\n\t\t\tthis.handleClose(event);\n\t\t}, 200);\n\n\t\tif (this.props.events.onBlur) {\n\t\t\tthis.props.events.onBlur(event);\n\t\t}\n\t};\n\n\thandleInputChange = (event) => {\n\t\tthis.requestOpenMenu();\n\t\tthis.props.events.onChange(event, { value: event.target.value });\n\t};\n\n\thandleInputFocus = (event) => {\n\t\tif (this.props.events.onFocus) {\n\t\t\tthis.props.events.onFocus(event, {});\n\t\t}\n\t};\n\n\thandleInputSubmit = (event) => {\n\t\t// use menu options\n\t\tif (this.getIsActiveOption()) {\n\t\t\tthis.handleSelect(event, {\n\t\t\t\toption: this.state.activeOption,\n\t\t\t\tselection: this.props.selection,\n\t\t\t});\n\t\t\t// use input value, if not limited to predefined options (in the menu)\n\t\t} else if (\n\t\t\t!this.props.predefinedOptionsOnly &&\n\t\t\tevent.target.value !== '' &&\n\t\t\tthis.props.events.onSubmit\n\t\t) {\n\t\t\tthis.props.events.onSubmit(event, {\n\t\t\t\tvalue: event.target.value,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Input and menu keyboard event methods\n\t */\n\n\thandleKeyDown = (event) => {\n\t\t// Helper function that takes an object literal of callbacks that are triggered with a key event\n\t\tmapKeyEventCallbacks(event, {\n\t\t\tcallbacks: {\n\t\t\t\t[KEYS.DOWN]: { callback: this.handleKeyDownDown },\n\t\t\t\t[KEYS.ENTER]: { callback: this.handleInputSubmit },\n\t\t\t\t[KEYS.ESCAPE]: { callback: this.handleClose },\n\t\t\t\t[KEYS.UP]: { callback: this.handleKeyDownUp },\n\t\t\t},\n\t\t});\n\t};\n\n\thandleKeyDownDown = (event) => {\n\t\t// Don't open if user is selecting text\n\t\tif (!event.shiftKey) {\n\t\t\tthis.openDialog();\n\t\t}\n\n\t\tthis.handleNavigateListboxMenu(event, { direction: 'next' });\n\t};\n\n\thandleKeyDownUp = (event) => {\n\t\t// Don't open if user is selecting text\n\t\tif (!event.shiftKey && this.state.isOpen) {\n\t\t\tthis.handleNavigateListboxMenu(event, { direction: 'previous' });\n\t\t}\n\t};\n\n\thandleNavigateListboxMenu = (event, { direction }) => {\n\t\tconst offsets = { next: 1, previous: -1 };\n\t\t// takes current/previous state and returns an object with the new state\n\t\tthis.setState((prevState) => {\n\t\t\tconst newIndex = this.getNewActiveOptionIndex({\n\t\t\t\tactiveOptionIndex: prevState.activeOptionIndex,\n\t\t\t\toffset: offsets[direction],\n\t\t\t\toptions: this.props.options,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tactiveOption: this.props.options[newIndex],\n\t\t\t\tactiveOptionIndex: newIndex,\n\t\t\t};\n\t\t});\n\t};\n\n\thandleNavigateListboxOfPills = (event, { direction }) => {\n\t\tconst offsets = { next: 1, previous: -1 };\n\t\tthis.setState((prevState) => {\n\t\t\tconst isLastOptionAndRightIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex + 1 ===\n\t\t\t\t\tthis.props.selection.length && direction === 'next';\n\t\t\tconst isFirstOptionAndLeftIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex === 0 && direction === 'previous';\n\t\t\tlet newState;\n\n\t\t\tif (isLastOptionAndRightIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[0],\n\t\t\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else if (isFirstOptionAndLeftIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[\n\t\t\t\t\t\tthis.props.selection.length - 1\n\t\t\t\t\t],\n\t\t\t\t\tactiveSelectedOptionIndex: this.props.selection.length - 1,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst newIndex = this.getNewActiveOptionIndex({\n\t\t\t\t\tactiveOptionIndex: prevState.activeSelectedOptionIndex,\n\t\t\t\t\toffset: offsets[direction],\n\t\t\t\t\toptions: this.props.selection,\n\t\t\t\t});\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[newIndex],\n\t\t\t\t\tactiveSelectedOptionIndex: newIndex,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn newState;\n\t\t});\n\t};\n\n\thandleOpen = (event, data) => {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (!isOpen) {\n\t\t\tif (currentOpenDropdown && isFunction(currentOpenDropdown.handleClose)) {\n\t\t\t\tcurrentOpenDropdown.handleClose();\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentOpenDropdown = this;\n\n\t\t\tthis.setState({\n\t\t\t\tisOpen: true,\n\t\t\t});\n\n\t\t\tif (this.props.events.onOpen) {\n\t\t\t\tthis.props.events.onOpen(event, data);\n\t\t\t}\n\t\t}\n\t};\n\n\thandlePillClickListboxOfPills = (event, { option, index }) => {\n\t\t// this is clicking the span, not the remove button\n\t\tthis.setState({\n\t\t\tactiveSelectedOption: option,\n\t\t\tactiveSelectedOptionIndex: index,\n\t\t\tlistboxHasFocus: true,\n\t\t});\n\t};\n\n\t/**\n\t * Selected options with listbox of pills event methods\n\t */\n\n\thandleRemoveSelectedOption = (event, { option, index }) => {\n\t\tevent.preventDefault();\n\t\tconst onlyOnePillAndInputExists = this.props.selection.length === 1;\n\t\tconst isReadOnlyAndTwoPillsExists =\n\t\t\tthis.props.selection.length === 2 &&\n\t\t\tthis.props.variant === 'readonly' &&\n\t\t\tthis.props.multiple;\n\t\tconst lastPillWasRemoved = index + 1 === this.props.selection.length;\n\n\t\tif (\n\t\t\t(onlyOnePillAndInputExists || isReadOnlyAndTwoPillsExists) &&\n\t\t\tthis.inputRef\n\t\t) {\n\t\t\tthis.inputRef.focus();\n\t\t} else if (lastPillWasRemoved) {\n\t\t\t// set focus to previous option and index\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: this.props.selection[index - 1],\n\t\t\t\tactiveSelectedOptionIndex: index - 1,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t} else {\n\t\t\t// set focus to next option, but same index\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: this.props.selection[index + 1],\n\t\t\t\tactiveSelectedOptionIndex: index,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.events.onRequestRemoveSelectedOption) {\n\t\t\tthis.props.events.onRequestRemoveSelectedOption(event, {\n\t\t\t\tselection: reject(this.props.selection, option),\n\t\t\t});\n\t\t}\n\t};\n\n\thandleRequestClose = (event, data) => {\n\t\tif (this.props.events.onRequestClose) {\n\t\t\tthis.props.events.onRequestClose(event, data);\n\t\t}\n\n\t\tif (this.getIsOpen()) {\n\t\t\tthis.setState({ isOpen: false });\n\t\t}\n\t};\n\n\thandleRequestFocusListboxOfPills = (event, { ref }) => {\n\t\tif (ref) {\n\t\t\tthis.activeSelectedOptionRef = ref;\n\t\t\tthis.activeSelectedOptionRef.focus();\n\t\t}\n\t};\n\n\thandleSelect = (event, { selection, option }) => {\n\t\tlet newSelection;\n\t\tconst isSelected = this.isSelected({ selection, option });\n\t\tconst singleSelectAndSelectedWasNotClicked =\n\t\t\t!this.props.multiple && !isSelected;\n\t\tconst multiSelectAndSelectedWasNotClicked =\n\t\t\tthis.props.multiple && !isSelected;\n\n\t\tif (singleSelectAndSelectedWasNotClicked) {\n\t\t\tnewSelection = [option];\n\t\t} else if (multiSelectAndSelectedWasNotClicked) {\n\t\t\tnewSelection = [...this.props.selection, option];\n\t\t} else {\n\t\t\tnewSelection = reject(this.props.selection, option);\n\t\t}\n\n\t\tif (this.props.events.onSelect) {\n\t\t\tthis.props.events.onSelect(event, { selection: newSelection });\n\t\t}\n\n\t\tthis.handleClose();\n\n\t\tif (this.inputRef) {\n\t\t\tthis.inputRef.focus();\n\t\t}\n\t};\n\n\tisSelected = ({ selection, option }) => !!find(selection, option);\n\n\topenDialog = () => {\n\t\tif (this.props.events.onRequestOpen) {\n\t\t\tthis.props.events.onRequestOpen();\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisOpen: true,\n\t\t\t});\n\t\t}\n\t};\n\n\trequestOpenMenu = () => {\n\t\tconst isInlineSingleSelectionAndIsNotSelected =\n\t\t\t!this.props.multiple &&\n\t\t\tthis.props.selection.length === 0 &&\n\t\t\tthis.props.variant === 'inline-listbox';\n\n\t\tif (\n\t\t\tisInlineSingleSelectionAndIsNotSelected ||\n\t\t\tthis.props.multiple ||\n\t\t\tthis.props.variant === 'readonly'\n\t\t) {\n\t\t\tthis.openDialog();\n\t\t}\n\t};\n\n\t/**\n\t * Combobox variant subrenders\n\t * (these can probably be broken into function components\n\t * if state is passed in as a prop)\n\t */\n\n\trenderBase = ({ assistiveText, labels, props }) => (\n\t\t<div className=\"slds-form-element__control\">\n\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops.className\n\t\t\t\t\t)}\n\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t// used on menu's listbox\n\t\t\t\t\taria-owns={`${this.getId()}-listbox`} // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t>\n\t\t\t\t\t<InnerInput\n\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\taria-controls={`${this.getId()}-listbox`}\n\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${this.state.activeOption.id}`\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\ttitle={labels.inputIconTitle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.openDialog();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t? (this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t\tprops.value\n\t\t\t\t\t\t\t\t: props.value\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SelectedListBox\n\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tevents={{\n\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\tonClickPill: this.handlePillClickListboxOfPills,\n\t\t\t\t\tonRequestFocus: this.handleRequestFocusListboxOfPills,\n\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t}}\n\t\t\t\tid={this.getId()}\n\t\t\t\tlabels={labels}\n\t\t\t\tselection={props.selection}\n\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t/>\n\t\t\t{props.errorText && (\n\t\t\t\t<div className=\"slds-has-error\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={this.getErrorId()}\n\t\t\t\t\t\tclassName=\"slds-form-element__help slds-has-error\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\trenderInlineMultiple = ({ assistiveText, labels, props }) => (\n\t\t<div className=\"slds-form-element__control\">\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-combobox_container', {\n\t\t\t\t\t'slds-has-inline-listbox': props.selection.length,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{props.selection.length ? (\n\t\t\t\t\t<SelectedListBox\n\t\t\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\t\t\tonClickPill: this.handlePillClickListboxOfPills,\n\t\t\t\t\t\t\tonRequestFocus: this.handleRequestFocusListboxOfPills,\n\t\t\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tlabels={labels}\n\t\t\t\t\t\tselection={props.selection}\n\t\t\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops.className\n\t\t\t\t\t)}\n\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t>\n\t\t\t\t\t<InnerInput\n\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\taria-controls={`${this.getId()}-listbox`}\n\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${this.state.activeOption.id}`\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t'aria-expanded': this.getIsOpen(),\n\t\t\t\t\t\t\t'aria-haspopup': 'listbox',\n\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\ttitle={labels.inputIconTitle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.openDialog();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t? (this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t\tprops.value\n\t\t\t\t\t\t\t\t: props.value\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t})}\n\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\trenderInlineSingle = ({ assistiveText, labels, props }) => {\n\t\tconst iconLeft =\n\t\t\tprops.selection[0] && props.selection[0].icon\n\t\t\t\t? React.cloneElement(props.selection[0].icon, {\n\t\t\t\t\tcontainerClassName: 'slds-combobox__input-entity-icon',\n\t\t\t\t})\n\t\t\t\t: null;\n\n\t\tconst value =\n\t\t\tprops.selection[0] && props.selection[0].label\n\t\t\t\t? props.selection[0].label\n\t\t\t\t: props.value;\n\n\t\t/* eslint-disable jsx-a11y/role-supports-aria-props */\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames('slds-combobox_container', {\n\t\t\t\t\t\t'slds-has-inline-listbox': props.selection.length,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={`${this.getId()}-listbox`}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\tprops.selection.length ? (\n\t\t\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\t\ticon: assistiveText.removeSingleSelectedOption,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tbuttonRef={(component) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.buttonRef = component;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveSelectedOption(event, {\n\t\t\t\t\t\t\t\t\t\t\t\toption: props.selection[0],\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"search\" />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ticonLeft={iconLeft}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption) ||\n\t\t\t\t\t\t\t\t!!props.selection.length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t\t? (this.state.activeOption &&\n\t\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t\t\tprops.value\n\t\t\t\t\t\t\t\t\t: value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderMenu = ({ assistiveText, labels }) => {\n\t\tconst menuVariant = {\n\t\t\tbase: 'icon-title-subtitle',\n\t\t\t'inline-listbox': 'icon-title-subtitle',\n\t\t\treadonly: 'checkbox',\n\t\t};\n\n\t\treturn (\n\t\t\t<Menu\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tactiveOption={this.state.activeOption}\n\t\t\t\tactiveOptionIndex={this.state.activeOptionIndex}\n\t\t\t\tclassNameMenu={this.props.classNameMenu}\n\t\t\t\tclassNameMenuSubHeader={this.props.classNameMenuSubHeader}\n\t\t\t\tinheritWidthOf={this.props.inheritWidthOf}\n\t\t\t\tinputId={this.getId()}\n\t\t\t\tinputValue={this.props.value}\n\t\t\t\tisSelected={this.isSelected}\n\t\t\t\titemVisibleLength={\n\t\t\t\t\tthis.props.variant === 'readonly'\n\t\t\t\t\t\t? this.props.readOnlyMenuItemVisibleLength\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\tlabels={labels}\n\t\t\t\tmenuItem={this.props.menuItem}\n\t\t\t\tmenuPosition={this.props.menuPosition}\n\t\t\t\tmaxWidth={this.props.menuMaxWidth}\n\t\t\t\toptions={this.props.options}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\tclearActiveOption={this.clearActiveOption}\n\t\t\t\tselection={this.props.selection}\n\t\t\t\tvariant={menuVariant[this.props.variant]}\n\t\t\t/>\n\t\t);\n\t};\n\n\trenderReadOnlyMultiple = ({ assistiveText, labels, props }) => {\n\t\tconst value =\n\t\t\tprops.selection.length > 1\n\t\t\t\t? labels.multipleOptionsSelected ||\n\t\t\t\t\t`${props.selection.length} options selected`\n\t\t\t\t: (props.selection[0] && props.selection[0].label) || '';\n\n\t\t/* eslint-disable jsx-a11y/role-supports-aria-props */\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={`${this.getId()}-listbox`}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\t'aria-expanded': this.getIsOpen(),\n\t\t\t\t\t\t\t\t'aria-haspopup': 'listbox',\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"down\" variant=\"combobox\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholderReadOnly}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<SelectedListBox\n\t\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\t\tonClickPill: this.handlePillClickListboxOfPills,\n\t\t\t\t\t\tonRequestFocus: this.handleRequestFocusListboxOfPills,\n\t\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateListboxOfPills,\n\t\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t\t}}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tselection={props.selection}\n\t\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t\t\tvariant={this.props.variant}\n\t\t\t\t\trenderAtSelectionLength={2}\n\t\t\t\t/>\n\t\t\t\t{props.errorText && (\n\t\t\t\t\t<div className=\"slds-has-error\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={this.getErrorId()}\n\t\t\t\t\t\t\tclassName=\"slds-form-element__help slds-has-error\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderReadOnlySingle = ({ assistiveText, labels, props }) => {\n\t\tconst value = (props.selection[0] && props.selection[0].label) || '';\n\n\t\t/* eslint-disable jsx-a11y/role-supports-aria-props */\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t\t<div // aria attributes have been moved to the `div` wrapping `input` to comply with ARIA 1.1.\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={`${this.getId()}-listbox`}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\t'aria-expanded': this.getIsOpen(),\n\t\t\t\t\t\t\t\t'aria-haspopup': 'listbox',\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"down\" variant=\"combobox\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholderReadOnly}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t(this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender () {\n\t\tconst props = this.props;\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tprops.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\tconst subRenderParameters = { assistiveText, labels, props: this.props };\n\t\tconst multipleOrSingle = this.props.multiple ? 'multiple' : 'single';\n\t\tconst subRenders = {\n\t\t\tbase: {\n\t\t\t\tmultiple: this.renderBase, // same\n\t\t\t\tsingle: this.renderBase,\n\t\t\t},\n\t\t\t'inline-listbox': {\n\t\t\t\tmultiple: this.renderInlineMultiple,\n\t\t\t\tsingle: this.renderInlineSingle,\n\t\t\t},\n\t\t\treadonly: {\n\t\t\t\tmultiple: this.renderReadOnlyMultiple,\n\t\t\t\tsingle: this.renderReadOnlySingle,\n\t\t\t},\n\t\t};\n\t\tconst variantExists = subRenders[this.props.variant][multipleOrSingle];\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-form-element', props.classNameContainer)}\n\t\t\t>\n\t\t\t\t<Label\n\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\tlabel={labels.label}\n\t\t\t\t\trequired={props.required}\n\t\t\t\t/>\n\t\t\t\t{variantExists\n\t\t\t\t\t? subRenders[this.props.variant][multipleOrSingle](\n\t\t\t\t\t\tsubRenderParameters\n\t\t\t\t\t)\n\t\t\t\t\t: subRenders.base.multiple(subRenderParameters)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* eslint-enable jsx-a11y/role-supports-aria-props */\n\nCombobox.contextTypes = {\n\ticonPath: PropTypes.string,\n};\n\nCombobox.displayName = COMBOBOX;\nCombobox.propTypes = propTypes;\nCombobox.defaultProps = defaultProps;\n\nexport default Combobox;\n"],"file":"combobox.js"}