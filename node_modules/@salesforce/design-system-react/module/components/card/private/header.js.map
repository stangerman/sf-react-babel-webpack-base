{"version":3,"sources":["../../../../.tmp-es/components/card/private/header.jsx"],"names":["React","PropTypes","classnames","MediaObject","CARD_HEADER","idSuffixes","headerActions","heading","filter","renderFilter","id","clonedFilter","cloneElement","props","displayName","CardHeader","title","String","headingId","Header","header","figure","icon","body","verticalCenter","canTruncate","hasFilter","filterId","headerActionsId","propTypes","node","string","oneOfType","element","isRequired"],"mappings":";;;;AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SAASC,WAAT,QAA4B,8BAA5B,C,CAEA;;AACA,IAAMC,aAAa;AAClBC,iBAAe,kBADG;AAElBC,WAAS,WAFS;AAGlBC,UAAQ;AAHU,CAAnB;;AAMA,IAAMC,eAAe,SAAfA,YAAe,CAACD,MAAD,EAASE,EAAT,EAAgB;AACpC;AACA,MAAMC,eAAeX,MAAMY,YAAN,CAAmBJ,MAAnB,EAA2B;AAC/CE,QAAIF,OAAOK,KAAP,CAAaH,EAAb,IAAmBA;AADwB,GAA3B,CAArB;AAIA,SACC;AAAK,eAAU;AAAf,KACEC,YADF,CADD;AAKA,CAXD;;AAaAF,aAAaK,WAAb,GAA2B,cAA3B;AAEA;;;;AAGA,IAAMC,aAAa,SAAbA,UAAa,CAACF,KAAD,EAAW;AAC7B,MAAIG,QAAQ,IAAZ;;AAEA,MAAI,OAAOH,MAAMN,OAAb,KAAyB,QAAzB,IAAqCM,MAAMN,OAAN,YAAyBU,MAAlE,EAA0E;AACzED,YAAQH,MAAMN,OAAd;AACA;;AAED,MAAMA,UACL;AACC,QAAIM,MAAMK,SADX;AAEC,eAAU,wCAFX;AAGC,WAAOF;AAHR,KAKEH,MAAMN,OALR,CADD;AAUA,MAAIY,MAAJ;;AAEA,MAAIN,MAAMO,MAAV,EAAkB;AACjBD,aAASnB,MAAMY,YAAN,CAAmBC,MAAMO,MAAzB;AACRC,cAAQR,MAAMS,IADN;AAERC,YAAMhB,OAFE;AAGRiB,sBAAgB,IAHR;AAIRC,mBAAa;AAJL,OAKLZ,MAAMO,MAAN,CAAaP,KALR,EAAT;AAOA,GARD,MAQO;AACNM,aACC,oBAAC,WAAD;AACC,cAAQN,MAAMS,IADf;AAEC,YAAMf,OAFP;AAGC,0BAHD;AAIC;AAJD,MADD;AAQA;;AAED,MAAMmB,YAAYb,MAAML,MAAN,GAAe,IAAf,GAAsB,IAAxC;AAEA,SACC;AAAK,eAAWN,WAAW,mBAAX,EAAgC,WAAhC;AAAhB,KACEiB,MADF,EAEEN,MAAML,MAAN,GAAeC,aAAaI,MAAML,MAAnB,EAA2BK,MAAMc,QAAjC,CAAf,GAA4D,IAF9D,EAGC;AACC,QAAId,MAAMe,eADX;AAEC,eAAW1B,WAAW,cAAX,EAA2B;AACrC,2BAAqBwB,SADgB;AAErC,gCAA0BA;AAFW,KAA3B;AAFZ,KAOEb,MAAMP,aAPR,CAHD,CADD;AAeA,CAvDD,C,CAyDA;AACA;;;AACAS,WAAWD,WAAX,GAAyBV,WAAzB,C,CAEA;;AACAW,WAAWc,SAAX,GAAuB;AACtB;;;AAGArB,UAAQP,UAAU6B,IAJI;;AAKtB;;;AAGAH,YAAU1B,UAAU8B,MARE;;AAStB;;;AAGAX,UAAQnB,UAAU6B,IAZI;;AAatB;;;AAGAxB,iBAAeL,UAAU6B,IAhBH;;AAiBtB;;;AAGAF,mBAAiB3B,UAAU8B,MApBL;;AAqBtB;;;AAGAxB,WAASN,UAAU+B,SAAV,CAAoB,CAAC/B,UAAUgC,OAAX,EAAoBhC,UAAU8B,MAA9B,CAApB,EACPG,UAzBoB;;AA0BtB;;;AAGAhB,aAAWjB,UAAU8B,MA7BC;;AA8BtB;;;AAGAT,QAAMrB,UAAU6B;AAjCM,CAAvB;AAoCA,eAAef,UAAf;AACA,SAASV,UAAT","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classnames from 'classnames';\n\n// ## Children\nimport MediaObject from '../../media-object';\n\nimport { CARD_HEADER } from '../../../utilities/constants';\n\n// Allow for predicatable DOM queries with `querySelectorAll(cssClasses.base)`\nconst idSuffixes = {\n\theaderActions: '__header-actions',\n\theading: '__heading',\n\tfilter: '__filter-input',\n};\n\nconst renderFilter = (filter, id) => {\n\t// allow id to be set by custom header component passed in\n\tconst clonedFilter = React.cloneElement(filter, {\n\t\tid: filter.props.id || id,\n\t});\n\n\treturn (\n\t\t<div className=\"slds-input-has-icon slds-input-has-icon--left slds-size--1-of-3\">\n\t\t\t{clonedFilter}\n\t\t</div>\n\t);\n};\n\nrenderFilter.displayName = 'renderFilter';\n\n/**\n * Card Header is a private component and is not meant to be imported or used for Card's `header` prop. It just happens to have the same file name.\n */\nconst CardHeader = (props) => {\n\tlet title = null;\n\n\tif (typeof props.heading === 'string' || props.heading instanceof String) {\n\t\ttitle = props.heading;\n\t}\n\n\tconst heading = (\n\t\t<h2\n\t\t\tid={props.headingId}\n\t\t\tclassName=\"slds-text-heading--small slds-truncate\"\n\t\t\ttitle={title}\n\t\t>\n\t\t\t{props.heading}\n\t\t</h2>\n\t);\n\n\tlet Header;\n\n\tif (props.header) {\n\t\tHeader = React.cloneElement(props.header, {\n\t\t\tfigure: props.icon,\n\t\t\tbody: heading,\n\t\t\tverticalCenter: true,\n\t\t\tcanTruncate: true,\n\t\t\t...props.header.props,\n\t\t});\n\t} else {\n\t\tHeader = (\n\t\t\t<MediaObject\n\t\t\t\tfigure={props.icon}\n\t\t\t\tbody={heading}\n\t\t\t\tverticalCenter\n\t\t\t\tcanTruncate\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst hasFilter = props.filter ? true : null;\n\n\treturn (\n\t\t<div className={classnames('slds-card__header', 'slds-grid')}>\n\t\t\t{Header}\n\t\t\t{props.filter ? renderFilter(props.filter, props.filterId) : null}\n\t\t\t<div\n\t\t\t\tid={props.headerActionsId}\n\t\t\t\tclassName={classnames('slds-no-flex', {\n\t\t\t\t\t'slds-size--1-of-3': hasFilter,\n\t\t\t\t\t'slds-text-align--right': hasFilter,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{props.headerActions}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nCardHeader.displayName = CARD_HEADER;\n\n// ### Prop Types\nCardHeader.propTypes = {\n\t/**\n\t * Adds a filter input to the card header\n\t */\n\tfilter: PropTypes.node,\n\t/**\n\t * Set the HTML `id` of the card filter.\n\t */\n\tfilterId: PropTypes.string,\n\t/**\n\t * Allows a custom header (the media object with the icon in the first column). `icon`, `heading` and other props are passed in the media object from Card. Use `design-system-react/components/media-object` to create your own.\n\t */\n\theader: PropTypes.node,\n\t/**\n\t * Actions performed on selected items or that relate to the entire group of items such as \"Add Item.\"\"\n\t */\n\theaderActions: PropTypes.node,\n\t/**\n\t * Set the HTML `id` of the card header actions.\n\t */\n\theaderActionsId: PropTypes.string,\n\t/**\n\t * The heading is the name of the related item group.\n\t */\n\theading: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n\t\t.isRequired,\n\t/**\n\t * Set the HTML `id` of the card heading.\n\t */\n\theadingId: PropTypes.string,\n\t/**\n\t * Icon associated with grouped items\n\t */\n\ticon: PropTypes.node,\n};\n\nexport default CardHeader;\nexport { idSuffixes };\n"],"file":"header.js"}