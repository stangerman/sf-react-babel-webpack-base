{"version":3,"sources":["../../../.tmp-es/components/data-table/index.jsx"],"names":["React","createReactClass","PropTypes","shortid","classNames","assign","reject","checkProps","DataTableCell","DataTableColumn","DataTableHead","DataTableRow","DataTableRowActions","DATA_TABLE","DATA_TABLE_CELL","DATA_TABLE_HEAD","DATA_TABLE_ROW","count","array","Array","isArray","length","defaultProps","assistiveText","actionsHeader","columnSort","columnSortedAscending","columnSortedDescending","selectAllRows","selectRow","id","generate","selection","DataTable","displayName","propTypes","shape","string","children","node","className","oneOfType","object","columnBordered","bool","fixedLayout","items","isRequired","noRowHover","onChange","func","onSort","selectRows","stacked","stackedHorizontal","striped","unborderedRow","unbufferedCell","getDefaultProps","componentWillMount","props","handleToggleAll","e","checked","handleRowToggle","item","selected","render","numRows","numSelected","canSelectRows","allSelected","indeterminateSelected","columns","RowActions","Children","forEach","child","type","columnProps","Cell","push","dataTableProps","assistiveTextForActionsHeader","assistiveTextForSelectAllRows","assistiveTextForColumnSortedAscending","assistiveTextForColumnSortedDescending","assistiveTextForColumnSort","assistiveTextForSelectRow","map","rowId"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,QAA1B;AACA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,mBAAP,MAAgC,eAAhC,C,CAEA;;AACA,SACCC,UADD,EAECC,eAFD,EAGCC,eAHD,EAICC,cAJD,QAKO,2BALP,C,CAOA;;AACA,IAAMC,QAAQ,SAARA,KAAQ,CAACC,KAAD;AAAA,SAAYC,MAAMC,OAAN,CAAcF,KAAd,IAAuBA,MAAMG,MAA7B,GAAsC,CAAlD;AAAA,CAAd;;AAEA,IAAMC,eAAe;AACpBC,iBAAe;AACdC,mBAAe,SADD;AAEdC,gBAAY,WAFE;AAGdC,2BAAuB,kBAHT;AAIdC,4BAAwB,mBAJV;AAKdC,mBAAe,iBALD;AAMdC,eAAW;AANG,GADK;AASpBC,MAAI3B,QAAQ4B,QAAR,EATgB;AAUpBC,aAAW;AAVS,CAArB;AAaA;;;;;AAIA,IAAMC,YAAYhC,iBAAiB;AAClC;AACA;AACAiC,eAAarB,UAHqB;AAKlC;AACAsB,aAAW;AACV;;;;;;;;;;AAUAZ,mBAAerB,UAAUkC,KAAV,CAAgB;AAC9BZ,qBAAetB,UAAUmC,MADK;AAE9BZ,kBAAYvB,UAAUmC,MAFQ;AAG9BX,6BAAuBxB,UAAUmC,MAHH;AAI9BV,8BAAwBzB,UAAUmC,MAJJ;AAK9BT,qBAAe1B,UAAUmC,MALK;AAM9BR,iBAAW3B,UAAUmC;AANS,KAAhB,CAXL;;AAmBV;;;;;;;;;;;;;;;;;;;;AAoBAC,cAAUpC,UAAUqC,IAvCV;;AAwCV;;;AAGAC,eAAWtC,UAAUuC,SAAV,CAAoB,CAC9BvC,UAAUgB,KADoB,EAE9BhB,UAAUwC,MAFoB,EAG9BxC,UAAUmC,MAHoB,CAApB,CA3CD;;AAgDV;;;AAGAM,oBAAgBzC,UAAU0C,IAnDhB;;AAoDV;;;AAGAd,QAAI5B,UAAUmC,MAvDJ;;AAwDV;;;AAGAQ,iBAAa3C,UAAU0C,IA3Db;;AA4DV;;;AAGAE,WAAO5C,UAAUgB,KAAV,CAAgB6B,UA/Db;;AAgEV;;;AAGAC,gBAAY9C,UAAU0C,IAnEZ;;AAoEV;;;AAGAK,cAAU/C,UAAUgD,IAvEV;;AAwEV;;;AAGAC,YAAQjD,UAAUgD,IA3ER;;AA4EV;;;AAGAlB,eAAW9B,UAAUgB,KA/EX;;AAgFV;;;AAGAkC,gBAAYlD,UAAU0C,IAnFZ;;AAoFV;;;AAGAS,aAASnD,UAAU0C,IAvFT;;AAwFV;;;AAGAU,uBAAmBpD,UAAU0C,IA3FnB;;AA4FV;;;AAGAW,aAASrD,UAAU0C,IA/FT;;AAgGV;;;AAGAY,mBAAetD,UAAU0C,IAnGf;;AAoGV;;;AAGAa,oBAAgBvD,UAAU0C;AAvGhB,GANuB;AAgHlCc,iBAhHkC,6BAgHf;AAClB,WAAOpC,YAAP;AACA,GAlHiC;AAoHlCqC,oBApHkC,gCAoHZ;AACrB;AACApD,eAAWM,UAAX,EAAuB,KAAK+C,KAA5B;AACA,GAvHiC;AAyHlCC,iBAzHkC,2BAyHjBC,CAzHiB,QAyHD;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AAChC,QAAI,OAAO,KAAKH,KAAL,CAAWX,QAAlB,KAA+B,UAAnC,EAA+C;AAC9C,UAAMjB,YAAY+B,6BAAc,KAAKH,KAAL,CAAWd,KAAzB,IAAkC,EAApD;AAEA,WAAKc,KAAL,CAAWX,QAAX,CAAoBjB,SAApB,EAA+B8B,CAA/B;AACA;AACD,GA/HiC;AAiIlCE,iBAjIkC,2BAiIjBC,IAjIiB,EAiIXC,QAjIW,EAiIDJ,CAjIC,EAiIE;AACnC,QAAI,OAAO,KAAKF,KAAL,CAAWX,QAAlB,KAA+B,UAAnC,EAA+C;AAC9C,UAAIjB,SAAJ;;AAEA,UAAIkC,QAAJ,EAAc;AACblC,uCAAgB,KAAK4B,KAAL,CAAW5B,SAA3B,UAAsCiC,IAAtC;AACA,OAFD,MAEO;AACNjC,oBAAY1B,OAAO,KAAKsD,KAAL,CAAW5B,SAAlB,EAA6BiC,IAA7B,CAAZ;AACA;;AAED,WAAKL,KAAL,CAAWX,QAAX,CAAoBjB,SAApB,EAA+B8B,CAA/B;AACA;AACD,GA7IiC;AA+IlC;AACAK,QAhJkC,oBAgJxB;AAAA;;AACT,QAAMC,UAAUnD,MAAM,KAAK2C,KAAL,CAAWd,KAAjB,CAAhB;AACA,QAAMuB,cAAcpD,MAAM,KAAK2C,KAAL,CAAW5B,SAAjB,CAApB;AACA,QAAMsC,gBAAgB,KAAKV,KAAL,CAAWR,UAAX,IAAyBgB,UAAU,CAAzD;AACA,QAAMG,cAAcD,iBAAiBF,YAAYC,WAAjD;AACA,QAAMG,wBACLF,iBAAiBF,YAAYC,WAA7B,IAA4CA,gBAAgB,CAD7D;AAEA,QAAMI,UAAU,EAAhB;AACA,QAAIC,aAAa,IAAjB;AAEA1E,UAAM2E,QAAN,CAAeC,OAAf,CAAuB,KAAKhB,KAAL,CAAWtB,QAAlC,EAA4C,UAACuC,KAAD,EAAW;AACtD,UAAIA,SAASA,MAAMC,IAAN,CAAW5C,WAAX,KAA2BzB,gBAAgByB,WAAxD,EAAqE;AAAA,2BAC/B2C,MAAMjB,KADyB;AAAA,YAC5DtB,QAD4D,gBAC5DA,QAD4D;AAAA,YAC/CyC,WAD+C;;AAGpE,YAAMnB,QAAQvD,OAAO,EAAP,EAAW,MAAKuD,KAAhB,CAAd;AACA,eAAOA,MAAMtB,QAAb;AACAjC,eAAOuD,KAAP,EAAcmB,WAAd;AAEA,YAAIC,IAAJ;;AACA,YAAI1C,YAAYA,SAASwC,IAAT,CAAc5C,WAAd,KAA8BpB,eAA9C,EAA+D;AAC9DkE,iBAAO1C,SAASwC,IAAhB;AACAzE,iBAAOuD,KAAP,EAActB,SAASsB,KAAvB;AACA,SAHD,MAGO;AACNoB,iBAAOxE,aAAP;AACA;;AAEDiE,gBAAQQ,IAAR,CAAa;AACZD,oBADY;AAEZpB,sBAFY;AAGZsB,0BAAgB,MAAKtB;AAHT,SAAb;AAKA,OApBD,MAoBO,IACNiB,SACAA,MAAMC,IAAN,CAAW5C,WAAX,KAA2BtB,oBAAoBsB,WAFzC,EAGL;AACDwC,qBAAaG,KAAb;AACA;AACD,KA3BD;;AA6BA,QAAMtD,kCACFD,aAAaC,aADX,EAEF,KAAKqC,KAAL,CAAWrC,aAFT,CAAN;;AAIA,QAAI,KAAKqC,KAAL,CAAWuB,6BAAf,EAA8C;AAC7C5D,oBAAcC,aAAd,GAA8B,KAAKoC,KAAL,CAAWuB,6BAAzC;AACA;;AACD,QAAI,KAAKvB,KAAL,CAAWwB,6BAAf,EAA8C;AAC7C7D,oBAAcK,aAAd,GAA8B,KAAKgC,KAAL,CAAWwB,6BAAzC;AACA;;AACD,QAAI,KAAKxB,KAAL,CAAWyB,qCAAf,EAAsD;AACrD9D,oBAAcG,qBAAd,GAAsC,KAAKkC,KAAL,CAAWyB,qCAAjD;AACA;;AACD,QAAI,KAAKzB,KAAL,CAAW0B,sCAAf,EAAuD;AACtD/D,oBAAcI,sBAAd,GAAuC,KAAKiC,KAAL,CAAW0B,sCAAlD;AACA;;AACD,QAAI,KAAK1B,KAAL,CAAW2B,0BAAf,EAA2C;AAC1ChE,oBAAcE,UAAd,GAA2B,KAAKmC,KAAL,CAAW2B,0BAAtC;AACA;;AACD,QAAI,KAAK3B,KAAL,CAAW4B,yBAAf,EAA0C;AACzCjE,oBAAcM,SAAd,GAA0B,KAAK+B,KAAL,CAAW4B,yBAArC;AACA;;AAED,WACC;AACC,iBAAWpF,WACV,YADU,EAEV;AACC,oCAA4B,KAAKwD,KAAL,CAAWf,WADxC;AAEC,qCAA6B,KAAKe,KAAL,CAAWf,WAFzC;AAGC,+BAAuB,CAAC,KAAKe,KAAL,CAAWJ,aAHpC;AAIC,kCACC,CAAC,KAAKI,KAAL,CAAWf,WAAZ,IAA2B,CAAC,KAAKe,KAAL,CAAWH,cALzC;AAMC,yCAAiC,KAAKG,KAAL,CAAWP,OAN7C;AAOC,6DAAqD,KAAKO,KAAL,CACnDN,iBARH;AASC,8BAAsB,KAAKM,KAAL,CAAWL,OATlC;AAUC,mCAA2B,KAAKK,KAAL,CAAWjB,cAVvC;AAWC,6BAAqB,KAAKiB,KAAL,CAAWZ;AAXjC,OAFU,EAeV,KAAKY,KAAL,CAAWpB,SAfD,CADZ;AAkBC,UAAI,KAAKoB,KAAL,CAAW9B,EAlBhB;AAmBC,YAAM,KAAK8B,KAAL,CAAWf,WAAX,GAAyB,MAAzB,GAAkC;AAnBzC,OAqBC,oBAAC,aAAD;AACC,qBAAetB,aADhB;AAEC,mBAAagD,WAFd;AAGC,6BAAuBC,qBAHxB;AAIC,qBAAeF,aAJhB;AAKC,eAASG,OALV;AAMC,oBAAO,KAAKb,KAAL,CAAW9B,EAAlB,cAAwBf,eAAxB,CAND;AAOC,mBAAa,KAAK8C,eAPnB;AAQC,cAAQ,KAAKD,KAAL,CAAWT,MARpB;AASC,sBAAgB,CAAC,CAACuB;AATnB,MArBD,EAgCC,mCACEN,UAAU,CAAV,GACE,KAAKR,KAAL,CAAWd,KAAX,CAAiB2C,GAAjB,CAAqB,UAACxB,IAAD,EAAU;AAChC,UAAMyB,QACJ,UAAG,MAAK9B,KAAL,CAAW9B,EAAd,cAAoBd,cAApB,cAAsCiD,KAAKnC,EAA3C,KACA3B,QAAQ4B,QAAR,EAFF;AAGA,aACC,oBAAC,YAAD;AACC,uBAAeR,aADhB;AAEC,uBAAe+C,aAFhB;AAGC,iBAASG,OAHV;AAIC,qBAAa,MAAKb,KAAL,CAAWf,WAJzB;AAKC,YAAI6C,KALL;AAMC,cAAMzB,IANP;AAOC,aAAKyB,KAPN;AAQC,kBAAU,MAAK1B,eARhB;AASC,mBAAW,MAAKJ,KAAL,CAAW5B,SATvB;AAUC,oBAAY0C;AAVb,QADD;AAcA,KAlBC,CADF,GAoBE;AACF,QAtBF,CAhCD,CADD;AA2DA;AAzQiC,CAAjB,CAAlB;AA4QA,eAAezC,SAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Data Table Component\n\n// Implements the [Data Table design pattern](https://www.lightningdesignsystem.com/components/data-tables) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### assign\nimport assign from 'lodash.assign';\n\n// ### reject\nimport reject from 'lodash.reject';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ## Children\nimport DataTableCell from './cell';\nimport DataTableColumn from './column';\nimport DataTableHead from './private/head';\nimport DataTableRow from './private/row';\nimport DataTableRowActions from './row-actions';\n\n// ## Constants\nimport {\n\tDATA_TABLE,\n\tDATA_TABLE_CELL,\n\tDATA_TABLE_HEAD,\n\tDATA_TABLE_ROW,\n} from '../../utilities/constants';\n\n// Safely get the length of an array, returning 0 for invalid input.\nconst count = (array) => (Array.isArray(array) ? array.length : 0);\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tactionsHeader: 'Actions',\n\t\tcolumnSort: 'Sort by: ',\n\t\tcolumnSortedAscending: 'Sorted Ascending',\n\t\tcolumnSortedDescending: 'Sorted Descending',\n\t\tselectAllRows: 'Select all rows',\n\t\tselectRow: 'Select row',\n\t},\n\tid: shortid.generate(),\n\tselection: [],\n};\n\n/**\n * DataTables support the display of structured data in rows and columns with an HTML table. To sort, filter or paginate the table, simply update the data passed in the items to the table and it will re-render itself appropriately. The table will throw a sort event as needed, and helper components for paging and filtering are coming soon.\n *\n */\nconst DataTable = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: DATA_TABLE,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `actionsHeader`: Text for heading of actions column\n\t\t * * `columnSort`: Text for sort action on table column header\n\t\t * * `columnSortedAscending`: Text announced once a column is sorted in ascending order\n\t\t * * `columnSortedDescending`: Text announced once a column is sorted in descending order\n\t\t * * `selectAllRows`: Text for select all checkbox within the table header\n\t\t * * `selectRow`: Text for select row\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\tactionsHeader: PropTypes.string,\n\t\t\tcolumnSort: PropTypes.string,\n\t\t\tcolumnSortedAscending: PropTypes.string,\n\t\t\tcolumnSortedDescending: PropTypes.string,\n\t\t\tselectAllRows: PropTypes.string,\n\t\t\tselectRow: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Provide children of the type `<DataTableColumn />` to define the structure of the data being represented and children of the type `<DataTableRowActions />` to define a menu which will be rendered for each item in the grid. Use a _higher-order component_ to customize a data table cell that will override the default cell rendering. `CustomDataTableCell` must have the same `displayName` as `DataTableCell` or it will be ignored. If you want complete control of the HTML, including the wrapping `td`, you don't have to use `DataTableCell`.\n\t\t * ```\n\t\t * import DataTableCell from 'design-system-react/data-table/cell';\n\t\t * const CustomDataTableCell = ({ children, ...props }) => (\n\t\t *   <DataTableCell {...props} >\n\t\t *   <a href=\"javascript:void(0);\">{children}</a>\n\t\t *   </DataTableCell>\n\t\t * );\n\t\t * CustomDataTableCell.displayName = DataTableCell.displayName;\n\t\t *\n\t\t * <DataTable>\n\t\t *   <DataTableColumn />\n\t\t *   <DataTableColumn>\n\t\t *   <DataTableCustomCell />\n\t\t *   </DataTableColumn>\n\t\t *   <DataTableRowActions />\n\t\t * </DataTable>\n\t\t * ```\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * Class names to be added to the table.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * A variant which adds border to the vertical columns.\n\t\t */\n\t\tcolumnBordered: PropTypes.bool,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation and ARIA support.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Use this if you are creating an advanced table (selectable, sortable, or resizable rows)\n\t\t */\n\t\tfixedLayout: PropTypes.bool,\n\t\t/**\n\t\t * The collection of items to render in the table.\n\t\t */\n\t\titems: PropTypes.array.isRequired,\n\t\t/**\n\t\t * A variant which removes hover style on rows\n\t\t */\n\t\tnoRowHover: PropTypes.bool,\n\t\t/**\n\t\t * This function fires when the selection of rows changes.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t\t/**\n\t\t * This function fires when the table should be sorted.\n\t\t */\n\t\tonSort: PropTypes.func,\n\t\t/**\n\t\t * The selected rows.\n\t\t */\n\t\tselection: PropTypes.array,\n\t\t/**\n\t\t * True if rows should be selectable.\n\t\t */\n\t\tselectRows: PropTypes.bool,\n\t\t/**\n\t\t * A variant which modifies table layout by stacking cells to accommodate smaller viewports. Should not be used at the same time as `stackedHorizontal`.\n\t\t */\n\t\tstacked: PropTypes.bool,\n\t\t/**\n\t\t * A variant which modifies table layout by displaying the header and row data side by side for smaller viewports. Should not be used at the same time as `stacked`.\n\t\t */\n\t\tstackedHorizontal: PropTypes.bool,\n\t\t/**\n\t\t * A variant which adds stripes to alternating rows.\n\t\t */\n\t\tstriped: PropTypes.bool,\n\t\t/**\n\t\t * Tables have horizontal borders by default. This removes them.\n\t\t */\n\t\tunborderedRow: PropTypes.bool,\n\t\t/**\n\t\t * A variant which removes horizontal padding. CSS class will be removed if `fixedLayout==true`.\n\t\t */\n\t\tunbufferedCell: PropTypes.bool,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn defaultProps;\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(DATA_TABLE, this.props);\n\t},\n\n\thandleToggleAll (e, { checked }) {\n\t\tif (typeof this.props.onChange === 'function') {\n\t\t\tconst selection = checked ? [...this.props.items] : [];\n\n\t\t\tthis.props.onChange(selection, e);\n\t\t}\n\t},\n\n\thandleRowToggle (item, selected, e) {\n\t\tif (typeof this.props.onChange === 'function') {\n\t\t\tlet selection;\n\n\t\t\tif (selected) {\n\t\t\t\tselection = [...this.props.selection, item];\n\t\t\t} else {\n\t\t\t\tselection = reject(this.props.selection, item);\n\t\t\t}\n\n\t\t\tthis.props.onChange(selection, e);\n\t\t}\n\t},\n\n\t// ### Render\n\trender () {\n\t\tconst numRows = count(this.props.items);\n\t\tconst numSelected = count(this.props.selection);\n\t\tconst canSelectRows = this.props.selectRows && numRows > 0;\n\t\tconst allSelected = canSelectRows && numRows === numSelected;\n\t\tconst indeterminateSelected =\n\t\t\tcanSelectRows && numRows !== numSelected && numSelected !== 0;\n\t\tconst columns = [];\n\t\tlet RowActions = null;\n\n\t\tReact.Children.forEach(this.props.children, (child) => {\n\t\t\tif (child && child.type.displayName === DataTableColumn.displayName) {\n\t\t\t\tconst { children, ...columnProps } = child.props;\n\n\t\t\t\tconst props = assign({}, this.props);\n\t\t\t\tdelete props.children;\n\t\t\t\tassign(props, columnProps);\n\n\t\t\t\tlet Cell;\n\t\t\t\tif (children && children.type.displayName === DATA_TABLE_CELL) {\n\t\t\t\t\tCell = children.type;\n\t\t\t\t\tassign(props, children.props);\n\t\t\t\t} else {\n\t\t\t\t\tCell = DataTableCell;\n\t\t\t\t}\n\n\t\t\t\tcolumns.push({\n\t\t\t\t\tCell,\n\t\t\t\t\tprops,\n\t\t\t\t\tdataTableProps: this.props,\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tchild &&\n\t\t\t\tchild.type.displayName === DataTableRowActions.displayName\n\t\t\t) {\n\t\t\t\tRowActions = child;\n\t\t\t}\n\t\t});\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tif (this.props.assistiveTextForActionsHeader) {\n\t\t\tassistiveText.actionsHeader = this.props.assistiveTextForActionsHeader;\n\t\t}\n\t\tif (this.props.assistiveTextForSelectAllRows) {\n\t\t\tassistiveText.selectAllRows = this.props.assistiveTextForSelectAllRows;\n\t\t}\n\t\tif (this.props.assistiveTextForColumnSortedAscending) {\n\t\t\tassistiveText.columnSortedAscending = this.props.assistiveTextForColumnSortedAscending;\n\t\t}\n\t\tif (this.props.assistiveTextForColumnSortedDescending) {\n\t\t\tassistiveText.columnSortedDescending = this.props.assistiveTextForColumnSortedDescending;\n\t\t}\n\t\tif (this.props.assistiveTextForColumnSort) {\n\t\t\tassistiveText.columnSort = this.props.assistiveTextForColumnSort;\n\t\t}\n\t\tif (this.props.assistiveTextForSelectRow) {\n\t\t\tassistiveText.selectRow = this.props.assistiveTextForSelectRow;\n\t\t}\n\n\t\treturn (\n\t\t\t<table\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-table',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-table--fixed-layout': this.props.fixedLayout,\n\t\t\t\t\t\t'slds-table_resizable-cols': this.props.fixedLayout,\n\t\t\t\t\t\t'slds-table_bordered': !this.props.unborderedRow,\n\t\t\t\t\t\t'slds-table_cell-buffer':\n\t\t\t\t\t\t\t!this.props.fixedLayout && !this.props.unbufferedCell,\n\t\t\t\t\t\t'slds-max-medium-table_stacked': this.props.stacked,\n\t\t\t\t\t\t'slds-max-medium-table_stacked-horizontalviewports': this.props\n\t\t\t\t\t\t\t.stackedHorizontal,\n\t\t\t\t\t\t'slds-table_striped': this.props.striped,\n\t\t\t\t\t\t'slds-table_col-bordered': this.props.columnBordered,\n\t\t\t\t\t\t'slds-no-row-hover': this.props.noRowHover,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tid={this.props.id}\n\t\t\t\trole={this.props.fixedLayout ? 'grid' : null}\n\t\t\t>\n\t\t\t\t<DataTableHead\n\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\tallSelected={allSelected}\n\t\t\t\t\tindeterminateSelected={indeterminateSelected}\n\t\t\t\t\tcanSelectRows={canSelectRows}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tid={`${this.props.id}-${DATA_TABLE_HEAD}`}\n\t\t\t\t\tonToggleAll={this.handleToggleAll}\n\t\t\t\t\tonSort={this.props.onSort}\n\t\t\t\t\tshowRowActions={!!RowActions}\n\t\t\t\t/>\n\t\t\t\t<tbody>\n\t\t\t\t\t{numRows > 0\n\t\t\t\t\t\t? this.props.items.map((item) => {\n\t\t\t\t\t\t\tconst rowId =\n\t\t\t\t\t\t\t\t\t`${this.props.id}-${DATA_TABLE_ROW}-${item.id}` ||\n\t\t\t\t\t\t\t\t\tshortid.generate();\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<DataTableRow\n\t\t\t\t\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\t\t\t\t\tcanSelectRows={canSelectRows}\n\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t\tfixedLayout={this.props.fixedLayout}\n\t\t\t\t\t\t\t\t\tid={rowId}\n\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\tkey={rowId}\n\t\t\t\t\t\t\t\t\tonToggle={this.handleRowToggle}\n\t\t\t\t\t\t\t\t\tselection={this.props.selection}\n\t\t\t\t\t\t\t\t\trowActions={RowActions}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: // Someday this should be an element to render when the table is empty\n\t\t\t\t\t\tnull}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t},\n});\n\nexport default DataTable;\n"],"file":"index.js"}