{"version":3,"sources":["../../../../.tmp-es/components/button/__tests__/button.browser-test.jsx"],"names":["React","ReactDOM","TestUtils","expect","assign","SLDSButton","IconSettings","Simulate","findRenderedDOMComponentWithTag","findRenderedDOMComponentWithClass","mockCallback","sinon","spy","describe","body","defaultProps","label","onClick","variant","renderButton","inst","document","createElement","appendChild","render","removeButton","unmountComponentAtNode","removeChild","createButton","props","getButton","cmp","btn","beforeEach","id","text","theme","afterEach","it","textContent","to","equal","className","include","getAttribute","svg","iconName","iconCategory","iconPosition","baseVal","asstText","assistiveText","icon","iconSize","iconVariant","iconPath","title","use","svgHref","before","clicked","setClick","be","false","click","true"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-render-return-value */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TestUtils from 'react-addons-test-utils';\nimport { expect } from 'chai';\nimport assign from 'lodash.assign';\n\nimport SLDSButton from '../../button';\nimport IconSettings from '../../icon-settings';\n\nconst {\n\tSimulate,\n\tfindRenderedDOMComponentWithTag,\n\tfindRenderedDOMComponentWithClass,\n} = TestUtils;\n\nconst mockCallback = sinon.spy();\n\ndescribe('SLDSButton: ', () => {\n\tlet body;\n\n\tconst defaultProps = {\n\t\tlabel: 'Neutral',\n\t\tonClick: mockCallback,\n\t\tvariant: 'neutral',\n\t};\n\n\tconst renderButton = (inst) => {\n\t\tbody = document.createElement('div');\n\t\tdocument.body.appendChild(body);\n\t\treturn ReactDOM.render(\n\t\t\t<IconSettings iconPath=\"/assets/icons\">{inst}</IconSettings>,\n\t\t\tbody\n\t\t);\n\t};\n\n\tfunction removeButton () {\n\t\tReactDOM.unmountComponentAtNode(body);\n\t\tdocument.body.removeChild(body);\n\t}\n\n\tconst createButton = (props) =>\n\t\tReact.createElement(SLDSButton, assign({}, defaultProps, props));\n\tconst getButton = (props) => renderButton(createButton(props));\n\n\tdescribe('Basic Button Props Render', () => {\n\t\tlet cmp;\n\t\tlet btn;\n\n\t\tbeforeEach(() => {\n\t\t\tcmp = getButton({\n\t\t\t\tid: 'custom-id',\n\t\t\t\ttext: 'Brand',\n\t\t\t\ttheme: 'brand',\n\t\t\t});\n\t\t\tbtn = findRenderedDOMComponentWithClass(cmp, 'slds-button');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveButton(btn);\n\t\t});\n\n\t\tit('renders correct label', () => {\n\t\t\texpect(btn.textContent).to.equal('Neutral');\n\t\t});\n\n\t\tit('renders correct variant styles', () => {\n\t\t\texpect(btn.className).to.include('slds-button--neutral');\n\t\t});\n\n\t\tit('renders custom id', () => {\n\t\t\texpect(btn.getAttribute('id')).to.equal('custom-id');\n\t\t});\n\t});\n\n\tdescribe('Icon with Label Button Props Render', () => {\n\t\tlet cmp;\n\t\tlet btn;\n\t\tlet svg;\n\n\t\tbeforeEach(() => {\n\t\t\tcmp = getButton({\n\t\t\t\tlabel: 'Neutral with Icon',\n\t\t\t\ticonName: 'download',\n\t\t\t\ticonCategory: 'action',\n\t\t\t\ticonPosition: 'right',\n\t\t\t\tvariant: 'neutral',\n\t\t\t});\n\t\t\tbtn = findRenderedDOMComponentWithClass(cmp, 'slds-button');\n\t\t\tsvg = findRenderedDOMComponentWithClass(cmp, 'slds-button__icon');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveButton(btn);\n\t\t});\n\n\t\tit('renders label', () => {\n\t\t\texpect(btn.textContent).to.equal('Neutral with Icon');\n\t\t});\n\n\t\tit('renders icon', () => {\n\t\t\texpect(svg.className.baseVal).to.include('slds-button__icon--right');\n\t\t});\n\t});\n\n\tdescribe('Icon Button Props render', () => {\n\t\tlet cmp;\n\t\tlet btn;\n\t\tlet asstText;\n\t\tlet svg;\n\n\t\tbeforeEach(() => {\n\t\t\tcmp = getButton({\n\t\t\t\tassistiveText: { icon: 'my settings' },\n\t\t\t\tvariant: 'icon',\n\t\t\t\ticonCategory: 'utility',\n\t\t\t\ticonName: 'settings',\n\t\t\t\ticonSize: 'small',\n\t\t\t\ticonVariant: 'bare',\n\t\t\t});\n\t\t\tbtn = findRenderedDOMComponentWithClass(cmp, 'slds-button');\n\t\t\tasstText = findRenderedDOMComponentWithClass(cmp, 'slds-assistive-text');\n\t\t\tsvg = findRenderedDOMComponentWithTag(cmp, 'svg');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveButton(btn);\n\t\t});\n\n\t\tit('renders label', () => {\n\t\t\texpect(asstText.textContent).to.equal('my settings');\n\t\t});\n\n\t\tit('renders icon styles', () => {\n\t\t\texpect(svg.className.baseVal).to.include('slds-button__icon');\n\t\t});\n\t});\n\n\tdescribe('(icon path) Icon Button renders assistive text', () => {\n\t\tlet cmp;\n\t\tlet btn;\n\t\tlet asstText;\n\n\t\tbeforeEach(() => {\n\t\t\tcmp = getButton({\n\t\t\t\tassistiveText: { icon: 'News' },\n\t\t\t\ticonSize: 'large',\n\t\t\t\ticonPath: '/assets/icons/utility-sprite/svg/symbols.svg#announcement',\n\t\t\t\ttitle: 'announcement',\n\t\t\t});\n\t\t\tbtn = findRenderedDOMComponentWithClass(cmp, 'slds-button');\n\t\t\tasstText = findRenderedDOMComponentWithClass(cmp, 'slds-assistive-text');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveButton(btn);\n\t\t});\n\n\t\tit('renders label', () => {\n\t\t\texpect(asstText.textContent).to.equal('News');\n\t\t});\n\t});\n\n\tdescribe('External Path Icon Button renders', () => {\n\t\tlet cmp;\n\t\tlet use;\n\t\tlet svgHref;\n\n\t\tbefore(() => {\n\t\t\tcmp = getButton({\n\t\t\t\tassistiveText: { icon: 'announcement' },\n\t\t\t\tvariant: 'icon',\n\t\t\t\ticonPath: '/assets/icons/utility-sprite/svg/symbols.svg#announcement',\n\t\t\t\ticonSize: 'large',\n\t\t\t\ticonVariant: 'bare',\n\t\t\t});\n\t\t\tuse = findRenderedDOMComponentWithTag(cmp, 'use');\n\t\t\tsvgHref = use.getAttribute('xlink:href');\n\t\t});\n\n\t\tit('renders svg', () => {\n\t\t\texpect(svgHref).to.equal(\n\t\t\t\t'/assets/icons/utility-sprite/svg/symbols.svg#announcement'\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe('Button Clickable', () => {\n\t\tlet cmp;\n\t\tlet btn;\n\t\tlet clicked;\n\n\t\tfunction setClick () {\n\t\t\tclicked = true;\n\t\t}\n\n\t\tbeforeEach(() => {\n\t\t\tclicked = false;\n\t\t\tcmp = getButton({\n\t\t\t\tlabel: 'Neutral',\n\t\t\t\tvariant: 'neutral',\n\t\t\t\tonClick: setClick,\n\t\t\t});\n\t\t\tbtn = findRenderedDOMComponentWithClass(cmp, 'slds-button');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveButton(btn);\n\t\t});\n\n\t\tit('can be clicked', () => {\n\t\t\t/* eslint-disable no-unused-expressions */\n\t\t\texpect(clicked).to.be.false;\n\t\t\tSimulate.click(btn, {});\n\t\t\texpect(clicked).to.be.true;\n\t\t\t/* eslint-enable no-unused-expressions */\n\t\t});\n\t});\n});\n"],"file":"button.browser-test.js"}