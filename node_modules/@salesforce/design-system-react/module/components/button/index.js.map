{"version":3,"sources":["../../../.tmp-es/components/button/index.jsx"],"names":["React","createReactClass","requiredIf","PropTypes","classNames","ButtonIcon","checkProps","PopoverTooltip","BUTTON","defaultProps","assistiveText","icon","disabled","hint","iconSize","responsive","type","variant","Button","displayName","propTypes","string","oneOfType","bool","shape","buttonRef","func","className","array","object","iconCategory","oneOf","props","iconName","iconClassName","iconPath","iconPosition","iconVariant","id","inverse","label","node","onBlur","onClick","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","tabIndex","title","tooltip","getDefaultProps","componentWillMount","getClassName","isIcon","iconMore","iconBorder","iconGlobalHeader","showButtonVariant","plainInverseBtn","plainInverseIcon","moreInverseIcon","borderInverseIcon","handleClick","event","renderIcon","name","renderLabel","iconOnly","assistiveTextIcon","renderButton","component","children","renderTooltip","render"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button design pattern](https://lightningdesignsystem.com/components/buttons/) in React.\n// Based on SLDS v2.2.1\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport requiredIf from 'react-required-if';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ButtonIcon from '../icon/button-icon';\nimport checkProps from './check-props';\nimport PopoverTooltip from '../popover-tooltip';\n\nimport { BUTTON } from '../../utilities/constants';\n\nconst defaultProps = {\n\tassistiveText: { icon: '' },\n\tdisabled: false,\n\thint: false,\n\ticonSize: 'medium',\n\tresponsive: false,\n\ttype: 'button',\n\tvariant: 'neutral',\n};\n\n/**\n * The Button component is the Lightning Design System Button component. The Button should be used for label buttons, icon buttons, or buttons that have both labels and icons.\n * Either a <code>label</code> or <code>assistiveText.icon</code> is required; see the Prop Details table below.\n * For buttons that maintain selected/unselected states, use the <a href=\"#/button-stateful\">ButtonStateful</a> component.\n */\nconst Button = createReactClass({\n\tdisplayName: BUTTON,\n\n\tpropTypes: {\n\t\t/**\n\t\t * Used if the Button triggers a tooltip. The value should match the `id` of the element with `role=\"tooltip\"`.\n\t\t */\n\t\t'aria-describedby': PropTypes.string,\n\t\t/**\n\t\t * Establishes a relationship between an interactive parent element and a child element to indicate which child element a parent element affects. Frequently used in cases where buttons or tabs are associated with exposing expandable regions.\n\t\t */\n\t\t'aria-controls': PropTypes.string,\n\t\t/**\n\t\t * Used if the Button triggers a menu or popup. Bool indicates if the menu or popup is open or closed.\n\t\t */\n\t\t'aria-expanded': PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\t\t/**\n\t\t * True if Button triggers a menu or popup to open/close.\n\t\t */\n\t\t'aria-haspopup': PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `icon`: Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. If the button has an icon and a visible label, you can omit the <code>assistiveText.icon</code> prop and use the <code>label</code> prop.\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\ticon: PropTypes.string,\n\t\t}),\n\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tbuttonRef: PropTypes.func,\n\t\t/**\n\t\t * CSS classes to be added to button.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Disables the button and adds disabled styling.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Associates an icon button with another element on the page by changes the color of the SVG. Please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#hint\">Lightning Design System Buttons > Hint</a>.\n\t\t */\n\t\thint: PropTypes.bool,\n\t\t/**\n\t\t * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n\t\t */\n\t\ticonCategory: requiredIf(\n\t\t\tPropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']),\n\t\t\t(props) => !!props.iconName\n\t\t),\n\t\t/**\n\t\t * CSS classes to be added to icon.\n\t\t */\n\t\ticonClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t\t */\n\t\ticonName: PropTypes.string,\n\t\t/**\n\t\t * Path to the icon. This will override any global icon settings.\n\t\t */\n\t\ticonPath: PropTypes.string,\n\t\t/**\n\t\t * If omitted, icon position is centered.\n\t\t */\n\t\ticonPosition: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * Determines the size of the icon.\n\t\t */\n\t\ticonSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t\t/**\n\t\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t\t */\n\t\ticonVariant: PropTypes.oneOf([\n\t\t\t'bare',\n\t\t\t'container',\n\t\t\t'border',\n\t\t\t'border-filled',\n\t\t\t'more',\n\t\t\t'global-header',\n\t\t]),\n\t\t/**\n\t\t * Id string applied to button node.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n\t\t */\n\t\tinverse: PropTypes.bool,\n\t\t/**\n\t\t * Visible label on the button. If the button is an icon button with no label, you must use the <code>assistiveText.icon</code> prop.\n\t\t */\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * Triggered when focus is removed.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the button is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Triggered when component is focused.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed down\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed and released\n\t\t */\n\t\tonKeyPress: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is released\n\t\t */\n\t\tonKeyUp: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse button is pressed down\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow hovers\n\t\t */\n\t\tonMouseEnter: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow no longer hovers\n\t\t */\n\t\tonMouseLeave: PropTypes.func,\n\t\t/**\n\t\t * If true, button scales to 100% width on small form factors.\n\t\t */\n\t\tresponsive: PropTypes.bool,\n\t\t/**\n\t\t * Write <code>\"-1\"</code> if you don't want the user to tab to the button.\n\t\t */\n\t\ttabIndex: PropTypes.string,\n\t\t/**\n\t\t * Button type\n\t\t */\n\t\ttype: PropTypes.oneOf(['reset', 'submit', 'button']),\n\t\t/**\n\t\t * HTML title attribute\n\t\t */\n\t\ttitle: PropTypes.string,\n\t\t/**\n\t\t * [Deprecated] Tooltip on button. Button should be a child of `Tooltip` instead.\n\t\t */\n\t\ttooltip: PropTypes.node,\n\t\t/**\n\t\t * Different types of buttons\n\t\t */\n\t\tvariant: PropTypes.oneOf([\n\t\t\t'base',\n\t\t\t'link',\n\t\t\t'neutral',\n\t\t\t'brand',\n\t\t\t'destructive',\n\t\t\t'success',\n\t\t\t'icon',\n\t\t]),\n\t},\n\n\tgetDefaultProps () {\n\t\treturn defaultProps;\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(BUTTON, this.props);\n\t},\n\n\tgetClassName () {\n\t\tconst isIcon = this.props.variant === 'icon';\n\n\t\tlet iconVariant = this.props.iconVariant;\n\t\tconst iconMore = iconVariant === 'more';\n\t\tconst iconBorder = iconVariant === 'border';\n\t\tconst iconGlobalHeader = iconVariant === 'global-header';\n\n\t\tconst showButtonVariant =\n\t\t\t(this.props.variant !== 'base' &&\n\t\t\t\t!iconVariant &&\n\t\t\t\t!this.props.inverse &&\n\t\t\t\tthis.props.variant !== 'link') ||\n\t\t\ticonVariant === 'bare';\n\t\tconst plainInverseBtn = this.props.inverse && !isIcon;\n\t\tconst plainInverseIcon =\n\t\t\tthis.props.inverse && isIcon && !iconMore && !iconBorder;\n\t\tconst moreInverseIcon = this.props.inverse && iconMore;\n\t\tconst borderInverseIcon = this.props.inverse && iconBorder;\n\n\t\t// After hijacking `iconVariant` to let `Button` know it's in the header, we reset to container style for the actual button CSS.\n\t\tif (iconVariant === 'global-header') {\n\t\t\ticonVariant = 'container';\n\t\t}\n\n\t\treturn classNames(\n\t\t\t{\n\t\t\t\t'slds-button': this.props.variant !== 'link',\n\t\t\t\t[`slds-button--${this.props.variant}`]: showButtonVariant,\n\t\t\t\t'slds-button--inverse': plainInverseBtn,\n\t\t\t\t'slds-button--icon-inverse': plainInverseIcon || moreInverseIcon,\n\t\t\t\t'slds-button--icon-border-inverse': borderInverseIcon,\n\t\t\t\t[`slds-button--icon-${iconVariant}`]: iconVariant && !borderInverseIcon,\n\t\t\t\t'slds-global-header__button--icon': iconGlobalHeader,\n\t\t\t\t// If icon has a container, then we apply the icon size to the container not the svg. Icon size is medium by default, so we don't need to explicitly render it here.\n\t\t\t\t[`slds-button--icon-${this.props.iconSize}`]:\n\t\t\t\t\ticonVariant && this.props.iconSize !== 'medium',\n\t\t\t\t'slds-button--reset': this.props.variant === 'link',\n\t\t\t\t'slds-text-link': this.props.variant === 'link',\n\t\t\t},\n\t\t\tthis.props.className\n\t\t);\n\t},\n\n\thandleClick (event) {\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(event, {});\n\t\t}\n\t},\n\n\trenderIcon (name) {\n\t\tconst iconSize =\n\t\t\tthis.props.iconSize === '' || this.props.iconVariant\n\t\t\t\t? null\n\t\t\t\t: this.props.iconSize;\n\t\treturn (\n\t\t\t<ButtonIcon\n\t\t\t\tcategory={this.props.iconCategory || 'utility'} // BREAKING CHANGE we will introduce in 1.0. For the moment, set default prop here if none specified.\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-global-header__icon':\n\t\t\t\t\t\t\tthis.props.iconVariant === 'global-header',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.iconClassName\n\t\t\t\t)}\n\t\t\t\thint={this.props.hint}\n\t\t\t\tinverse={this.props.inverse}\n\t\t\t\tname={name}\n\t\t\t\tpath={this.props.iconPath}\n\t\t\t\tposition={this.props.iconPosition}\n\t\t\t\tsize={iconSize}\n\t\t\t/>\n\t\t);\n\t},\n\n\trenderLabel () {\n\t\tconst iconOnly = this.props.iconName || this.props.iconPath;\n\t\tconst assistiveTextIcon =\n\t\t\ttypeof this.props.assistiveText === 'string'\n\t\t\t\t? this.props.assistiveText\n\t\t\t\t: {\n\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t...this.props.assistiveText,\n\t\t\t\t}.icon;\n\n\t\treturn iconOnly && assistiveTextIcon ? (\n\t\t\t<span className=\"slds-assistive-text\">{assistiveTextIcon}</span>\n\t\t) : (\n\t\t\tthis.props.label\n\t\t);\n\t},\n\n\trenderButton () {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-controls={this.props['aria-controls']}\n\t\t\t\taria-describedby={this.props['aria-describedby']}\n\t\t\t\taria-expanded={this.props['aria-expanded']}\n\t\t\t\taria-haspopup={this.props['aria-haspopup']}\n\t\t\t\tclassName={this.getClassName()}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tid={this.props.id}\n\t\t\t\tonBlur={this.props.onBlur}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\tonMouseDown={this.props.onMouseDown}\n\t\t\t\tonMouseEnter={this.props.onMouseEnter}\n\t\t\t\tonMouseLeave={this.props.onMouseLeave}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tif (this.props.buttonRef) {\n\t\t\t\t\t\tthis.props.buttonRef(component);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={this.props.title}\n\t\t\t\ttype={this.props.type}\n\t\t\t>\n\t\t\t\t{this.props.iconPosition === 'right' ? this.renderLabel() : null}\n\n\t\t\t\t{this.props.iconName || this.props.iconPath\n\t\t\t\t\t? this.renderIcon(this.props.iconName)\n\t\t\t\t\t: null}\n\t\t\t\t{this.props.iconVariant === 'more' ? (\n\t\t\t\t\t<ButtonIcon category=\"utility\" name=\"down\" size=\"x-small\" />\n\t\t\t\t) : null}\n\n\t\t\t\t{this.props.iconPosition === 'left' || !this.props.iconPosition\n\t\t\t\t\t? this.renderLabel()\n\t\t\t\t\t: null}\n\t\t\t\t{\n\t\t\t\t\tthis.props.children // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t</button>\n\t\t);\n\t},\n\n\t// This is present for backwards compatibility and should be removed at a future breaking change release. Please wrap a `Button` in a `PopoverTooltip` to achieve the same result. There will be an extra trigger `div` wrapping the `Button` though.\n\trenderTooltip () {\n\t\treturn (\n\t\t\t<PopoverTooltip content={this.props.tooltip}>\n\t\t\t\t{this.renderButton}\n\t\t\t</PopoverTooltip>\n\t\t);\n\t},\n\n\trender () {\n\t\treturn this.props.tooltip ? this.renderTooltip() : this.renderButton();\n\t},\n});\n\nexport default Button;\n"],"file":"index.js"}