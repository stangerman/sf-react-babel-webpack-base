{"version":3,"sources":["../../../.tmp-es/components/app-launcher/index.jsx"],"names":["React","createReactClass","PropTypes","classNames","isFunction","checkProps","Modal","APP_LAUNCHER","defaultProps","assistiveText","trigger","title","AppLauncher","displayName","propTypes","shape","string","children","node","isRequired","isOpen","bool","modalClassName","oneOfType","array","object","modalHeaderButton","noTruncate","onClose","func","search","triggerName","triggerOnClick","getDefaultProps","getInitialState","componentWillMount","props","openAppLauncher","event","setState","closeAppLauncher","renderSearch","returnVal","component","focusedOnSearch","input","querySelector","setTimeout","focus","render","undefined","state","style","maxWidth","customModalHeader","modalContentStaticHeight","triggerAssistiveText","minHeight"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # App Launcher Component\n\n// Based on SLDS v2.1.0-rc.2\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ## Children\nimport Modal from '../modal';\n\n// ## Constants\nimport { APP_LAUNCHER } from '../../utilities/constants';\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ttrigger: 'Open App Launcher',\n\t},\n\ttitle: 'App Launcher',\n};\n\n/**\n * The App Launcher allows the user to quickly access all the apps and functionality with their organization.\n * The App Launcher should generally only be used as a sub-component of the [Global Navigation Bar](/components/global-navigation-bar)\n *\n * Also note: App Launcher is not included in the standard component export. To import it, you must reference it directly via its path.\n * Example:\n * ```\n * import AppLauncher from 'design-system-react/components/app-launcher';\n * import AppLauncherTile from 'design-system-react/components/app-launcher/tile';\n * import AppLauncherSection from 'design-system-react/components/app-launcher/section';\n * ```\n *\n * USAGE EXAMPLE:\n * ```\n * <AppLauncher>\n * \t<AppLauncherSection>\n * \t\t<AppLauncherTile />\n * \t\t<AppLauncherTile />\n * \t\t<AppLauncherTile />\n * \t</AppLauncherSection>\n * \t<AppLauncherSection>\n * \t\t<AppLauncherTile />\n * \t\t<AppLauncherTile />\n * \t</AppLauncherSection>\n * </AppLauncher>\n * ```\n *\n * By default, `Modal`, a child component of App Launcher, will add `aria-hidden=true` to the `body` tag, but this disables some assistive technologies. To prevent this you can add the following to your application with `#mount` being the root node of your application that you would like to hide from assistive technologies when the `Modal` is open.\n * ```\n * import settings from 'design-system-react/components/settings';\n * settings.setAppElement('#mount');\n * ```\n */\nconst AppLauncher = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: APP_LAUNCHER,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `trigger`: This is a visually hidden label for the app launcher icon.\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\ttrigger: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * One or more `<AppLauncherSection />`s each containing one or more `<AppLauncherTile />`s\n\t\t */\n\t\tchildren: PropTypes.node.isRequired,\n\t\t/**\n\t\t * Control the open/close state of the App Launcher\n\t\t */\n\t\tisOpen: PropTypes.bool,\n\t\t/**\n\t\t * CSS classes to be added to App Launcher Modal.\n\t\t */\n\t\tmodalClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Button that exists in the upper right hand corner of the App Launcher modal\n\t\t */\n\t\tmodalHeaderButton: PropTypes.node,\n\t\t/**\n\t\t * Allows longer application names without truncating them.\n\t\t */\n\t\tnoTruncate: PropTypes.bool,\n\t\t/**\n\t\t * Callback when the App Launcher Modal is closed\n\t\t */\n\t\tonClose: PropTypes.func,\n\t\t/**\n\t\t * Search bar for the Modal's header. Will typically be an instance of `design-system-react/input/search`\n\t\t */\n\t\tsearch: PropTypes.node,\n\t\t/**\n\t\t * Set the App Launcher's title text (for localization)\n\t\t */\n\t\ttitle: PropTypes.string,\n\t\t/**\n\t\t * This is typically the name of the cloud or application\n\t\t */\n\t\ttriggerName: PropTypes.node,\n\t\t/**\n\t\t * Callback when the App Launcher icon is clicked\n\t\t */\n\t\ttriggerOnClick: PropTypes.func,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn defaultProps;\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tisOpen: false,\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(APP_LAUNCHER, this.props);\n\t},\n\n\topenAppLauncher (event) {\n\t\tthis.setState({ isOpen: true });\n\n\t\tif (isFunction(this.props.triggerOnClick)) {\n\t\t\tthis.props.triggerOnClick(event, {});\n\t\t}\n\t},\n\n\tcloseAppLauncher (event) {\n\t\tthis.setState({ isOpen: false });\n\n\t\tif (isFunction(this.props.onClose)) {\n\t\t\tthis.props.onClose(event, {});\n\t\t}\n\t},\n\n\trenderSearch () {\n\t\tlet returnVal;\n\n\t\tif (this.props.search) {\n\t\t\treturnVal = (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slds-app-launcher__header-search\"\n\t\t\t\t\tref={(component) => {\n\t\t\t\t\t\tif (component) {\n\t\t\t\t\t\t\tif (!this.focusedOnSearch) {\n\t\t\t\t\t\t\t\tconst input = component.querySelector('input');\n\t\t\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\t\t\t// push to end of stack so click event doesn't blur the focus\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tinput.focus();\n\t\t\t\t\t\t\t\t\t\tthis.focusedOnSearch = true;\n\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.focusedOnSearch = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{this.props.search}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn returnVal;\n\t},\n\n\trender () {\n\t\tconst isOpen =\n\t\t\tthis.props.isOpen !== undefined ? this.props.isOpen : this.state.isOpen;\n\n\t\t// Should be removed in the future by adding a reset class of some sort.\n\t\tconst style = this.props.noTruncate ? { maxWidth: 'none' } : null;\n\n\t\tconst customModalHeader = (\n\t\t\t<div className=\"slds-grid slds-grid--align-spread slds-grid--vertical-align-center\">\n\t\t\t\t<h2 className=\"slds-text-heading--medium\">{this.props.title}</h2>\n\n\t\t\t\t{this.renderSearch()}\n\n\t\t\t\t{this.props.modalHeaderButton ? (\n\t\t\t\t\tthis.props.modalHeaderButton\n\t\t\t\t) : (\n\t\t\t\t\t<span className=\"slds-size--1-of-7\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\n\t\t// Not present in SLDS, but is consistent with other implementations of App Launcher. This also prevents resizing/jumping around when filtering. It will start clipping the modal close button at 600px viewport height.\n\t\tconst modalContentStaticHeight = '90%';\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tconst triggerAssistiveText =\n\t\t\tthis.props.triggerAssistiveText || assistiveText.trigger;\n\t\treturn (\n\t\t\t<div className=\"slds-context-bar__item slds-no-hover\" style={style}>\n\t\t\t\t<div className=\"slds-context-bar__icon-action\">\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tclassName=\"slds-button slds-icon-waffle_container slds-context-bar__button\"\n\t\t\t\t\t\tonClick={this.openAppLauncher}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-icon-waffle\">\n\t\t\t\t\t\t\t<span className=\"slds-r1\" />\n\t\t\t\t\t\t\t<span className=\"slds-r2\" />\n\t\t\t\t\t\t\t<span className=\"slds-r3\" />\n\t\t\t\t\t\t\t<span className=\"slds-r4\" />\n\t\t\t\t\t\t\t<span className=\"slds-r5\" />\n\t\t\t\t\t\t\t<span className=\"slds-r6\" />\n\t\t\t\t\t\t\t<span className=\"slds-r7\" />\n\t\t\t\t\t\t\t<span className=\"slds-r8\" />\n\t\t\t\t\t\t\t<span className=\"slds-r9\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{triggerAssistiveText && (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{triggerAssistiveText}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<Modal\n\t\t\t\t\tcontentClassName=\"slds-modal__content slds-app-launcher__content slds-p-around--medium\"\n\t\t\t\t\tcontentStyle={{ minHeight: modalContentStaticHeight }}\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonRequestClose={this.closeAppLauncher}\n\t\t\t\t\tcontainerClassName={classNames(\n\t\t\t\t\t\t'app-launcher',\n\t\t\t\t\t\tthis.props.modalClassName\n\t\t\t\t\t)}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\theader={customModalHeader}\n\t\t\t\t\theaderClassName=\"slds-app-launcher__header\"\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</Modal>\n\t\t\t\t{this.props.triggerName ? (\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-context-bar__label-action slds-context-bar__app-name',\n\t\t\t\t\t\t\t{ 'slds-truncate': !this.props.noTruncate }\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.triggerName}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default AppLauncher;\n"],"file":"index.js"}