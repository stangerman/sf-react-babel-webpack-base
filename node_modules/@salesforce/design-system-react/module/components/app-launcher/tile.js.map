{"version":3,"sources":["../../../.tmp-es/components/app-launcher/tile.jsx"],"names":["React","PropTypes","isFunction","classNames","Truncate","Highlighter","PopoverTooltip","APP_LAUNCHER_TILE","handleClick","event","href","onClick","preventDefault","AppLauncherTile","props","smallTile","size","className","iconNode","iconText","search","title","descriptionHeading","toUpperCase","moreLabel","description","isOpenTooltip","text","textTruncateChild","letterSpacing","displayName","defaultProps","propTypes","string","isRequired","oneOf","bool","oneOfType","array","object","func","node"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash.isfunction';\nimport classNames from 'classnames';\n\nimport Truncate from '../utilities/truncate';\n\n// ## Children\nimport Highlighter from '../utilities/highlighter';\nimport PopoverTooltip from '../popover-tooltip';\n\nimport { APP_LAUNCHER_TILE } from '../../utilities/constants';\n\nconst handleClick = (event, href, onClick) => {\n\tevent.preventDefault();\n\tonClick(event, { href });\n};\n\n/**\n * App Launcher Tiles provide information and links to a user's apps\n */\nconst AppLauncherTile = (props) => {\n\tconst smallTile = props.size === 'small' || false;\n\n\treturn (\n\t\t<a\n\t\t\thref={props.href} // eslint-disable-line no-script-url\n\t\t\tonClick={\n\t\t\t\tisFunction(props.onClick)\n\t\t\t\t\t? (event) => handleClick(event, props.href, props.onClick)\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-app-launcher__tile slds-text-link--reset',\n\t\t\t\t{ 'slds-app-launcher__tile--small': smallTile },\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-app-launcher__tile-figure', {\n\t\t\t\t\t'slds-app-launcher__tile-figure--small': smallTile,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{props.iconNode || (\n\t\t\t\t\t<span className=\"slds-avatar slds-avatar--large slds-align--absolute-center slds-icon-custom-27\">\n\t\t\t\t\t\t{props.iconText}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{smallTile ? (\n\t\t\t\t<div className=\"slds-app-launcher__tile-body slds-app-launcher__tile-body--small\">\n\t\t\t\t\t<p className=\"slds-truncate\">\n\t\t\t\t\t\t<Highlighter className=\"slds-text-link\" search={props.search}>\n\t\t\t\t\t\t\t{props.title}\n\t\t\t\t\t\t</Highlighter>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"slds-app-launcher__tile-body\">\n\t\t\t\t\t<Highlighter className=\"slds-text-link\" search={props.search}>\n\t\t\t\t\t\t{props.title}\n\t\t\t\t\t</Highlighter>\n\t\t\t\t\t<Truncate\n\t\t\t\t\t\tline={2}\n\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\tprops.descriptionHeading && props.descriptionHeading.toUpperCase()\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsuffix={props.moreLabel}\n\t\t\t\t\t\ttext={props.description}\n\t\t\t\t\t\ttextTruncateChild={\n\t\t\t\t\t\t\t<PopoverTooltip\n\t\t\t\t\t\t\t\talign=\"bottom\"\n\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t<Highlighter search={props.search}>\n\t\t\t\t\t\t\t\t\t\t{props.description}\n\t\t\t\t\t\t\t\t\t</Highlighter>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisOpen={props.isOpenTooltip}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"slds-app-launcher__tile-more slds-text-link\"\n\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.moreLabel}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</PopoverTooltip>\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper={(text, textTruncateChild) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{props.descriptionHeading && (\n\t\t\t\t\t\t\t\t\t// inline style override\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tclassName=\"slds-text-heading--label\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ letterSpacing: '0.025rem' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{props.descriptionHeading}{' '}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Highlighter search={props.search}>{text}</Highlighter>\n\t\t\t\t\t\t\t\t{textTruncateChild && ' '}\n\t\t\t\t\t\t\t\t{textTruncateChild}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</a>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nAppLauncherTile.displayName = APP_LAUNCHER_TILE;\n\nAppLauncherTile.defaultProps = {\n\thref: 'javascript:void(0);', // eslint-disable-line no-script-url\n\tsize: 'default',\n\tmoreLabel: ' More',\n};\n\n// ### Prop Types\nAppLauncherTile.propTypes = {\n\t/**\n\t * App name for the tile's title.\n\t */\n\ttitle: PropTypes.string.isRequired,\n\t/**\n\t * Size of the rendered tile.\n\t */\n\tsize: PropTypes.oneOf(['default', 'small']),\n\t/**\n\t * The description of the app. Not visible on small tiles.\n\t */\n\tdescription: PropTypes.string,\n\t/**\n\t * Heading for app description\n\t */\n\tdescriptionHeading: PropTypes.string,\n\t/**\n\t * The `href` attribute of the tile. Please pass in bookmarkable URLs from your routing library. If the `onClick` callback is specified this URL will be prevented from changing the browser's location.\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * Open the More Tooltip\n\t */\n\tisOpenTooltip: PropTypes.bool,\n\t/**\n\t * The localized text for the \"More information\" tooltip.\n\t */\n\tmoreLabel: PropTypes.string,\n\t/**\n\t * Class names to be added to the tile.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Function that will be executed when clicking on a tile\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * Icon node for app tile. Takes priority over `iconText`\n\t */\n\ticonNode: PropTypes.node,\n\t/**\n\t * Text to be used as an icon. Only renders if iconNode is undefined\n\t */\n\ticonText: PropTypes.string,\n\t/**\n\t * Text used to highlight content in app tiles\n\t */\n\tsearch: PropTypes.string,\n\t// TODO: allow for passing iconBackgroundColor\n\t// TODO: add Highlighter to Truncate text (https://github.com/ShinyChang/React-Text-Truncate/issues/32)\n};\n\nexport default AppLauncherTile;\n"],"file":"tile.js"}