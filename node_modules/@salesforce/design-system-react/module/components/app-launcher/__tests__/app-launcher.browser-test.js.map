{"version":3,"sources":["../../../../.tmp-es/components/app-launcher/__tests__/app-launcher.browser-test.jsx"],"names":["React","ReactDOM","ReactModal","expect","mount","ReactWrapper","assign","TestUtils","IconSettings","AppLauncher","AppLauncherTile","AppLauncherSection","Search","Button","should","chai","Simulate","describe","handles","appLauncher","appLauncherIcon","modal","defaultAppLauncherProps","isOpen","createAppLauncher","props","createElement","mountAppLauncher","find","portalNode","findDOMNode","node","portal","cleanDom","modalWrapper","document","documentElement","querySelectorAll","parentNode","removeChild","onClose","beforeEach","sinon","spy","modalClassName","modalHeaderButton","search","title","afterEach","it","exist","contains","to","equal","at","click","calledOnce","be","true","args","length","triggerOnClick","assistiveText","trigger","containsAllMatchingElements","className","include","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { expect } from 'chai';\nimport { mount, ReactWrapper } from 'enzyme';\nimport assign from 'lodash.assign';\nimport TestUtils from 'react-addons-test-utils';\n\nimport IconSettings from '../../icon-settings';\nimport AppLauncher from '../../app-launcher';\nimport AppLauncherTile from '../../app-launcher/tile';\nimport AppLauncherSection from '../../app-launcher/section';\nimport Search from '../../input/search';\nimport Button from '../../button';\n\n/* eslint-disable react/no-find-dom-node */\n\nconst should = chai.should();\n\nconst { Simulate } = TestUtils;\n\ndescribe('SLDS APP LAUNCHER *******************************************', () => {\n\tconst handles = {\n\t\tappLauncher: null,\n\t\tappLauncherIcon: null,\n\t\tmodal: null,\n\t};\n\n\tconst defaultAppLauncherProps = {\n\t\tisOpen: true,\n\t};\n\n\tconst createAppLauncher = (props) =>\n\t\tReact.createElement(\n\t\t\tAppLauncher,\n\t\t\tassign({}, defaultAppLauncherProps, props),\n\t\t\t<AppLauncherSection title=\"All Items\">\n\t\t\t\t<AppLauncherTile title=\"Marketing Cloud\" />\n\t\t\t\t<AppLauncherTile title=\"Support Cloud\" />\n\t\t\t</AppLauncherSection>\n\t\t);\n\n\tfunction mountAppLauncher (props) {\n\t\thandles.appLauncher = mount(\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t{createAppLauncher(props)}\n\t\t\t</IconSettings>\n\t\t);\n\n\t\thandles.appLauncherIcon = handles.appLauncher.find(\n\t\t\t'.slds-context-bar__icon-action'\n\t\t);\n\n\t\t/*\n\t\t * How to write tests for react-modal using portal\n\t\t * http://remarkablemark.org/blog/2017/05/17/testing-react-modal/\n\t\t */\n\t\tconst portalNode = ReactDOM.findDOMNode(\n\t\t\thandles.appLauncher.find(ReactModal).node.portal\n\t\t); // eslint-disable-line react/no-find-dom-node\n\n\t\t// Wrap the modal portal in an Enzyme wrapper\n\t\thandles.modal = new ReactWrapper(\n\t\t\thandles.appLauncher.find(ReactModal).node.portal,\n\t\t\ttrue\n\t\t);\n\t}\n\n\tfunction cleanDom () {\n\t\t// Removes the modal container element from the bottom of the DOM, this will prevent the 'setState' errors\n\t\t// gotta be a better way to do this..\n\t\tconst modalWrapper = document.documentElement.querySelectorAll(\n\t\t\t'.ReactModalPortal'\n\t\t)[0];\n\n\t\tif (modalWrapper) {\n\t\t\tmodalWrapper.parentNode.removeChild(modalWrapper);\n\t\t}\n\t}\n\n\t// ///////////////////////\n\t// ////// T O D O ////////\n\t// ///////////////////////\n\t// APP LAUNCHER -----\n\t// tabs?\n\t// if you pass a isOpen prop, you must control the component with it (this.state.isOpen will now work)\n\t// (#591, waiting on #590) modal content has classes: slds-modal__content slds-app-launcher__content slds-p-around--medium\n\n\tdescribe('App Launcher', () => {\n\t\tlet onClose;\n\n\t\tbeforeEach(() => {\n\t\t\tonClose = sinon.spy();\n\n\t\t\tmountAppLauncher({\n\t\t\t\tmodalClassName: 'custom-modal-class',\n\t\t\t\tmodalHeaderButton: <Button label=\"App Exchange\" />,\n\t\t\t\tonClose,\n\t\t\t\tsearch: <Search assistiveText=\"Find an app\" />,\n\t\t\t\ttitle: 'App Launcher!',\n\t\t\t});\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tcleanDom();\n\t\t});\n\n\t\tit('renders modal', () => {\n\t\t\tshould.exist(handles.modal);\n\t\t});\n\n\t\tit('renders custom modal class', () => {\n\t\t\tshould.exist(handles.modal.find('.custom-modal-class'));\n\t\t});\n\n\t\tit('renders modal header', () => {\n\t\t\tshould.exist(handles.modal.find('.slds-app-launcher__header'));\n\t\t});\n\n\t\tit('app launcher title can be set', () => {\n\t\t\texpect(\n\t\t\t\thandles.modal.contains(\n\t\t\t\t\t<h2 className=\"slds-text-heading--medium\">App Launcher!</h2>\n\t\t\t\t)\n\t\t\t).to.equal(true);\n\t\t});\n\n\t\tit('renders search bar', () => {\n\t\t\tshould.exist(handles.modal.find(Search));\n\t\t});\n\n\t\tit('renders search bar with proper class', () => {\n\t\t\tshould.exist(handles.modal.find('.slds-app-launcher__header-search'));\n\t\t});\n\n\t\tit('renders `modalHeaderButton`', () => {\n\t\t\tshould.exist(handles.modal.find(Button).at(1));\n\t\t});\n\n\t\tit('closing modal fires callback', () => {\n\t\t\tSimulate.click(handles.modal.find('.slds-modal__close').node);\n\t\t\texpect(onClose.calledOnce).to.be.true; // eslint-disable-line no-unused-expressions\n\t\t});\n\n\t\tit('close modal callback receives original event as arg', () => {\n\t\t\tSimulate.click(handles.modal.find('.slds-modal__close').node);\n\t\t\texpect(onClose.args.length).to.equal(1);\n\t\t});\n\n\t\tit('renders modal content', () => {\n\t\t\tshould.exist(\n\t\t\t\thandles.modal.find(\n\t\t\t\t\t'.slds-modal__content .slds-app-launcher__content .slds-p-around--medium'\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tit('app launcher can be passed children', () => {\n\t\t\tshould.exist(handles.modal.find('SLDSAppLauncherSection'));\n\t\t\texpect(handles.modal.find('SLDSAppLauncherTile').length).to.equal(2);\n\t\t});\n\t});\n\n\tdescribe('App Launcher Icon', () => {\n\t\tlet triggerOnClick;\n\n\t\tbeforeEach(() => {\n\t\t\ttriggerOnClick = sinon.spy();\n\n\t\t\tmountAppLauncher({\n\t\t\t\tassistiveText: { trigger: 'Custom Icon Assistive Text' },\n\t\t\t\ttriggerOnClick,\n\t\t\t});\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tcleanDom();\n\t\t});\n\n\t\tit('renders App Launcer icon', () => {\n\t\t\tshould.exist(handles.appLauncherIcon);\n\t\t});\n\n\t\tit('renders all App Launcher dots', () => {\n\t\t\texpect(\n\t\t\t\thandles.appLauncherIcon\n\t\t\t\t\t.find('.slds-icon-waffle')\n\t\t\t\t\t.containsAllMatchingElements([\n\t\t\t\t\t\t<span className=\"slds-r1\" />,\n\t\t\t\t\t\t<span className=\"slds-r2\" />,\n\t\t\t\t\t\t<span className=\"slds-r3\" />,\n\t\t\t\t\t\t<span className=\"slds-r4\" />,\n\t\t\t\t\t\t<span className=\"slds-r5\" />,\n\t\t\t\t\t\t<span className=\"slds-r6\" />,\n\t\t\t\t\t\t<span className=\"slds-r7\" />,\n\t\t\t\t\t\t<span className=\"slds-r8\" />,\n\t\t\t\t\t\t<span className=\"slds-r9\" />,\n\t\t\t\t\t])\n\t\t\t).to.equal(true);\n\t\t});\n\n\t\tit('App Launcher Icon link has proper classes', () => {\n\t\t\texpect(handles.appLauncherIcon.find('button').node.className).to.include(\n\t\t\t\t'slds-icon-waffle_container slds-context-bar__button'\n\t\t\t);\n\t\t});\n\n\t\tit('clicking App Launcher Icon fires callback', () => {\n\t\t\tSimulate.click(handles.appLauncherIcon.find('button').node);\n\t\t\texpect(triggerOnClick.calledOnce).to.be.true; // eslint-disable-line no-unused-expressions\n\t\t});\n\n\t\tit('App Launcher Icon callback receives original event as arg', () => {\n\t\t\tSimulate.click(handles.appLauncherIcon.find('button').node);\n\t\t\texpect(triggerOnClick.args.length).to.equal(1);\n\t\t});\n\n\t\tit('renders assistive text from prop', () => {\n\t\t\texpect(\n\t\t\t\thandles.appLauncherIcon.find('.slds-assistive-text').text()\n\t\t\t).to.equal('Custom Icon Assistive Text');\n\t\t});\n\t});\n});\n"],"file":"app-launcher.browser-test.js"}