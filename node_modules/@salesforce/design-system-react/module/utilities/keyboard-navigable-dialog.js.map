{"version":3,"sources":["../../.tmp-es/utilities/keyboard-navigable-dialog.js"],"names":["ReactDOM","KEYS","internalHandleClick","trigger","eventTarget","handleClick","findDOMNode","event","KeyboardNavigableDialog","isOpen","keyCode","toggleOpen","ESCAPE","ENTER"],"mappings":"AAAA;;AACA;AAEA;;AAEA;;;;;;;;;;;AAYA;AAEA;AACA,OAAOA,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA;;AAEA,IAAMC,sBAAsB,SAAtBA,mBAAsB,OAA2C;AAAA,MAAxCC,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AACtE,MAAIF,WAAWH,SAASM,WAAT,CAAqBH,OAArB,MAAkCC,WAAjD,EAA8D;AAC7D;AACAC,gBAAYE,KAAZ;AACA;AACD,CALD;;AAOA,IAAMC,0BAA0B,SAA1BA,uBAA0B,QAO1B;AAAA,MANLC,MAMK,SANLA,MAMK;AAAA,MALLJ,WAKK,SALLA,WAKK;AAAA,MAJLK,OAIK,SAJLA,OAIK;AAAA,MAHLN,WAGK,SAHLA,WAGK;AAAA,MAFLD,OAEK,SAFLA,OAEK;AAAA,MADLQ,UACK,SADLA,UACK;;AACL,UAAQD,OAAR;AACC,SAAKT,KAAKW,MAAV;AACC,UAAIH,MAAJ,EAAY;AACXE;AACA;;AACD;;AACD,SAAKV,KAAKY,KAAV;AACC,UAAI,CAACJ,MAAL,EAAa;AACZP,4BAAoB;AACnBC,0BADmB;AAEnBC,kCAFmB;AAGnBC;AAHmB,SAApB;AAKA;;AACD;;AACD;AACC;AAhBF;AAkBA,CA1BD;;AA4BA,eAAeG,uBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Assistive Technology / Keyboard Navigable Trait for Dialogs with Tabbable content\n\n/*\n * Guidelines for Popover\n *\n * - Focus is trapped. Tabbing to an index outside of the dialog is not allowed. Popover must be closed first via ESC.\n * - There should always be a focusable element inside, to place user focus on such as a close button\n * - Must be dismissible via ESC and a close button\n * - Uses tabIndex in wrapper and has tabbable items within it despite being outside document flow.\n * - Entire popover receives focus when opened and has a aria-labelledby that points to the header id, so it will read the heading,\n * - Must return focus to trigger after closing.\n * - F6 will allow the user to keep popover open and go back to tabbing in “app-context” instead of “dialog-context.” (not implemented, yet)\n */\n\n// ## Dependencies\n\n// ### React\nimport ReactDOM from 'react-dom';\n\n// ### Event Helpers\nimport KEYS from './key-code';\n\n/* eslint-disable react/no-find-dom-node */\n\nconst internalHandleClick = ({ trigger, eventTarget, handleClick }) => {\n\tif (trigger && ReactDOM.findDOMNode(trigger) === eventTarget) {\n\t\t// eslint-disable-line react/no-find-dom-node\n\t\thandleClick(event);\n\t}\n};\n\nconst KeyboardNavigableDialog = ({\n\tisOpen,\n\thandleClick,\n\tkeyCode,\n\teventTarget,\n\ttrigger,\n\ttoggleOpen,\n}) => {\n\tswitch (keyCode) {\n\t\tcase KEYS.ESCAPE:\n\t\t\tif (isOpen) {\n\t\t\t\ttoggleOpen();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase KEYS.ENTER:\n\t\t\tif (!isOpen) {\n\t\t\t\tinternalHandleClick({\n\t\t\t\t\ttrigger,\n\t\t\t\t\teventTarget,\n\t\t\t\t\thandleClick,\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport default KeyboardNavigableDialog;\n"],"file":"keyboard-navigable-dialog.js"}