{"version":3,"sources":["../../.tmp-es/utilities/dom.js"],"names":["React","flatMapChildren","children","iterator","result","go","xs","Children","map","child","push","type","props","hasChild","name","flag","textContent","join","helpers"],"mappings":"AAAA;;AACA;;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;AAGA,SAASC,eAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;AAC7C,MAAMC,SAAS,EAAf;;AACA,WAASC,EAAT,CAAaC,EAAb,EAAiB;AAChB,WAAON,MAAMO,QAAN,CAAeC,GAAf,CAAmBF,EAAnB,EAAuB,UAACG,KAAD,EAAW;AACxCL,aAAOM,IAAP,CAAYP,SAASM,KAAT,CAAZ;AACA,UAAIA,MAAME,IAAV,EAAgBN,GAAGI,MAAMG,KAAN,CAAYV,QAAf;AAChB,KAHM,CAAP;AAIA;;AACDG,KAAGH,QAAH;AACA,SAAOE,MAAP;AACA;AAED;;;;;AAGA,SAASS,QAAT,CAAmBX,QAAnB,EAA6BY,IAA7B,EAAmC;AAClC,MAAIC,OAAO,KAAX;AACAd,kBAAgBC,QAAhB,EAA0B,UAACO,KAAD,EAAW;AACpCM,WAAOA,QAASN,MAAME,IAAN,IAAcF,MAAME,IAAN,CAAWG,IAAX,KAAoBA,IAAlD;AACA,GAFD;AAGA,SAAOC,IAAP;AACA,C,CAED;;;AACA,SAASC,WAAT,CAAsBd,QAAtB,EAAgC;AAC/B,SAAOD,gBAAgBC,QAAhB,EAA0B,UAACO,KAAD,EAAW;AAC3C;AACA,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP;AAC/B,GAHM,EAGJQ,IAHI,CAGC,GAHD,CAAP;AAIA;;AAED,IAAMC,UAAU;AAAEF,0BAAF;AAAeH;AAAf,CAAhB;AAEA,eAAeK,OAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable consistent-return */\n\nimport React from 'react';\n\n/**\n * Traverse all children\n */\nfunction flatMapChildren (children, iterator) {\n\tconst result = [];\n\tfunction go (xs) {\n\t\treturn React.Children.map(xs, (child) => {\n\t\t\tresult.push(iterator(child));\n\t\t\tif (child.type) go(child.props.children);\n\t\t});\n\t}\n\tgo(children);\n\treturn result;\n}\n\n/**\n * Perhaps there's a more pragmatic way to do this. Eventually, I suspect we'll have some utils to help find children.\n */\nfunction hasChild (children, name) {\n\tlet flag = false;\n\tflatMapChildren(children, (child) => {\n\t\tflag = flag || (child.type && child.type.name === name);\n\t});\n\treturn flag;\n}\n\n// findDOMNode complains so filter out strings from virtual dom\nfunction textContent (children) {\n\treturn flatMapChildren(children, (child) => {\n\t\t// eslint-disable-line consistent-return\n\t\tif (typeof child === 'string') return child;\n\t}).join(' ');\n}\n\nconst helpers = { textContent, hasChild };\n\nexport default helpers;\n"],"file":"dom.js"}