{"version":3,"sources":["../../../.tmp-es/utilities/warning/url-exists.js"],"names":["warning","urlExists","process","env","NODE_ENV","hasWarned","hasExecuted","warn","control","url","comment","res","status","additionalComment","shouldWarn","window","fetch","then","XMLHttpRequest","http","open","send"],"mappings":"AAAA;;AACA;;AAEA;;AACA;AAEA;AACA,OAAOA,OAAP,MAAoB,SAApB;;AAEA,IAAIC,YAAY,qBAAY,CAAE,CAA9B;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,MAAMC,YAAY,EAAlB;AACA,MAAIC,WAAJ;;AAEA,MAAMC,OAAO,SAAPA,IAAO,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf;AAAA,WAA2B,UAACC,GAAD,EAAS;AAChDL,oBAAc,IAAd;;AACA,UAAIK,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACvB,YAAMC,oBAAoBH,qBAAcA,OAAd,IAA0B,EAApD;AACA;;AACAV,gBACC,CAACS,GADF,4CAEoCA,GAFpC,iYAEsaI,iBAFta;AAIA;;AACAR,4BAAaG,OAAb,cAA+B,CAAC,CAACC,GAAjC;AACA;AACD,KAZY;AAAA,GAAb;;AAcA,MAAMK,aAAa,SAAbA,UAAa,CAACN,OAAD;AAAA,WAClB,CAACF,WAAD,IACA,CAACD,oBAAaG,OAAb,WADD,IAEA,OAAOO,MAAP,KAAkB,WAFlB,IAGAb,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAJP;AAAA,GAAnB;;AAMA,MAAI,OAAOY,KAAP,KAAiB,UAArB,EAAiC;AAChCf,gBAAY,mBAAUO,OAAV,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AAC5C,UAAII,WAAWN,OAAX,CAAJ,EAAyB;AACxBQ,cAAMP,GAAN,EAAWQ,IAAX,CAAgBV,KAAKC,OAAL,EAAcC,GAAd,EAAmBC,OAAnB,CAAhB;AACA;AACD,KAJD;AAKA,GAND,MAMO;AACN;AACAT,gBAAY,mBAAUO,OAAV,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AAC5C,UAAII,WAAWN,OAAX,KAAuBU,cAA3B,EAA2C;AAC1C,YAAMC,OAAO,IAAID,cAAJ,EAAb;AACAC,aAAKC,IAAL,CAAU,KAAV,EAAiBX,GAAjB,EAAsB,KAAtB;AACAU,aAAKE,IAAL;AACAd,aAAKC,OAAL,EAAcC,GAAd,EAAmBC,OAAnB,EAA4BS,IAA5B;AACA;AACD,KAPD;AAQA;AACD;;AAED,eAAelB,SAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n/* global XMLHttpRequest, window */\n\n// This function does an \"AJAX\" request to warn users on how to setup their icon path.\nimport warning from 'warning';\n\nlet urlExists = function () {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\tlet hasExecuted;\n\n\tconst warn = (control, url, comment) => (res) => {\n\t\thasExecuted = true;\n\t\tif (res.status === 404) {\n\t\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\t\t/* eslint-disable max-len */\n\t\t\twarning(\n\t\t\t\t!url,\n\t\t\t\t`The icon asset was not found at ${url}. Make sure the path to the icon asset is correct. You can set the icon path by importing the IconSettings component, \\`<IconSettings iconPath=[/assets/icons]>\\` from \\`components/iconSettings\\`, and wrap that component around your entire app or around individual components using icons. If you are using the \\`<Icon>\\` component, you can also pass the url to \\`this.props.path\\`.${additionalComment}`\n\t\t\t);\n\t\t\t/* eslint-enable max-len */\n\t\t\thasWarned[`${control}-path`] = !!url;\n\t\t}\n\t};\n\n\tconst shouldWarn = (control) =>\n\t\t!hasExecuted &&\n\t\t!hasWarned[`${control}-path`] &&\n\t\ttypeof window !== 'undefined' &&\n\t\tprocess.env.NODE_ENV !== 'test';\n\n\tif (typeof fetch === 'function') {\n\t\turlExists = function (control, url, comment) {\n\t\t\tif (shouldWarn(control)) {\n\t\t\t\tfetch(url).then(warn(control, url, comment));\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// Using XMLHttpRequest can cause problems in non-browser environments. This should be completely removed in production environment and should not execute in a testing environment.\n\t\turlExists = function (control, url, comment) {\n\t\t\tif (shouldWarn(control) && XMLHttpRequest) {\n\t\t\t\tconst http = new XMLHttpRequest();\n\t\t\t\thttp.open('GET', url, false);\n\t\t\t\thttp.send();\n\t\t\t\twarn(control, url, comment)(http);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default urlExists;\n"],"file":"url-exists.js"}