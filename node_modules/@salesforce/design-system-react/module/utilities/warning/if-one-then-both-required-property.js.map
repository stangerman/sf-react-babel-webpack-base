{"version":3,"sources":["../../../.tmp-es/utilities/warning/if-one-then-both-required-property.js"],"names":["warning","ifOneThenBothRequiredProperty","process","env","NODE_ENV","hasWarned","control","props","selectedProps","comment","additionalComment","bothOrNoneAreSet","keys","Object","values","map","key","allTruthy","every","element","allFalsey","join"],"mappings":"AAAA;;AACA;;AAEA;AAEA;AACA,OAAOA,OAAP,MAAoB,SAApB;AAEA,IAAIC,6BAAJ;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,MAAMC,YAAY,EAAlB;;AAEAJ,kCAAgC,uCAC/BK,OAD+B,EAE/BC,KAF+B,EAG/BC,aAH+B,EAI/BC,OAJ+B,EAK9B;AACD,QAAMC,oBAAoBD,qBAAcA,OAAd,IAA0B,EAApD;AACA,QAAIE,mBAAmB,KAAvB;AACA,QAAMC,OAAOC,OAAOD,IAAP,CAAYJ,aAAZ,CAAb;AACA,QAAMM,SAASF,KAAKG,GAAL,CAAS,UAACC,GAAD;AAAA,aAASR,cAAcQ,GAAd,CAAT;AAAA,KAAT,CAAf;AACA,QAAMC,YAAYH,OAAOI,KAAP,CAAa,UAACC,OAAD;AAAA,aAAa,CAAC,CAACA,OAAf;AAAA,KAAb,CAAlB;AACA,QAAMC,YAAYN,OAAOI,KAAP,CAAa,UAACC,OAAD;AAAA,aAAa,CAACA,OAAd;AAAA,KAAb,CAAlB;AAEAR,uBAAmBM,aAAaG,SAAhC;;AAEA,QAAI,CAACf,UAAUC,OAAV,CAAL,EAAyB;AACxB;AACAN,cACCW,gBADD,gIAEwHL,OAFxH,gBAEqIM,KAAKS,IAAL,EAFrI,eAEqJX,iBAFrJ;AAIA;;AACAL,gBAAUC,OAAV,IAAqB,CAAC,CAACE,aAAvB;AACA;AACD,GAxBD;AAyBA,CA5BD,MA4BO;AACNP,kCAAgC,yCAAY,CAAE,CAA9C;AACA;;AAED,eAAeA,6BAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n// This function will deliver an error message to the browser console one property is used but not both that are required. Either use neither or both properties.\nimport warning from 'warning';\n\nlet ifOneThenBothRequiredProperty;\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\tifOneThenBothRequiredProperty = function (\n\t\tcontrol,\n\t\tprops,\n\t\tselectedProps,\n\t\tcomment\n\t) {\n\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\tlet bothOrNoneAreSet = false;\n\t\tconst keys = Object.keys(selectedProps);\n\t\tconst values = keys.map((key) => selectedProps[key]);\n\t\tconst allTruthy = values.every((element) => !!element);\n\t\tconst allFalsey = values.every((element) => !element);\n\n\t\tbothOrNoneAreSet = allTruthy || allFalsey;\n\n\t\tif (!hasWarned[control]) {\n\t\t\t/* eslint-disable max-len */\n\t\t\twarning(\n\t\t\t\tbothOrNoneAreSet,\n\t\t\t\t`[Design System React] If one of the following props are used, then both of the following properties are required by ${control}: [${keys.join()}].${additionalComment}`\n\t\t\t);\n\t\t\t/* eslint-enable max-len */\n\t\t\thasWarned[control] = !!selectedProps;\n\t\t}\n\t};\n} else {\n\tifOneThenBothRequiredProperty = function () {};\n}\n\nexport default ifOneThenBothRequiredProperty;\n"],"file":"if-one-then-both-required-property.js"}