{"version":3,"sources":["../../../.tmp-es/utilities/warning/has-children-without-display-name-of.js"],"names":["React","warning","hasChildrenWithoutDisplayNameOf","process","env","NODE_ENV","hasWarned","control","children","displayName","comment","additionalComment","childrenWithoutSelectedDisplayName","Children","forEach","child","type","push","hasChildrenWithoutSelectedDisplayName","length"],"mappings":"AAAA;;AACA;;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,IAAIC,kCAAkC,2CAAY,CAAE,CAApD;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,MAAMC,YAAY,EAAlB,CAD0C,CAG1C;;AACAJ,oCAAkC,yCACjCK,OADiC,EAEjCC,QAFiC,EAGjCC,WAHiC,EAIjCC,OAJiC,EAKhC;AACD,QAAMC,oBAAoBD,qBAAcA,OAAd,IAA0B,EAApD;AACA,QAAME,qCAAqC,EAA3C;AAEAZ,UAAMa,QAAN,CAAeC,OAAf,CAAuBN,QAAvB,EAAiC,UAACO,KAAD,EAAW;AAC3C,UAAIA,SAASA,MAAMC,IAAN,CAAWP,WAAX,KAA2BA,WAAxC,EAAqD;AACpDG,2CAAmCK,IAAnC,CAAwCF,KAAxC;AACA;AACD,KAJD;;AAMA,QAAI,CAACT,UAAUC,OAAV,CAAL,EAAyB;AACxB,UAAMW,wCACLN,mCAAmCO,MAAnC,GAA4C,CAD7C;AAEA;;AACAlB,cACCiB,qCADD,kFAE0EX,OAF1E,yFAEkKE,WAFlK,6GAEkRE,iBAFlR;AAIA;;AACAL,gBAAUC,OAAV,IAAqB,CAAC,CAACW,qCAAvB;AACA;AACD,GA1BD;AA2BA;;AAED,eAAehB,+BAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\nimport React from 'react';\n\n// This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\nimport warning from 'warning';\n\nlet hasChildrenWithoutDisplayNameOf = function () {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\t// TODO: allow `displayName` to be an array of displayNames\n\thasChildrenWithoutDisplayNameOf = function (\n\t\tcontrol,\n\t\tchildren,\n\t\tdisplayName,\n\t\tcomment\n\t) {\n\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\tconst childrenWithoutSelectedDisplayName = [];\n\n\t\tReact.Children.forEach(children, (child) => {\n\t\t\tif (child && child.type.displayName !== displayName) {\n\t\t\t\tchildrenWithoutSelectedDisplayName.push(child);\n\t\t\t}\n\t\t});\n\n\t\tif (!hasWarned[control]) {\n\t\t\tconst hasChildrenWithoutSelectedDisplayName =\n\t\t\t\tchildrenWithoutSelectedDisplayName.length > 0;\n\t\t\t/* eslint-disable max-len */\n\t\t\twarning(\n\t\t\t\thasChildrenWithoutSelectedDisplayName,\n\t\t\t\t`[Design System React] Unable to use child components specified within ${control}. Please use a child component with a \\`displayName\\` class property value of ${displayName}. Children without that class property are ignored. Please review \\`children\\` prop documentation.${additionalComment}`\n\t\t\t);\n\t\t\t/* eslint-enable max-len */\n\t\t\thasWarned[control] = !!hasChildrenWithoutSelectedDisplayName;\n\t\t}\n\t};\n}\n\nexport default hasChildrenWithoutDisplayNameOf;\n"],"file":"has-children-without-display-name-of.js"}