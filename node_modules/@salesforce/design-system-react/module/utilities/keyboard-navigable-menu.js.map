{"version":3,"sources":["../../.tmp-es/utilities/keyboard-navigable-menu.js"],"names":["ReactDOM","escapeRegExp","isFunction","KEYS","noop","KeyBuffer","buffer","key","timeout","clearTimeout","undefined","setTimeout","itemIsSelectable","item","type","disabled","getNavigableItems","items","navigableItems","indexes","keyBuffer","Array","isArray","forEach","index","push","text","label","toLowerCase","keyboardNavigate","componentContext","currentFocusedIndex","isOpen","event","keyCode","onFocus","onSelect","target","toggleOpen","lastIndex","length","focusedIndex","ch","String","fromCharCode","test","openMenuKeys","ENTER","SPACE","UP","ESCAPE","trigger","findDOMNode","handleClick","navigableIndex","indexOf","DOWN","newNavigableIndex","pattern","consecutive","RegExp","substr","getMenu","componentRef","querySelector","getMenuItem","menuItemId","context","document","menuItem","getElementById","KeyboardNavigableMixin","componentWillMount","props","options","componentWillReceiveProps","nextProps","handleKeyboardNavigate","handleKeyboardFocus","state","setState","menu","getListItemId","focusMenuItem","scrollToMenuItem","menuId","getId","id","getElementsByTagName","focus","menuHeight","offsetHeight","menuTop","scrollTop","menuItemTop","offsetTop","menuBottom","menuItemBottom"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Keyboard Navigable Trait\n\n// ## Dependencies\n\n// ### React\nimport ReactDOM from 'react-dom';\n\n// ### escapeRegExp\nimport escapeRegExp from 'lodash.escaperegexp';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### Event Helpers\nimport KEYS from './key-code';\n\n/* eslint-disable react/no-find-dom-node */\n\nconst noop = () => {};\n\nexport function KeyBuffer () {\n\tthis.buffer = '';\n\n\treturn (key) => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = undefined;\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.buffer = '';\n\t\t}, 400);\n\n\t\tthis.buffer = this.buffer + key;\n\t\treturn this.buffer;\n\t};\n}\n\nexport function itemIsSelectable (item) {\n\treturn item.type !== 'header' && item.type !== 'divider' && !item.disabled;\n}\n\nexport function getNavigableItems (items) {\n\tconst navigableItems = [];\n\tnavigableItems.indexes = [];\n\tnavigableItems.keyBuffer = new KeyBuffer();\n\n\tif (Array.isArray(items)) {\n\t\titems.forEach((item, index) => {\n\t\t\tif (itemIsSelectable(item)) {\n\t\t\t\tnavigableItems.push({\n\t\t\t\t\tindex,\n\t\t\t\t\ttext: `${item.label}`.toLowerCase(),\n\t\t\t\t});\n\n\t\t\t\tnavigableItems.indexes.push(index);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn navigableItems;\n}\n\nexport function keyboardNavigate ({\n\tcomponentContext,\n\tcurrentFocusedIndex,\n\tisOpen,\n\tevent,\n\tkey,\n\tkeyCode,\n\tnavigableItems,\n\tonFocus,\n\tonSelect,\n\ttarget,\n\ttoggleOpen,\n}) {\n\tconst indexes = navigableItems.indexes;\n\tconst lastIndex = indexes.length - 1;\n\tlet focusedIndex;\n\tlet ch = key || String.fromCharCode(keyCode);\n\n\tif (/^[ -~]$/.test(ch)) {\n\t\tch = ch.toLowerCase();\n\t} else {\n\t\tch = null;\n\t}\n\n\tconst openMenuKeys =\n\t\tkeyCode === KEYS.ENTER || keyCode === KEYS.SPACE || keyCode === KEYS.UP;\n\n\tif (keyCode === KEYS.ESCAPE) {\n\t\tif (isOpen) toggleOpen();\n\t} else if (!isOpen) {\n\t\tfocusedIndex = indexes[0];\n\t\tif (openMenuKeys || ch) {\n\t\t\ttoggleOpen();\n\t\t}\n\t\tif (\n\t\t\topenMenuKeys &&\n\t\t\tcomponentContext.trigger &&\n\t\t\tReactDOM.findDOMNode(componentContext.trigger) === target\n\t\t) {\n\t\t\t// eslint-disable-line react/no-find-dom-node\n\t\t\tcomponentContext.handleClick(event);\n\t\t}\n\t} else if (keyCode === KEYS.ENTER || keyCode === KEYS.SPACE) {\n\t\tonSelect(currentFocusedIndex);\n\t} else {\n\t\tconst navigableIndex = indexes.indexOf(currentFocusedIndex);\n\n\t\tif (keyCode === KEYS.DOWN) {\n\t\t\tif (navigableIndex < lastIndex) {\n\t\t\t\tconst newNavigableIndex = navigableIndex + 1;\n\t\t\t\tfocusedIndex = indexes[newNavigableIndex];\n\t\t\t} else {\n\t\t\t\tfocusedIndex = indexes[0];\n\t\t\t}\n\t\t} else if (keyCode === KEYS.UP) {\n\t\t\tif (navigableIndex > 0) {\n\t\t\t\tconst newNavigableIndex = navigableIndex - 1;\n\t\t\t\tfocusedIndex = indexes[newNavigableIndex];\n\t\t\t} else {\n\t\t\t\tfocusedIndex = indexes[lastIndex];\n\t\t\t}\n\t\t} else if (ch) {\n\t\t\t// Combine subsequent keypresses\n\t\t\tconst pattern = navigableItems.keyBuffer(ch);\n\t\t\tlet consecutive = 0;\n\n\t\t\t// Support for navigating to the next option of the same letter with repeated presses of the same key\n\t\t\tif (\n\t\t\t\tpattern.length > 1 &&\n\t\t\t\tnew RegExp(`^[${escapeRegExp(ch)}]+$`).test(pattern)\n\t\t\t) {\n\t\t\t\tconsecutive = pattern.length;\n\t\t\t}\n\n\t\t\tnavigableItems.forEach((item) => {\n\t\t\t\tif (\n\t\t\t\t\t(focusedIndex === undefined &&\n\t\t\t\t\t\titem.text.substr(0, pattern.length) === pattern) ||\n\t\t\t\t\t(consecutive > 0 && item.text.substr(0, 1) === ch)\n\t\t\t\t) {\n\t\t\t\t\tconsecutive -= 1;\n\t\t\t\t\tfocusedIndex = item.index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonFocus(focusedIndex);\n\n\treturn focusedIndex;\n}\n\nfunction getMenu (componentRef) {\n\treturn ReactDOM.findDOMNode(componentRef).querySelector('ul.dropdown__list'); // eslint-disable-line react/no-find-dom-node\n}\n\nfunction getMenuItem (menuItemId, context = document) {\n\tlet menuItem;\n\n\tif (menuItemId) {\n\t\tmenuItem = context.getElementById(menuItemId);\n\t}\n\n\treturn menuItem;\n}\n\nexport const KeyboardNavigableMixin = {\n\tcomponentWillMount () {\n\t\tthis.navigableItems = getNavigableItems(this.props.options);\n\t},\n\n\tcomponentWillReceiveProps (nextProps) {\n\t\tif (nextProps.options) {\n\t\t\tthis.navigableItems = getNavigableItems(nextProps.options);\n\t\t}\n\t},\n\n\t// Handling open / close toggling is optional, and a default implementation is provided for handling focus, but selection _must_ be handled\n\thandleKeyboardNavigate ({\n\t\tevent,\n\t\tisOpen = true,\n\t\tkeyCode,\n\t\tonFocus = this.handleKeyboardFocus,\n\t\tonSelect,\n\t\ttarget,\n\t\ttoggleOpen = noop,\n\t}) {\n\t\tkeyboardNavigate({\n\t\t\tcomponentContext: this,\n\t\t\tcurrentFocusedIndex: this.state.focusedIndex,\n\t\t\tevent,\n\t\t\tisOpen,\n\t\t\tkeyCode,\n\t\t\tnavigableItems: this.navigableItems,\n\t\t\tonFocus,\n\t\t\tonSelect,\n\t\t\ttarget,\n\t\t\ttoggleOpen,\n\t\t});\n\t},\n\n\t// This is a bit of an anti-pattern, but it has the upside of being a nice default. Component authors can always override to only set state and do their own focusing in their subcomponents.\n\thandleKeyboardFocus (focusedIndex) {\n\t\tif (this.state.focusedIndex !== focusedIndex) {\n\t\t\tthis.setState({ focusedIndex });\n\t\t}\n\n\t\tconst menu = isFunction(this.getMenu) ? this.getMenu() : getMenu(this);\n\n\t\tconst menuItem = isFunction(this.getMenuItem)\n\t\t\t? this.getMenuItem(focusedIndex, menu)\n\t\t\t: getMenuItem(this.getListItemId(focusedIndex));\n\n\t\tif (menuItem) {\n\t\t\tthis.focusMenuItem(menuItem);\n\t\t\tthis.scrollToMenuItem(menu, menuItem);\n\t\t}\n\t},\n\n\tgetListItemId (index) {\n\t\tlet menuItemId;\n\n\t\tif (index !== undefined) {\n\t\t\tconst menuId = isFunction(this.getId) ? this.getId() : this.props.id;\n\t\t\tmenuItemId = `${menuId}-item-${index}`;\n\t\t}\n\n\t\treturn menuItemId;\n\t},\n\n\tfocusMenuItem (menuItem) {\n\t\tmenuItem.getElementsByTagName('a')[0].focus();\n\t},\n\n\tscrollToMenuItem (menu, menuItem) {\n\t\tif (menu && menuItem) {\n\t\t\tconst menuHeight = menu.offsetHeight;\n\n\t\t\tconst menuTop = menu.scrollTop;\n\t\t\tconst menuItemTop = menuItem.offsetTop - menu.offsetTop;\n\n\t\t\tif (menuItemTop < menuTop) {\n\t\t\t\tmenu.scrollTop = menuItemTop;\n\t\t\t} else {\n\t\t\t\tconst menuBottom = menuTop + menuHeight + menu.offsetTop;\n\t\t\t\tconst menuItemBottom =\n\t\t\t\t\tmenuItemTop + menuItem.offsetHeight + menu.offsetTop;\n\n\t\t\t\tif (menuItemBottom > menuBottom) {\n\t\t\t\t\tmenu.scrollTop = menuItemBottom - menuHeight - menu.offsetTop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport default KeyboardNavigableMixin;\n"],"file":"keyboard-navigable-menu.js"}