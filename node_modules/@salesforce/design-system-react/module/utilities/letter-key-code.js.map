{"version":3,"sources":["../../.tmp-es/utilities/letter-key-code.js"],"names":["keys","keyObjects","i","String","fromCharCode","key","keyCode","which"],"mappings":"AAAA,IAAMA,OAAO,EAAb,C,CAEA;AACA;;AACA,IAAMC,aAAa,EAAnB;;AAEA,KAAK,IAAIC,IAAI,EAAb,EAAiBA,KAAK,GAAtB,EAA2BA,KAAK,CAAhC,EAAmC;AAClCF,OAAKG,OAAOC,YAAP,CAAoBF,CAApB,CAAL,IAA+BA,CAA/B;AACAD,uBAAcE,OAAOC,YAAP,CAAoBF,CAApB,CAAd,KAA0C;AACzCG,mBAAQF,OAAOC,YAAP,CAAoBF,CAApB,CAAR,CADyC;AAEzCI,aAASJ,CAFgC;AAGzCK,WAAOL;AAHkC,GAA1C;AAKA;;AAED,eAAeF,IAAf;AACA,SAASC,UAAT","sourcesContent":["const keys = {};\n\n// Helpful for interaction/event tests. Use with simulate:\n// `nodes.input.simulate('keyDown', keyObjects.DOWN);`\nconst keyObjects = {};\n\nfor (let i = 65; i <= 122; i += 1) {\n\tkeys[String.fromCharCode(i)] = i;\n\tkeyObjects[`${String.fromCharCode(i)}`] = {\n\t\tkey: `${String.fromCharCode(i)}`,\n\t\tkeyCode: i,\n\t\twhich: i,\n\t};\n}\n\nexport default keys;\nexport { keyObjects };\n"],"file":"letter-key-code.js"}